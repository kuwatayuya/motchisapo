[
    {
        "id": "2618fdb18c108f25",
        "type": "tab",
        "label": "ロケーション管理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cc9e32934109e012",
        "type": "tab",
        "label": "入庫(page1)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fda19dfd2530881f",
        "type": "tab",
        "label": "移動・出庫(page2)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "287dfb52075392a3",
        "type": "tab",
        "label": "梱包(page10)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "13588b2cc197771c",
        "type": "tab",
        "label": "受入・出荷(page3)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6e800843b8042cf7",
        "type": "tab",
        "label": "出荷情報(page7)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "79cb1d1dae22282f",
        "type": "tab",
        "label": "入出庫移動履歴(page4)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "598b8043837fd2de",
        "type": "tab",
        "label": "出荷情報履歴(page8)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2872108165cbbc2c",
        "type": "tab",
        "label": "梱包作業履歴(page11)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d3321ed8b9250cb1",
        "type": "tab",
        "label": "棚卸(page5)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "41ea8b151ef715c6",
        "type": "tab",
        "label": "社員マスタ(page6)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c158cdacc7de9eea",
        "type": "tab",
        "label": "製品マスタ(page9)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8be7dd333bfef1af",
        "type": "tab",
        "label": "タイムスケジュール",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "79b1e6a981b74ef6",
        "type": "tab",
        "label": "変更依頼",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d1eb13dd09a2817",
        "type": "tab",
        "label": "梱包所要計画",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b66f02d0fce885f7",
        "type": "tab",
        "label": "検査依頼(page13)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2558d404ae0e72fe",
        "type": "tab",
        "label": "検査依頼履歴(page14)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ecb17089.54a8f",
        "type": "tab",
        "label": "フロー 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c5fffd2621f77512",
        "type": "tab",
        "label": "画像検査",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0bd82932d8e5f14d",
        "type": "group",
        "z": "2618fdb18c108f25",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b5f0b7e3b72748f1",
            "3881f35d9b34fa58",
            "385087e678fb6fbc",
            "8f424e57c2883c6c",
            "452bcd6064d95b4b",
            "ab295820db100f6f",
            "d0825de7821f1c4a",
            "4b787625975b14b9",
            "4132e157302f9501",
            "f4fa6ff4ef7bacff"
        ],
        "x": 54,
        "y": 39,
        "w": 872,
        "h": 202
    },
    {
        "id": "8614c7a5d71fe960",
        "type": "group",
        "z": "2618fdb18c108f25",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6f0712579fa950ff",
            "4b14f6a8670ab56f",
            "500e6e8762d03dc4",
            "3c198f9c994e2bc1",
            "1471ad6a4068877a"
        ],
        "x": 54,
        "y": 559,
        "w": 732,
        "h": 82
    },
    {
        "id": "0ed35a95be191e09",
        "type": "group",
        "z": "2618fdb18c108f25",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a505456fc11189c3",
            "6770c6492157f206",
            "fe2d5ccfa167a5ad"
        ],
        "x": 54,
        "y": 679,
        "w": 632,
        "h": 82
    },
    {
        "id": "dbfeb543461d5f6c",
        "type": "group",
        "z": "2618fdb18c108f25",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0f8c0ad77b221524",
            "a71cb13135052e44",
            "8c4b6c9bf2ca4ee9",
            "8aea2d4e5d61ab52",
            "951035c1cd941af0",
            "361203d65b99aa43",
            "886bcb56f5cc58a9",
            "99a70e3ff21f8183",
            "17c0dfe423a36f83",
            "acbf4faf7ed3895b",
            "fba816866acc2a48",
            "1f55f66d76e315e8",
            "a4f5eacd9bfd42fa",
            "c69985083cce9659",
            "cff357aeeaf2a1df",
            "30591719828d70ee",
            "a9cfaae58d890233",
            "6a7ce4c44b2fa0bc"
        ],
        "x": 54,
        "y": 279,
        "w": 1192,
        "h": 242
    },
    {
        "id": "ba8d1dad4fb9eb42",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#033f66",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#033f66",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#033f66",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#033f66",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#033f66",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#033f66",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#033f66",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "Arial,Arial,Helvetica,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "入出庫削除・在庫変更依頼",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "YYYY/MM/DD",
            "sizes": {
                "sx": 48,
                "sy": 90,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "93adc04920199006",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "employee",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "eae7675ec94dec0c",
        "type": "MySQLdatabase",
        "name": "location",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "location",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "2af1d373916e2211",
        "type": "websocket-listener",
        "path": "/submit-data",
        "wholemsg": "false"
    },
    {
        "id": "40f2985809626fe5",
        "type": "websocket-listener",
        "path": "inventory-search",
        "wholemsg": "false"
    },
    {
        "id": "cdbfbfa6674c7597",
        "type": "websocket-listener",
        "path": "/inventory-csvdata",
        "wholemsg": "false"
    },
    {
        "id": "63be7dd91989552b",
        "type": "websocket-listener",
        "path": "/log",
        "wholemsg": "false"
    },
    {
        "id": "cae0c25701915e6b",
        "type": "websocket-listener",
        "path": "/stock-search",
        "wholemsg": "false"
    },
    {
        "id": "4b49ddd65ffbe78d",
        "type": "websocket-listener",
        "path": "/stock-update",
        "wholemsg": "false"
    },
    {
        "id": "539c409da4fe05e1",
        "type": "websocket-listener",
        "path": "/check-csv",
        "wholemsg": "false"
    },
    {
        "id": "86a5928820d35da2",
        "type": "websocket-listener",
        "path": "/history-extraction",
        "wholemsg": "false"
    },
    {
        "id": "3aaf760a2f5e664a",
        "type": "websocket-listener",
        "path": "/shipping-search",
        "wholemsg": "false"
    },
    {
        "id": "c5c75f7ddf809773",
        "type": "websocket-listener",
        "path": "/batch-csv",
        "wholemsg": "false"
    },
    {
        "id": "ecc37325a6bd9f0f",
        "type": "websocket-listener",
        "path": "/shipping-infor",
        "wholemsg": "false"
    },
    {
        "id": "df938c43a785d779",
        "type": "websocket-listener",
        "path": "newshipping-infor",
        "wholemsg": "false"
    },
    {
        "id": "3de1a4c5fc90d71d",
        "type": "websocket-listener",
        "path": "/shipping-update",
        "wholemsg": "false"
    },
    {
        "id": "19295b283a270506",
        "type": "websocket-listener",
        "path": "/shipping-putitback",
        "wholemsg": "false"
    },
    {
        "id": "c5fb3aecbaa43f9c",
        "type": "websocket-listener",
        "path": "/shipping-report",
        "wholemsg": "false"
    },
    {
        "id": "f88ad96a249145b8",
        "type": "websocket-listener",
        "path": "/shippingreport-update",
        "wholemsg": "false"
    },
    {
        "id": "59baf45b8909c74b",
        "type": "websocket-listener",
        "path": "/shippingreport-log",
        "wholemsg": "false"
    },
    {
        "id": "3d93135a8fd86ba5",
        "type": "websocket-listener",
        "path": "/shippingheader-search",
        "wholemsg": "false"
    },
    {
        "id": "73e1367b81857c97",
        "type": "websocket-listener",
        "path": "/shippinglog-search",
        "wholemsg": "false"
    },
    {
        "id": "5ddd6053695398c1",
        "type": "websocket-listener",
        "path": "/shippingheaderlog-search",
        "wholemsg": "false"
    },
    {
        "id": "26abda6a37c3072e",
        "type": "websocket-listener",
        "path": "/shippinglog-infor",
        "wholemsg": "false"
    },
    {
        "id": "ab614c0f00b96c9d",
        "type": "websocket-listener",
        "path": "/shippinghistory-csvdata",
        "wholemsg": "false"
    },
    {
        "id": "c0782716b9f95dfa",
        "type": "websocket-listener",
        "path": "/delete-action",
        "wholemsg": "false"
    },
    {
        "id": "e047175b1b715e41",
        "type": "websocket-listener",
        "path": "/edit-action",
        "wholemsg": "false"
    },
    {
        "id": "936d8b1a33de44a3",
        "type": "websocket-listener",
        "path": "/savesto",
        "wholemsg": "false"
    },
    {
        "id": "16d73cb773b56ff8",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "schedule",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "8d369713f4fbe8e7",
        "type": "websocket-listener",
        "path": "/schedule-add",
        "wholemsg": "false"
    },
    {
        "id": "86c7e95049345a96",
        "type": "websocket-listener",
        "path": "/schedule-search",
        "wholemsg": "false"
    },
    {
        "id": "a0cbf1563290bad7",
        "type": "websocket-listener",
        "path": "/schedule-tables",
        "wholemsg": "false"
    },
    {
        "id": "5c683fe41de7339d",
        "type": "websocket-listener",
        "path": "/schdedule-delete",
        "wholemsg": "false"
    },
    {
        "id": "68b3833b0e275a83",
        "type": "websocket-listener",
        "path": "/warehousing-data",
        "wholemsg": "false"
    },
    {
        "id": "150c927449181e59",
        "type": "websocket-listener",
        "path": "/shipping-admin",
        "wholemsg": "false"
    },
    {
        "id": "bc68eba9350333ea",
        "type": "websocket-listener",
        "path": "/infor-search",
        "wholemsg": "false"
    },
    {
        "id": "ad447a03830fa422",
        "type": "websocket-listener",
        "path": "/schedule-correct",
        "wholemsg": "false"
    },
    {
        "id": "2c44ce84f49778ad",
        "type": "websocket-listener",
        "path": "/schedule-delete2",
        "wholemsg": "false"
    },
    {
        "id": "4b60e9257ee3b8db",
        "type": "websocket-listener",
        "path": "/get-selectedrowscsv",
        "wholemsg": "false"
    },
    {
        "id": "5048a864e437d8b5",
        "type": "websocket-listener",
        "path": "/Selected-shipping-information",
        "wholemsg": "false"
    },
    {
        "id": "05e7e838d51ba269",
        "type": "websocket-listener",
        "path": "/Selected-shipping-report",
        "wholemsg": "false"
    },
    {
        "id": "d08160f822a8c3b0",
        "type": "websocket-listener",
        "path": "/Selected-shipping-savesto",
        "wholemsg": "false"
    },
    {
        "id": "190b6b08efafa0da",
        "type": "websocket-listener",
        "path": "/ProductMaster-processing",
        "wholemsg": "false"
    },
    {
        "id": "32122a0b3c0e9960",
        "type": "websocket-listener",
        "path": "/ProductMaster-search",
        "wholemsg": "false"
    },
    {
        "id": "473df88435abd173",
        "type": "websocket-listener",
        "path": "/ID-search",
        "wholemsg": "false"
    },
    {
        "id": "286e9e2a6ce00648",
        "type": "websocket-listener",
        "path": "/Component-processing",
        "wholemsg": "false"
    },
    {
        "id": "9aae3d4c0831f2f3",
        "type": "websocket-listener",
        "path": "/Selected-shipping-report-log",
        "wholemsg": "false"
    },
    {
        "id": "d863558c17b911cb",
        "type": "websocket-listener",
        "path": "/Component-search",
        "wholemsg": "false"
    },
    {
        "id": "aad501ca3560744b",
        "type": "websocket-listener",
        "path": "/componentStock-search",
        "wholemsg": "false"
    },
    {
        "id": "40731d3382e36542",
        "type": "ui_tab",
        "name": "依頼発行",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0a4c64c88dbf0fab",
        "type": "ui_group",
        "name": "依頼発行",
        "tab": "40731d3382e36542",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "47363dc9dca105a2",
        "type": "ui_link",
        "name": "メインメニューへ",
        "link": "https://192.168.0.87/index",
        "icon": "open_in_browser",
        "target": "thistab",
        "order": 1
    },
    {
        "id": "9f577487ab0591c2",
        "type": "ui_group",
        "name": "依頼履歴",
        "tab": "fcb7a05317831403",
        "order": 2,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fcb7a05317831403",
        "type": "ui_tab",
        "name": "依頼履歴",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "38bb0eb9fc4184e6",
        "type": "websocket-listener",
        "path": "/edit-action2",
        "wholemsg": "false"
    },
    {
        "id": "8b5a55902d3c9e2a",
        "type": "ui_tab",
        "name": "依頼取消",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "76984d337167f0a8",
        "type": "ui_group",
        "name": "依頼取消",
        "tab": "8b5a55902d3c9e2a",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ee28f09e8a229f7",
        "type": "ui_tab",
        "name": "依頼処理",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9b3476150263ed2b",
        "type": "ui_group",
        "name": "依頼処理",
        "tab": "1ee28f09e8a229f7",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1c375d0f9e74dfe4",
        "type": "websocket-listener",
        "path": "/newRequest-infor",
        "wholemsg": "false"
    },
    {
        "id": "a6402cfdcb2646a7",
        "type": "websocket-listener",
        "path": "/Stock-search",
        "wholemsg": "false"
    },
    {
        "id": "4ac382f6665022bf",
        "type": "websocket-listener",
        "path": "/WorkingContents-make",
        "wholemsg": "false"
    },
    {
        "id": "8235688e35bdba58",
        "type": "websocket-listener",
        "path": "/QR-autentication",
        "wholemsg": "false"
    },
    {
        "id": "19662ac09f30f8e7",
        "type": "websocket-listener",
        "path": "/Working-result",
        "wholemsg": "false"
    },
    {
        "id": "537079f7781b1f3f",
        "type": "websocket-listener",
        "path": "/WorkingReadQR-search",
        "wholemsg": "false"
    },
    {
        "id": "79e9bdcb0e70fec4",
        "type": "websocket-listener",
        "path": "/WorkingContents-finsh",
        "wholemsg": "false"
    },
    {
        "id": "9bc735f7d90e7fde",
        "type": "websocket-listener",
        "path": "/WorkingContents-log",
        "wholemsg": "false"
    },
    {
        "id": "bc32b052595f134e",
        "type": "websocket-listener",
        "path": "/WorkingContents-search",
        "wholemsg": "false"
    },
    {
        "id": "defd5cd4828855c2",
        "type": "websocket-listener",
        "path": "/WorkingResult-search",
        "wholemsg": "false"
    },
    {
        "id": "f8adb37fd3d9c54d",
        "type": "websocket-listener",
        "path": "/PackingRequirements-search",
        "wholemsg": "false"
    },
    {
        "id": "025b41d784a4c7e3",
        "type": "websocket-listener",
        "path": "/Insert-csv",
        "wholemsg": "false"
    },
    {
        "id": "29248f9b61b0b53d",
        "type": "websocket-listener",
        "path": "/InspectionRequest-search",
        "wholemsg": "false"
    },
    {
        "id": "e27c1cfeb59dcddc",
        "type": "websocket-listener",
        "path": "/DownloadStatus-up",
        "wholemsg": "false"
    },
    {
        "id": "ad414dbe18e00e99",
        "type": "websocket-listener",
        "path": "/inspection-infor",
        "wholemsg": "false"
    },
    {
        "id": "2ae1f8db4a6be615",
        "type": "websocket-listener",
        "path": "/InspectionReport-copy",
        "wholemsg": "false"
    },
    {
        "id": "f61696ca3d281277",
        "type": "websocket-listener",
        "path": "/WorkingResult-search2",
        "wholemsg": "false"
    },
    {
        "id": "8cbe059ccb4ed529",
        "type": "websocket-listener",
        "path": "/NpointCheck-result",
        "wholemsg": "false"
    },
    {
        "id": "3d84d5a140e3aa2c",
        "type": "websocket-listener",
        "path": "/NpointCheck-search",
        "wholemsg": "false"
    },
    {
        "id": "3cf43fcfd6ef4a2b",
        "type": "websocket-listener",
        "path": "/cameraStream",
        "wholemsg": "false"
    },
    {
        "id": "42a49a2f4b934d59",
        "type": "websocket-listener",
        "path": "/photoGraph",
        "wholemsg": "false"
    },
    {
        "id": "b09615408a7c6087",
        "type": "websocket-listener",
        "path": "/inspectionPhoto",
        "wholemsg": "false"
    },
    {
        "id": "52c14b0459bc694f",
        "type": "websocket-listener",
        "path": "/shipping-csvdata",
        "wholemsg": "false"
    },
    {
        "id": "681ce2afa561e793",
        "type": "websocket-listener",
        "path": "/Npoint-add",
        "wholemsg": "false"
    },
    {
        "id": "822b4c73425012ee",
        "type": "websocket-listener",
        "path": "/InspectionPoint",
        "wholemsg": "false"
    },
    {
        "id": "b75b09809aae5215",
        "type": "websocket-listener",
        "path": "/InspectionPoint-add",
        "wholemsg": "false"
    },
    {
        "id": "c560a5ef69f7e214",
        "type": "websocket-listener",
        "path": "/InspectionPoint-search",
        "wholemsg": "false"
    },
    {
        "id": "668f9890b7255164",
        "type": "websocket-listener",
        "path": "/WeightCheek-result",
        "wholemsg": "false"
    },
    {
        "id": "58d253b42992153d",
        "type": "websocket-listener",
        "path": "/WeightCheck-search",
        "wholemsg": "false"
    },
    {
        "id": "ad42eab21c95d556",
        "type": "websocket-listener",
        "path": "/WeightCheckResult-change",
        "wholemsg": "false"
    },
    {
        "id": "4d22ad7f1340df8b",
        "type": "comment",
        "z": "2618fdb18c108f25",
        "name": "メインメニュー",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "7b8c300c6b2145ca",
        "type": "comment",
        "z": "2618fdb18c108f25",
        "name": "JS QR Code Reader",
        "info": "",
        "x": 130,
        "y": 560,
        "wires": []
    },
    {
        "id": "b2f3367d0b2eb15a",
        "type": "comment",
        "z": "2618fdb18c108f25",
        "name": "ログイン画面",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "6f0712579fa950ff",
        "type": "http response",
        "z": "2618fdb18c108f25",
        "g": "8614c7a5d71fe960",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 600,
        "wires": []
    },
    {
        "id": "4b14f6a8670ab56f",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "8614c7a5d71fe960",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <title>QRコードで読込</title>\n    <script>\n      {{{js.javascriptfile}}}\n    </script>\n    <script>\n      {{{js.jsqrtfile}}}\n    </script>\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n</head>\n<body>\n  <div id=\"wrapper\">\n    <video id=\"video\" width=\"480\" height=\"360\" autoplay muted playsinline></video>\n    <canvas id=\"camera-canvas\"></canvas>\n    <canvas id=\"rect-canvas\"></canvas>\n    <audio id=\"beepSound\">\n    </audio>\n  </div>\n\n  <script>\n    \n    // QRコードの読み取り処理\n    // 読み取った情報を元のページに送信する\n    function sendQRDataToOriginalPage(qrData) {\n      // セッションストレージにQRコードのデータを保存\n      sessionStorage.setItem('qrData', qrData);\n      // 元のページに戻る\n      var redirectTo = sessionStorage.getItem('currentPageURL');\n      window.location.href = redirectTo;\n    }\n\n    const video = document.getElementById('video');\n    let contentWidth;\n    let contentHeight;\n\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: { facingMode: 'environment'},\n      })\n      .then(function(stream) {\n        video.srcObject = stream;\n        video.onloadedmetadata = function(e) {\n          video.play();\n          contentWidth = video.clientWidth;\n          contentHeight = video.clientHeight;\n          canvasUpdate();\n          checkImage();\n        }\n      });\n    }\n\n    // カメラ映像のキャンバス表示\n    const cvs = document.getElementById('camera-canvas');\n    const ctx = cvs.getContext('2d');\n    const canvasUpdate = () => {\n       cvs.width = contentWidth;\n       cvs.height = contentHeight;\n       ctx.drawImage(video, 0, 0, contentWidth, contentHeight);\n       requestAnimationFrame(canvasUpdate);\n    }\n\n    function playBeepSound() {\n      var beepSound = document.getElementById('beepSound');\n      beepSound.play();\n    }\n\n\n    // QRコードの検出\n    const rectCvs = document.getElementById('rect-canvas');\n    const rectCtx =  rectCvs.getContext('2d');\n    const checkImage = () => {\n      // imageDataを作る\n      const imageData = ctx.getImageData(0, 0, contentWidth, contentHeight);\n      // jsQRに渡す\n      const code = jsQR(imageData.data, contentWidth, contentHeight);\n\n      // 検出結果に合わせて処理を実施\n      if (code) {\n        console.log(\"QRcodeが見つかりました\", code);\n      \n        drawRect(code.location);\n        // QRコードが見つかったら音を鳴らす\n        playBeepSound();\n        const qrData = code.data;\n        sendQRDataToOriginalPage(qrData);\n        // QRコードが見つかったら読み取りを中止\n        return;\n      } else {\n        console.log(\"QRcodeが見つかりません…\", code);\n        rectCtx.clearRect(0, 0, contentWidth, contentHeight);\n      }\n      setTimeout(()=>{ checkImage() }, 500);\n    }\n\n    // 四辺形の描画\n    const drawRect = (location) => {\n       rectCvs.width = contentWidth;\n       rectCvs.height = contentHeight;\n       drawLine(location.topLeftCorner, location.topRightCorner);\n       drawLine(location.topRightCorner, location.bottomRightCorner);\n       drawLine(location.bottomRightCorner, location.bottomLeftCorner);\n       drawLine(location.bottomLeftCorner, location.topLeftCorner)\n    }\n\n    // 線の描画\n    const drawLine = (begin, end) => {\n       rectCtx.lineWidth = 4;\n       rectCtx.strokeStyle = \"#F00\";\n       rectCtx.beginPath();\n       rectCtx.moveTo(begin.x, begin.y);\n       rectCtx.lineTo(end.x, end.y);\n       rectCtx.stroke();\n    }\n\n  </script>\n</body>\n</html>\n\n\n\n",
        "output": "str",
        "x": 570,
        "y": 600,
        "wires": [
            [
                "6f0712579fa950ff"
            ]
        ]
    },
    {
        "id": "500e6e8762d03dc4",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "8614c7a5d71fe960",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "#wrapper{\n    position: relative;\n}\n\n#video{\n    position: absolute;\n    top: 0px;\n    left: 0px;\n}\n\n#camera-canvas{\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    z-index: 50;\n}\n\n#rect-canvas{\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    z-index: 100;\n}\n",
        "output": "str",
        "x": 450,
        "y": 600,
        "wires": [
            [
                "4b14f6a8670ab56f"
            ]
        ]
    },
    {
        "id": "3c198f9c994e2bc1",
        "type": "http in",
        "z": "2618fdb18c108f25",
        "g": "8614c7a5d71fe960",
        "name": "",
        "url": "/qr-reader",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "1471ad6a4068877a"
            ]
        ]
    },
    {
        "id": "361203d65b99aa43",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n}\n\n.table-container thead {\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n/* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n/* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n\n/*その他と主な共通部分は省略*/\n\na.btn btn-primary btn-lg my-2 btn-equal-width {\n  border: 2px solid #000;\n  border-radius: 0;\n  background: #fff;\n\n  -webkit-transform-style: preserve-3d;\n\n  transform-style: preserve-3d;\n}\n\na.btn btn-primary btn-lg my-2 btn-equal-width:before {\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 5px;\n  height: 100%;\n\n  content: '';\n  -webkit-transition: all .3s;\n  transition: all .3s;\n\n  background: #000;\n}\n\na.btn btn-primary btn-lg my-2 btn-equal-width:hover {\n  color: #fff;\n  background: #000;\n}\n\na.btn btn-primary btn-lg my-2 btn-equal-width:hover:before {\n  background: #fff;\n}\n\n/* コンテナを中央揃えにするスタイル */\n.container.text-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh; /* 画面の高さいっぱいまで拡張 */\n}\n",
        "output": "str",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "886bcb56f5cc58a9"
            ]
        ]
    },
    {
        "id": "8aea2d4e5d61ab52",
        "type": "http in",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "url": "/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "951035c1cd941af0"
            ]
        ]
    },
    {
        "id": "886bcb56f5cc58a9",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n      {{{css.cssfile}}}\n    </style>   \n  </head>\n<body>\n  <header>\n      <nav class=\"navbar fixed-top navbar-expand-md custom-navbar mb-4\">\n        <div class=\"container-fluid\">\n          <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\" class=\"d-inline-block align-text-top\">\n          <span class=\"navbar-text\">\n          </span>\n        </div>        \n      </nav>\n  </header>\n\n  <div class=\"container text-center\">\n    \n    <div class=\"row\">\n\n      <div class=\"col-12 my-4\">\n        <div class=\"card border-light mb-6\">\n          <div class=\"card-header\">出荷情報</div>\n          <div class=\"card-body\" style=\"max-height: 200px; overflow-y: auto;\">\n            <div class=\"card-title\">\n              <div class=\"d-flex w-100 justify-content-between align-items-center\">\n                <h6 class=\"mb-1\">出荷日 / 客先 / 納入先 / グループ / 発行日</h6>  \n                <span class=\"badge bg-primary rounded-pill\">件数</span>\n              </div>        \n            </div>\n            <ul id=\"shipping-list\" class=\"list-group\">\n\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 my-4\">\n        <div class=\"accordion\" id=\"accordionExample\">\n          <div class=\"accordion-item\">\n            <div class=\"accordion-header\" id=\"headingOne\">\n              <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                <h5 class=\"display-8 fw-bold\">Menu</h5>\n              </button>\n            </div>\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n            <div class=\"accordion-body\">\n              <div class=\"col-12\">\n                <a href=\"/page1\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">入庫</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page2\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">移動・出庫</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page10\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">梱包</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page3\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">受入・出荷</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page7\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">出荷情報</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page4\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">入出庫移動履歴</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page8\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">出荷情報履歴</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page11\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">梱包履歴</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page14\" class=\"btn btn-primary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">検査依頼履歴</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page13\" class=\"btn btn-secondary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">検査依頼</a>\n              </div>\n              <div class=\"col-12\">\n              <div class=\"col-12\">\n                <a href=\"#\" class=\"btn btn-secondary btn-lg my-2 btn-equal-width\" onclick=\"redirectToNodeRED()\">入出庫削除・在庫変更依頼</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page5\" class=\"btn btn-secondary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">棚卸</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page6\" class=\"btn btn-secondary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">社員マスタ登録</a>\n              </div>\n              <div class=\"col-12\">\n                <a href=\"/page9\" class=\"btn btn-secondary btn-lg my-2 btn-equal-width\" onclick=\"handleClick()\">製品マスタ登録</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row\">\n\n      <div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n        <div class=\"toast-header\">\n          <strong class=\"me-auto\">入出庫削除・在庫変更依頼通知</strong>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"toast-body\">\n          進捗状況が'依頼中'のデータが存在します。\n        </div>\n      </div>\n\n    </div>  \n\n  </div>\n  <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n  <script>\n    {{{js.javascriptfile}}}\n  </script>\n</body>\n</html>\n",
        "output": "str",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "99a70e3ff21f8183"
            ]
        ]
    },
    {
        "id": "99a70e3ff21f8183",
        "type": "http response",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "951035c1cd941af0",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null){\n        alert('ログインしてください。');\n        window.location.href = \"/login\"; \n    }else{        \n        let nameLabel = document.querySelector(\".navbar-text\");\n        nameLabel.textContent = `こんにちは、${storedStaffName} さん あなたの業務をサポートします。`;\n    }\n\n    sendDataToNodeRED();\n\n    \n\n    showToast();\n    \n});\n\nfunction redirectToNodeRED() {\n    const hostname = window.location.hostname;\n    window.location.href = `https://${hostname}/ui`;\n}\n\nfunction showToast() {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/newRequest-infor`);\n\n    socket.onopen = function (event) {\n        socket.send(event);\n    };\n\n    socket.onmessage = function (event) {\n        // サーバーから受信したデータを処理する\n        const data = JSON.parse(event.data);\n        if (data.length > 0) { // 取得したデータがある場合\n            // Bootstrapのトーストを表示する\n            var toastElList = [].slice.call(document.querySelectorAll(\".toast\"));\n            var toastList = toastElList.map(function (toastEl) {\n                return new bootstrap.Toast(toastEl, {\n                    // オプション\n                    delay: 10000,\n                });\n            });\n            toastList[0].show();\n        }\n    };\n    \n}\n\nfunction sendDataToNodeRED() {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/newshipping-infor`);\n\n    socket.onopen = function (event) {\n        let staffCode = sessionStorage.getItem('staffCode');\n        let requestData = {\n            staffCode: staffCode,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        addToShippingList(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction formatDateTime(dateTimeString) {\n    // データベースから取得した日時のフォーマットに合わせて変換を行う\n    let dbDateTime = new Date(dateTimeString);\n\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\n// リストにデータを追加する関数\nfunction addToShippingList(data) {\n    var shippingList = document.getElementById(\"shipping-list\");\n\n    data.forEach(function (item) {\n        \n        let listItem = document.createElement(\"a\");\n        listItem.href = \"#\";\n        listItem.className = \"list-group-item list-group-item-action\";\n\n        // リストアイテムのコンテンツを作成\n        let contentDiv = document.createElement(\"div\");\n        contentDiv.className = \"d-flex w-100 justify-content-between align-items-center\";\n\n        let heading = document.createElement(\"h6\");\n        heading.className = \"mb-1\";\n    \n        let databaseDate = new Date(item.shippingdate.toLocaleString());\n        let year = databaseDate.getFullYear();\n        let month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        let day = databaseDate.getDate().toString().padStart(2, '0');\n        let dayOfWeek = databaseDate.getDay();\n        let weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n        let formattedDate = `${year}-${month}-${day}`;\n        let workingday = formatDateTime(item.workingday);\n\n        heading.textContent = `${formattedDate} (${weekdays[dayOfWeek]}) / ${item.customer} / ${item.deliveryto} / ${item.groupname} / ${workingday}`;\n\n        let badge = document.createElement(\"span\");\n        badge.className = \"badge bg-primary rounded-pill\";\n        badge.textContent = `${item.orderquantity}`;\n\n        contentDiv.appendChild(heading);\n        contentDiv.appendChild(badge);\n\n        listItem.addEventListener(\"click\", function () {\n\n            let encodedworkingday = encodeURIComponent(workingday);\n            let encodedformattedDate = encodeURIComponent(formattedDate);\n            let encodedcustomer = encodeURIComponent(item.customer);\n            let encodeddeliveryto = encodeURIComponent(item.deliveryto);\n            let encodedworkername = encodeURIComponent(item.workername);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page7-1\" +\n                \"?workingday=\" + encodedworkingday +\n                \"&formattedDate=\" + encodedformattedDate +\n                \"&customer=\" + encodedcustomer +\n                \"&deliveryto=\" + encodeddeliveryto +\n                \"&workername=\" + encodedworkername;\n\n            window.location.href = destinationURL;\n\n        });\n\n        listItem.appendChild(contentDiv);\n\n        // リストにアイテムを追加\n        shippingList.appendChild(listItem);\n    });\n}",
        "output": "str",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "361203d65b99aa43"
            ]
        ]
    },
    {
        "id": "b5f0b7e3b72748f1",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>ログインページ</title>  \n  <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n  \n  <style type=\"text/css\">{{{css.login}}}</style>\n</head>\n\n<body class=\"d-flex align-items-center py-4 bg-body-tertiary\">\n  <main class=\"form-signin w-100 m-auto\">\n    <form class=\"text-center\" action=\"/index\" onsubmit=\"return checkName();\">\n      <img class=\"mb-4\" src=\"/もちさぽ決定.png\" alt=\"\" width=\"225\" height=\"225\" loading=\"lazy\" data-bs-toggle=\"popover\" title=\"もっちーくんのつぶやき\" data-bs-content=\"棚よ～り～多い～在庫のか～ず～\" data-bs-placement=\"right\">\n      \n      <div class=\"input-group\">\n        <span class=\"input-group-text\">社員コード</span>\n        <input type=\"text\" id=\"staffcode\" class=\"form-control\" aria-label=\"staffcode\">\n      </div>\n      <div class=\"input-group mb-3\">\n        <input type=\"text\" id=\"staffname\" class=\"form-control\" aria-label=\"staffname\" readonly >\n      </div>\n      <button class=\"btn btn-primary w-100 py-2\" type=\"submit\">ログイン</button>\n    </form>\n  </main> \n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js\"></script>\n  <script>\n      {{{js.javascriptfile}}}\n  </script> \n</body>\n</html>",
        "output": "str",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "3881f35d9b34fa58"
            ]
        ]
    },
    {
        "id": "3881f35d9b34fa58",
        "type": "http response",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "385087e678fb6fbc",
        "type": "http in",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "",
        "url": "login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "452bcd6064d95b4b"
            ]
        ]
    },
    {
        "id": "8f424e57c2883c6c",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "css.login",
        "field": "css.login",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "html,\nbody {\n  height: 100%;\n}\n\n.form-signin {\n  max-width: 330px;\n  padding: 1rem;\n}\n\n\n",
        "output": "str",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "b5f0b7e3b72748f1"
            ]
        ]
    },
    {
        "id": "452bcd6064d95b4b",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    document.getElementById('staffcode').addEventListener('keydown', function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault(); // フォームの送信を防ぐ\n        }\n    });\n\n    let popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'))\n    let popoverList = popoverTriggerList.map(function (popoverTriggerEl) {\n        return new bootstrap.Popover(popoverTriggerEl)\n    })\n\n    document.getElementById('staffcode').addEventListener('blur', function () {\n\n        sessionStorage.removeItem(\"staffcode\");\n        sessionStorage.removeItem(\"staffname\");\n\n        var staffCode = document.getElementById('staffcode').value;\n        var staffCodeAsNumber = parseInt(staffCode); \n\n        if (staffCode.trim() !== '') {\n            \n            fetch('/staffcode', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ staffCode: staffCodeAsNumber }),\n            })  \n\n                .then(function (response) {\n                    if (response.ok) {\n                        // レスポンスが成功した場合、JSONデータを取得\n                        return response.json();\n                    } else {\n                        // レスポンスがエラーの場合、エラーメッセージを表示\n                        throw new Error('HTTPエラー: ' + response.status);\n                    }\n                })\n\n                .then(function (data) {\n                    if (data && Array.isArray(data) && data.length > 0) {\n                        var employeeName = data[0].name;\n\n                        var staffnameField = document.getElementById(\"staffname\");\n\n                        if (staffnameField) {\n                            staffnameField.value = employeeName;\n                        } else {\n                            console.log(\"staffnameフィールドが存在しません。\");\n                        }\n                    } else {\n                        console.log(\"データが不正または空です。\");\n                    }\n                })\n                .catch(function (error) {\n                    console.error('エラー:', error);\n                });       \n        }\n    });\n});\n\n\nfunction checkName() {\n\n    \n    var staffCode = document.getElementById('staffcode').value;\n    var staffName = document.getElementById('staffname').value;\n\n    if (staffName.trim() === '') {    \n        return false; \n    }\n    sessionStorage.setItem('staffCode', staffCode);\n    sessionStorage.setItem('staffName', staffName);\n\n    return true;\n}\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "8f424e57c2883c6c"
            ]
        ]
    },
    {
        "id": "ab295820db100f6f",
        "type": "http in",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "Receive Staff Code",
        "url": "/staffcode",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "d0825de7821f1c4a"
            ]
        ]
    },
    {
        "id": "d0825de7821f1c4a",
        "type": "change",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM id WHERE code=staffcode;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffcode",
                "fromt": "str",
                "to": "payload.staffCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "4b787625975b14b9"
            ]
        ]
    },
    {
        "id": "4b787625975b14b9",
        "type": "mysql",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "mydb": "93adc04920199006",
        "name": "",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "4132e157302f9501"
            ]
        ]
    },
    {
        "id": "4132e157302f9501",
        "type": "json",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "f4fa6ff4ef7bacff"
            ]
        ]
    },
    {
        "id": "f4fa6ff4ef7bacff",
        "type": "http response",
        "z": "2618fdb18c108f25",
        "g": "0bd82932d8e5f14d",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "a71cb13135052e44",
        "type": "mysql",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "1f55f66d76e315e8"
            ]
        ]
    },
    {
        "id": "0f8c0ad77b221524",
        "type": "websocket in",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "server": "df938c43a785d779",
        "client": "",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "a4f5eacd9bfd42fa"
            ]
        ]
    },
    {
        "id": "8c4b6c9bf2ca4ee9",
        "type": "websocket out",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "server": "df938c43a785d779",
        "client": "",
        "x": 1120,
        "y": 440,
        "wires": []
    },
    {
        "id": "17c0dfe423a36f83",
        "type": "change",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT customer FROM id WHERE code=staffcode;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffcode",
                "fromt": "str",
                "to": "payload.staffCode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "acbf4faf7ed3895b"
            ]
        ]
    },
    {
        "id": "acbf4faf7ed3895b",
        "type": "mysql",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "mydb": "93adc04920199006",
        "name": "",
        "x": 740,
        "y": 380,
        "wires": [
            [
                "fba816866acc2a48"
            ]
        ]
    },
    {
        "id": "1471ad6a4068877a",
        "type": "template",
        "z": "2618fdb18c108f25",
        "g": "8614c7a5d71fe960",
        "name": "jsQR",
        "field": "js.jsqrtfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === 'object' && typeof module === 'object')\n        module.exports = factory();\n    else if (typeof define === 'function' && define.amd)\n        define([], factory);\n    else if (typeof exports === 'object')\n        exports[\"jsQR\"] = factory();\n    else\n        root[\"jsQR\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n    return /******/ (function (modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif (installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n                /******/\n}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n                /******/\n};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n            /******/\n}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function (exports, name, getter) {\n/******/ \t\tif (!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n        /******/\n});\n                /******/\n}\n            /******/\n};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function (module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n            /******/\n};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function (object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n        /******/\n})\n/************************************************************************/\n/******/([\n/* 0 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var BitMatrix = /** @class */ (function () {\n                function BitMatrix(data, width) {\n                    this.width = width;\n                    this.height = data.length / width;\n                    this.data = data;\n                }\n                BitMatrix.createEmpty = function (width, height) {\n                    return new BitMatrix(new Uint8ClampedArray(width * height), width);\n                };\n                BitMatrix.prototype.get = function (x, y) {\n                    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n                        return false;\n                    }\n                    return !!this.data[y * this.width + x];\n                };\n                BitMatrix.prototype.set = function (x, y, v) {\n                    this.data[y * this.width + x] = v ? 1 : 0;\n                };\n                BitMatrix.prototype.setRegion = function (left, top, width, height, v) {\n                    for (var y = top; y < top + height; y++) {\n                        for (var x = left; x < left + width; x++) {\n                            this.set(x, y, !!v);\n                        }\n                    }\n                };\n                return BitMatrix;\n            }());\n            exports.BitMatrix = BitMatrix;\n\n\n            /***/\n}),\n/* 1 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var GenericGFPoly_1 = __webpack_require__(2);\n            function addOrSubtractGF(a, b) {\n                return a ^ b; // tslint:disable-line:no-bitwise\n            }\n            exports.addOrSubtractGF = addOrSubtractGF;\n            var GenericGF = /** @class */ (function () {\n                function GenericGF(primitive, size, genBase) {\n                    this.primitive = primitive;\n                    this.size = size;\n                    this.generatorBase = genBase;\n                    this.expTable = new Array(this.size);\n                    this.logTable = new Array(this.size);\n                    var x = 1;\n                    for (var i = 0; i < this.size; i++) {\n                        this.expTable[i] = x;\n                        x = x * 2;\n                        if (x >= this.size) {\n                            x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n                        }\n                    }\n                    for (var i = 0; i < this.size - 1; i++) {\n                        this.logTable[this.expTable[i]] = i;\n                    }\n                    this.zero = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([0]));\n                    this.one = new GenericGFPoly_1.default(this, Uint8ClampedArray.from([1]));\n                }\n                GenericGF.prototype.multiply = function (a, b) {\n                    if (a === 0 || b === 0) {\n                        return 0;\n                    }\n                    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n                };\n                GenericGF.prototype.inverse = function (a) {\n                    if (a === 0) {\n                        throw new Error(\"Can't invert 0\");\n                    }\n                    return this.expTable[this.size - this.logTable[a] - 1];\n                };\n                GenericGF.prototype.buildMonomial = function (degree, coefficient) {\n                    if (degree < 0) {\n                        throw new Error(\"Invalid monomial degree less than 0\");\n                    }\n                    if (coefficient === 0) {\n                        return this.zero;\n                    }\n                    var coefficients = new Uint8ClampedArray(degree + 1);\n                    coefficients[0] = coefficient;\n                    return new GenericGFPoly_1.default(this, coefficients);\n                };\n                GenericGF.prototype.log = function (a) {\n                    if (a === 0) {\n                        throw new Error(\"Can't take log(0)\");\n                    }\n                    return this.logTable[a];\n                };\n                GenericGF.prototype.exp = function (a) {\n                    return this.expTable[a];\n                };\n                return GenericGF;\n            }());\n            exports.default = GenericGF;\n\n\n            /***/\n}),\n/* 2 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var GenericGF_1 = __webpack_require__(1);\n            var GenericGFPoly = /** @class */ (function () {\n                function GenericGFPoly(field, coefficients) {\n                    if (coefficients.length === 0) {\n                        throw new Error(\"No coefficients.\");\n                    }\n                    this.field = field;\n                    var coefficientsLength = coefficients.length;\n                    if (coefficientsLength > 1 && coefficients[0] === 0) {\n                        // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                        var firstNonZero = 1;\n                        while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                            firstNonZero++;\n                        }\n                        if (firstNonZero === coefficientsLength) {\n                            this.coefficients = field.zero.coefficients;\n                        }\n                        else {\n                            this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n                            for (var i = 0; i < this.coefficients.length; i++) {\n                                this.coefficients[i] = coefficients[firstNonZero + i];\n                            }\n                        }\n                    }\n                    else {\n                        this.coefficients = coefficients;\n                    }\n                }\n                GenericGFPoly.prototype.degree = function () {\n                    return this.coefficients.length - 1;\n                };\n                GenericGFPoly.prototype.isZero = function () {\n                    return this.coefficients[0] === 0;\n                };\n                GenericGFPoly.prototype.getCoefficient = function (degree) {\n                    return this.coefficients[this.coefficients.length - 1 - degree];\n                };\n                GenericGFPoly.prototype.addOrSubtract = function (other) {\n                    var _a;\n                    if (this.isZero()) {\n                        return other;\n                    }\n                    if (other.isZero()) {\n                        return this;\n                    }\n                    var smallerCoefficients = this.coefficients;\n                    var largerCoefficients = other.coefficients;\n                    if (smallerCoefficients.length > largerCoefficients.length) {\n                        _a = [largerCoefficients, smallerCoefficients], smallerCoefficients = _a[0], largerCoefficients = _a[1];\n                    }\n                    var sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n                    var lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n                    for (var i = 0; i < lengthDiff; i++) {\n                        sumDiff[i] = largerCoefficients[i];\n                    }\n                    for (var i = lengthDiff; i < largerCoefficients.length; i++) {\n                        sumDiff[i] = GenericGF_1.addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n                    }\n                    return new GenericGFPoly(this.field, sumDiff);\n                };\n                GenericGFPoly.prototype.multiply = function (scalar) {\n                    if (scalar === 0) {\n                        return this.field.zero;\n                    }\n                    if (scalar === 1) {\n                        return this;\n                    }\n                    var size = this.coefficients.length;\n                    var product = new Uint8ClampedArray(size);\n                    for (var i = 0; i < size; i++) {\n                        product[i] = this.field.multiply(this.coefficients[i], scalar);\n                    }\n                    return new GenericGFPoly(this.field, product);\n                };\n                GenericGFPoly.prototype.multiplyPoly = function (other) {\n                    if (this.isZero() || other.isZero()) {\n                        return this.field.zero;\n                    }\n                    var aCoefficients = this.coefficients;\n                    var aLength = aCoefficients.length;\n                    var bCoefficients = other.coefficients;\n                    var bLength = bCoefficients.length;\n                    var product = new Uint8ClampedArray(aLength + bLength - 1);\n                    for (var i = 0; i < aLength; i++) {\n                        var aCoeff = aCoefficients[i];\n                        for (var j = 0; j < bLength; j++) {\n                            product[i + j] = GenericGF_1.addOrSubtractGF(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n                        }\n                    }\n                    return new GenericGFPoly(this.field, product);\n                };\n                GenericGFPoly.prototype.multiplyByMonomial = function (degree, coefficient) {\n                    if (degree < 0) {\n                        throw new Error(\"Invalid degree less than 0\");\n                    }\n                    if (coefficient === 0) {\n                        return this.field.zero;\n                    }\n                    var size = this.coefficients.length;\n                    var product = new Uint8ClampedArray(size + degree);\n                    for (var i = 0; i < size; i++) {\n                        product[i] = this.field.multiply(this.coefficients[i], coefficient);\n                    }\n                    return new GenericGFPoly(this.field, product);\n                };\n                GenericGFPoly.prototype.evaluateAt = function (a) {\n                    var result = 0;\n                    if (a === 0) {\n                        // Just return the x^0 coefficient\n                        return this.getCoefficient(0);\n                    }\n                    var size = this.coefficients.length;\n                    if (a === 1) {\n                        // Just the sum of the coefficients\n                        this.coefficients.forEach(function (coefficient) {\n                            result = GenericGF_1.addOrSubtractGF(result, coefficient);\n                        });\n                        return result;\n                    }\n                    result = this.coefficients[0];\n                    for (var i = 1; i < size; i++) {\n                        result = GenericGF_1.addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n                    }\n                    return result;\n                };\n                return GenericGFPoly;\n            }());\n            exports.default = GenericGFPoly;\n\n\n            /***/\n}),\n/* 3 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var binarizer_1 = __webpack_require__(4);\n            var decoder_1 = __webpack_require__(5);\n            var extractor_1 = __webpack_require__(11);\n            var locator_1 = __webpack_require__(12);\n            function scan(matrix) {\n                var locations = locator_1.locate(matrix);\n                if (!locations) {\n                    return null;\n                }\n                for (var _i = 0, locations_1 = locations; _i < locations_1.length; _i++) {\n                    var location_1 = locations_1[_i];\n                    var extracted = extractor_1.extract(matrix, location_1);\n                    var decoded = decoder_1.decode(extracted.matrix);\n                    if (decoded) {\n                        return {\n                            binaryData: decoded.bytes,\n                            data: decoded.text,\n                            chunks: decoded.chunks,\n                            version: decoded.version,\n                            location: {\n                                topRightCorner: extracted.mappingFunction(location_1.dimension, 0),\n                                topLeftCorner: extracted.mappingFunction(0, 0),\n                                bottomRightCorner: extracted.mappingFunction(location_1.dimension, location_1.dimension),\n                                bottomLeftCorner: extracted.mappingFunction(0, location_1.dimension),\n                                topRightFinderPattern: location_1.topRight,\n                                topLeftFinderPattern: location_1.topLeft,\n                                bottomLeftFinderPattern: location_1.bottomLeft,\n                                bottomRightAlignmentPattern: location_1.alignmentPattern,\n                            },\n                        };\n                    }\n                }\n                return null;\n            }\n            var defaultOptions = {\n                inversionAttempts: \"attemptBoth\",\n            };\n            function jsQR(data, width, height, providedOptions) {\n                if (providedOptions === void 0) { providedOptions = {}; }\n                var options = defaultOptions;\n                Object.keys(options || {}).forEach(function (opt) {\n                    options[opt] = providedOptions[opt] || options[opt];\n                });\n                var shouldInvert = options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\";\n                var tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n                var _a = binarizer_1.binarize(data, width, height, shouldInvert), binarized = _a.binarized, inverted = _a.inverted;\n                var result = scan(tryInvertedFirst ? inverted : binarized);\n                if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n                    result = scan(tryInvertedFirst ? binarized : inverted);\n                }\n                return result;\n            }\n            jsQR.default = jsQR;\n            exports.default = jsQR;\n\n\n            /***/\n}),\n/* 4 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var BitMatrix_1 = __webpack_require__(0);\n            var REGION_SIZE = 8;\n            var MIN_DYNAMIC_RANGE = 24;\n            function numBetween(value, min, max) {\n                return value < min ? min : value > max ? max : value;\n            }\n            // Like BitMatrix but accepts arbitry Uint8 values\n            var Matrix = /** @class */ (function () {\n                function Matrix(width, height) {\n                    this.width = width;\n                    this.data = new Uint8ClampedArray(width * height);\n                }\n                Matrix.prototype.get = function (x, y) {\n                    return this.data[y * this.width + x];\n                };\n                Matrix.prototype.set = function (x, y, value) {\n                    this.data[y * this.width + x] = value;\n                };\n                return Matrix;\n            }());\n            function binarize(data, width, height, returnInverted) {\n                if (data.length !== width * height * 4) {\n                    throw new Error(\"Malformed data passed to binarizer.\");\n                }\n                // Convert image to greyscale\n                var greyscalePixels = new Matrix(width, height);\n                for (var x = 0; x < width; x++) {\n                    for (var y = 0; y < height; y++) {\n                        var r = data[((y * width + x) * 4) + 0];\n                        var g = data[((y * width + x) * 4) + 1];\n                        var b = data[((y * width + x) * 4) + 2];\n                        greyscalePixels.set(x, y, 0.2126 * r + 0.7152 * g + 0.0722 * b);\n                    }\n                }\n                var horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n                var verticalRegionCount = Math.ceil(height / REGION_SIZE);\n                var blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount);\n                for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n                    for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n                        var sum = 0;\n                        var min = Infinity;\n                        var max = 0;\n                        for (var y = 0; y < REGION_SIZE; y++) {\n                            for (var x = 0; x < REGION_SIZE; x++) {\n                                var pixelLumosity = greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n                                sum += pixelLumosity;\n                                min = Math.min(min, pixelLumosity);\n                                max = Math.max(max, pixelLumosity);\n                            }\n                        }\n                        var average = sum / (Math.pow(REGION_SIZE, 2));\n                        if (max - min <= MIN_DYNAMIC_RANGE) {\n                            // If variation within the block is low, assume this is a block with only light or only\n                            // dark pixels. In that case we do not want to use the average, as it would divide this\n                            // low contrast area into black and white pixels, essentially creating data out of noise.\n                            //\n                            // Default the blackpoint for these blocks to be half the min - effectively white them out\n                            average = min / 2;\n                            if (verticalRegion > 0 && hortizontalRegion > 0) {\n                                // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                                // the pixels in this block to the previously calculated black points. This is based on\n                                // the fact that dark barcode symbology is always surrounded by some amount of light\n                                // background for which reasonable black point estimates were made. The bp estimated at\n                                // the boundaries is used for the interior.\n                                // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                                var averageNeighborBlackPoint = (blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n                                    (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n                                    blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) / 4;\n                                if (min < averageNeighborBlackPoint) {\n                                    average = averageNeighborBlackPoint;\n                                }\n                            }\n                        }\n                        blackPoints.set(hortizontalRegion, verticalRegion, average);\n                    }\n                }\n                var binarized = BitMatrix_1.BitMatrix.createEmpty(width, height);\n                var inverted = null;\n                if (returnInverted) {\n                    inverted = BitMatrix_1.BitMatrix.createEmpty(width, height);\n                }\n                for (var verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n                    for (var hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n                        var left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n                        var top_1 = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n                        var sum = 0;\n                        for (var xRegion = -2; xRegion <= 2; xRegion++) {\n                            for (var yRegion = -2; yRegion <= 2; yRegion++) {\n                                sum += blackPoints.get(left + xRegion, top_1 + yRegion);\n                            }\n                        }\n                        var threshold = sum / 25;\n                        for (var xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n                            for (var yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n                                var x = hortizontalRegion * REGION_SIZE + xRegion;\n                                var y = verticalRegion * REGION_SIZE + yRegion;\n                                var lum = greyscalePixels.get(x, y);\n                                binarized.set(x, y, lum <= threshold);\n                                if (returnInverted) {\n                                    inverted.set(x, y, !(lum <= threshold));\n                                }\n                            }\n                        }\n                    }\n                }\n                if (returnInverted) {\n                    return { binarized: binarized, inverted: inverted };\n                }\n                return { binarized: binarized };\n            }\n            exports.binarize = binarize;\n\n\n            /***/\n}),\n/* 5 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var BitMatrix_1 = __webpack_require__(0);\n            var decodeData_1 = __webpack_require__(6);\n            var reedsolomon_1 = __webpack_require__(9);\n            var version_1 = __webpack_require__(10);\n            // tslint:disable:no-bitwise\n            function numBitsDiffering(x, y) {\n                var z = x ^ y;\n                var bitCount = 0;\n                while (z) {\n                    bitCount++;\n                    z &= z - 1;\n                }\n                return bitCount;\n            }\n            function pushBit(bit, byte) {\n                return (byte << 1) | bit;\n            }\n            // tslint:enable:no-bitwise\n            var FORMAT_INFO_TABLE = [\n                { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n                { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n                { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n                { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n                { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n                { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n                { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n                { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n                { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n                { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n                { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n                { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n                { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n                { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n                { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n                { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n                { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n                { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n                { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n                { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n                { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n                { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n                { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n                { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n                { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n                { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n                { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n                { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n                { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n                { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n                { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n                { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n            ];\n            var DATA_MASKS = [\n                function (p) { return ((p.y + p.x) % 2) === 0; },\n                function (p) { return (p.y % 2) === 0; },\n                function (p) { return p.x % 3 === 0; },\n                function (p) { return (p.y + p.x) % 3 === 0; },\n                function (p) { return (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0; },\n                function (p) { return ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0; },\n                function (p) { return ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0; },\n                function (p) { return ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0; },\n            ];\n            function buildFunctionPatternMask(version) {\n                var dimension = 17 + 4 * version.versionNumber;\n                var matrix = BitMatrix_1.BitMatrix.createEmpty(dimension, dimension);\n                matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n                matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n                matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n                // Alignment patterns\n                for (var _i = 0, _a = version.alignmentPatternCenters; _i < _a.length; _i++) {\n                    var x = _a[_i];\n                    for (var _b = 0, _c = version.alignmentPatternCenters; _b < _c.length; _b++) {\n                        var y = _c[_b];\n                        if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n                            matrix.setRegion(x - 2, y - 2, 5, 5, true);\n                        }\n                    }\n                }\n                matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n                matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n                if (version.versionNumber > 6) {\n                    matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n                    matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n                }\n                return matrix;\n            }\n            function readCodewords(matrix, version, formatInfo) {\n                var dataMask = DATA_MASKS[formatInfo.dataMask];\n                var dimension = matrix.height;\n                var functionPatternMask = buildFunctionPatternMask(version);\n                var codewords = [];\n                var currentByte = 0;\n                var bitsRead = 0;\n                // Read columns in pairs, from right to left\n                var readingUp = true;\n                for (var columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n                    if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n                        columnIndex--;\n                    }\n                    for (var i = 0; i < dimension; i++) {\n                        var y = readingUp ? dimension - 1 - i : i;\n                        for (var columnOffset = 0; columnOffset < 2; columnOffset++) {\n                            var x = columnIndex - columnOffset;\n                            if (!functionPatternMask.get(x, y)) {\n                                bitsRead++;\n                                var bit = matrix.get(x, y);\n                                if (dataMask({ y: y, x: x })) {\n                                    bit = !bit;\n                                }\n                                currentByte = pushBit(bit, currentByte);\n                                if (bitsRead === 8) { // Whole bytes\n                                    codewords.push(currentByte);\n                                    bitsRead = 0;\n                                    currentByte = 0;\n                                }\n                            }\n                        }\n                    }\n                    readingUp = !readingUp;\n                }\n                return codewords;\n            }\n            function readVersion(matrix) {\n                var dimension = matrix.height;\n                var provisionalVersion = Math.floor((dimension - 17) / 4);\n                if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n                    return version_1.VERSIONS[provisionalVersion - 1];\n                }\n                var topRightVersionBits = 0;\n                for (var y = 5; y >= 0; y--) {\n                    for (var x = dimension - 9; x >= dimension - 11; x--) {\n                        topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n                    }\n                }\n                var bottomLeftVersionBits = 0;\n                for (var x = 5; x >= 0; x--) {\n                    for (var y = dimension - 9; y >= dimension - 11; y--) {\n                        bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n                    }\n                }\n                var bestDifference = Infinity;\n                var bestVersion;\n                for (var _i = 0, VERSIONS_1 = version_1.VERSIONS; _i < VERSIONS_1.length; _i++) {\n                    var version = VERSIONS_1[_i];\n                    if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n                        return version;\n                    }\n                    var difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n                    if (difference < bestDifference) {\n                        bestVersion = version;\n                        bestDifference = difference;\n                    }\n                    difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n                    if (difference < bestDifference) {\n                        bestVersion = version;\n                        bestDifference = difference;\n                    }\n                }\n                // We can tolerate up to 3 bits of error since no two version info codewords will\n                // differ in less than 8 bits.\n                if (bestDifference <= 3) {\n                    return bestVersion;\n                }\n            }\n            function readFormatInformation(matrix) {\n                var topLeftFormatInfoBits = 0;\n                for (var x = 0; x <= 8; x++) {\n                    if (x !== 6) { // Skip timing pattern bit\n                        topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n                    }\n                }\n                for (var y = 7; y >= 0; y--) {\n                    if (y !== 6) { // Skip timing pattern bit\n                        topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n                    }\n                }\n                var dimension = matrix.height;\n                var topRightBottomRightFormatInfoBits = 0;\n                for (var y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n                    topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n                }\n                for (var x = dimension - 8; x < dimension; x++) { // top right\n                    topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n                }\n                var bestDifference = Infinity;\n                var bestFormatInfo = null;\n                for (var _i = 0, FORMAT_INFO_TABLE_1 = FORMAT_INFO_TABLE; _i < FORMAT_INFO_TABLE_1.length; _i++) {\n                    var _a = FORMAT_INFO_TABLE_1[_i], bits = _a.bits, formatInfo = _a.formatInfo;\n                    if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n                        return formatInfo;\n                    }\n                    var difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n                    if (difference < bestDifference) {\n                        bestFormatInfo = formatInfo;\n                        bestDifference = difference;\n                    }\n                    if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n                        difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n                        if (difference < bestDifference) {\n                            bestFormatInfo = formatInfo;\n                            bestDifference = difference;\n                        }\n                    }\n                }\n                // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n                if (bestDifference <= 3) {\n                    return bestFormatInfo;\n                }\n                return null;\n            }\n            function getDataBlocks(codewords, version, ecLevel) {\n                var ecInfo = version.errorCorrectionLevels[ecLevel];\n                var dataBlocks = [];\n                var totalCodewords = 0;\n                ecInfo.ecBlocks.forEach(function (block) {\n                    for (var i = 0; i < block.numBlocks; i++) {\n                        dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n                        totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n                    }\n                });\n                // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n                // If we pull off less there's nothing we can do.\n                // If we pull off more we can safely truncate\n                if (codewords.length < totalCodewords) {\n                    return null;\n                }\n                codewords = codewords.slice(0, totalCodewords);\n                var shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n                // Pull codewords to fill the blocks up to the minimum size\n                for (var i = 0; i < shortBlockSize; i++) {\n                    for (var _i = 0, dataBlocks_1 = dataBlocks; _i < dataBlocks_1.length; _i++) {\n                        var dataBlock = dataBlocks_1[_i];\n                        dataBlock.codewords.push(codewords.shift());\n                    }\n                }\n                // If there are any large blocks, pull codewords to fill the last element of those\n                if (ecInfo.ecBlocks.length > 1) {\n                    var smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n                    var largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n                    for (var i = 0; i < largeBlockCount; i++) {\n                        dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n                    }\n                }\n                // Add the rest of the codewords to the blocks. These are the error correction codewords.\n                while (codewords.length > 0) {\n                    for (var _a = 0, dataBlocks_2 = dataBlocks; _a < dataBlocks_2.length; _a++) {\n                        var dataBlock = dataBlocks_2[_a];\n                        dataBlock.codewords.push(codewords.shift());\n                    }\n                }\n                return dataBlocks;\n            }\n            function decodeMatrix(matrix) {\n                var version = readVersion(matrix);\n                if (!version) {\n                    return null;\n                }\n                var formatInfo = readFormatInformation(matrix);\n                if (!formatInfo) {\n                    return null;\n                }\n                var codewords = readCodewords(matrix, version, formatInfo);\n                var dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n                if (!dataBlocks) {\n                    return null;\n                }\n                // Count total number of data bytes\n                var totalBytes = dataBlocks.reduce(function (a, b) { return a + b.numDataCodewords; }, 0);\n                var resultBytes = new Uint8ClampedArray(totalBytes);\n                var resultIndex = 0;\n                for (var _i = 0, dataBlocks_3 = dataBlocks; _i < dataBlocks_3.length; _i++) {\n                    var dataBlock = dataBlocks_3[_i];\n                    var correctedBytes = reedsolomon_1.decode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n                    if (!correctedBytes) {\n                        return null;\n                    }\n                    for (var i = 0; i < dataBlock.numDataCodewords; i++) {\n                        resultBytes[resultIndex++] = correctedBytes[i];\n                    }\n                }\n                try {\n                    return decodeData_1.decode(resultBytes, version.versionNumber);\n                }\n                catch (_a) {\n                    return null;\n                }\n            }\n            function decode(matrix) {\n                if (matrix == null) {\n                    return null;\n                }\n                var result = decodeMatrix(matrix);\n                if (result) {\n                    return result;\n                }\n                // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n                for (var x = 0; x < matrix.width; x++) {\n                    for (var y = x + 1; y < matrix.height; y++) {\n                        if (matrix.get(x, y) !== matrix.get(y, x)) {\n                            matrix.set(x, y, !matrix.get(x, y));\n                            matrix.set(y, x, !matrix.get(y, x));\n                        }\n                    }\n                }\n                return decodeMatrix(matrix);\n            }\n            exports.decode = decode;\n\n\n            /***/\n}),\n/* 6 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            // tslint:disable:no-bitwise\n            var BitStream_1 = __webpack_require__(7);\n            var shiftJISTable_1 = __webpack_require__(8);\n            var Mode;\n            (function (Mode) {\n                Mode[\"Numeric\"] = \"numeric\";\n                Mode[\"Alphanumeric\"] = \"alphanumeric\";\n                Mode[\"Byte\"] = \"byte\";\n                Mode[\"Kanji\"] = \"kanji\";\n                Mode[\"ECI\"] = \"eci\";\n            })(Mode = exports.Mode || (exports.Mode = {}));\n            var ModeByte;\n            (function (ModeByte) {\n                ModeByte[ModeByte[\"Terminator\"] = 0] = \"Terminator\";\n                ModeByte[ModeByte[\"Numeric\"] = 1] = \"Numeric\";\n                ModeByte[ModeByte[\"Alphanumeric\"] = 2] = \"Alphanumeric\";\n                ModeByte[ModeByte[\"Byte\"] = 4] = \"Byte\";\n                ModeByte[ModeByte[\"Kanji\"] = 8] = \"Kanji\";\n                ModeByte[ModeByte[\"ECI\"] = 7] = \"ECI\";\n                // StructuredAppend = 0x3,\n                // FNC1FirstPosition = 0x5,\n                // FNC1SecondPosition = 0x9,\n            })(ModeByte || (ModeByte = {}));\n            function decodeNumeric(stream, size) {\n                var bytes = [];\n                var text = \"\";\n                var characterCountSize = [10, 12, 14][size];\n                var length = stream.readBits(characterCountSize);\n                // Read digits in groups of 3\n                while (length >= 3) {\n                    var num = stream.readBits(10);\n                    if (num >= 1000) {\n                        throw new Error(\"Invalid numeric value above 999\");\n                    }\n                    var a = Math.floor(num / 100);\n                    var b = Math.floor(num / 10) % 10;\n                    var c = num % 10;\n                    bytes.push(48 + a, 48 + b, 48 + c);\n                    text += a.toString() + b.toString() + c.toString();\n                    length -= 3;\n                }\n                // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n                if (length === 2) {\n                    var num = stream.readBits(7);\n                    if (num >= 100) {\n                        throw new Error(\"Invalid numeric value above 99\");\n                    }\n                    var a = Math.floor(num / 10);\n                    var b = num % 10;\n                    bytes.push(48 + a, 48 + b);\n                    text += a.toString() + b.toString();\n                }\n                else if (length === 1) {\n                    var num = stream.readBits(4);\n                    if (num >= 10) {\n                        throw new Error(\"Invalid numeric value above 9\");\n                    }\n                    bytes.push(48 + num);\n                    text += num.toString();\n                }\n                return { bytes: bytes, text: text };\n            }\n            var AlphanumericCharacterCodes = [\n                \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n                \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n                \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n                \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n                \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n            ];\n            function decodeAlphanumeric(stream, size) {\n                var bytes = [];\n                var text = \"\";\n                var characterCountSize = [9, 11, 13][size];\n                var length = stream.readBits(characterCountSize);\n                while (length >= 2) {\n                    var v = stream.readBits(11);\n                    var a = Math.floor(v / 45);\n                    var b = v % 45;\n                    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n                    text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n                    length -= 2;\n                }\n                if (length === 1) {\n                    var a = stream.readBits(6);\n                    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n                    text += AlphanumericCharacterCodes[a];\n                }\n                return { bytes: bytes, text: text };\n            }\n            function decodeByte(stream, size) {\n                var bytes = [];\n                var text = \"\";\n                var characterCountSize = [8, 16, 16][size];\n                var length = stream.readBits(characterCountSize);\n                for (var i = 0; i < length; i++) {\n                    var b = stream.readBits(8);\n                    bytes.push(b);\n                }\n                try {\n                    text += decodeURIComponent(bytes.map(function (b) { return \"%\" + (\"0\" + b.toString(16)).substr(-2); }).join(\"\"));\n                }\n                catch (_a) {\n                    // failed to decode\n                }\n                return { bytes: bytes, text: text };\n            }\n            function decodeKanji(stream, size) {\n                var bytes = [];\n                var text = \"\";\n                var characterCountSize = [8, 10, 12][size];\n                var length = stream.readBits(characterCountSize);\n                for (var i = 0; i < length; i++) {\n                    var k = stream.readBits(13);\n                    var c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n                    if (c < 0x1F00) {\n                        c += 0x8140;\n                    }\n                    else {\n                        c += 0xC140;\n                    }\n                    bytes.push(c >> 8, c & 0xFF);\n                    text += String.fromCharCode(shiftJISTable_1.shiftJISTable[c]);\n                }\n                return { bytes: bytes, text: text };\n            }\n            function decode(data, version) {\n                var _a, _b, _c, _d;\n                var stream = new BitStream_1.BitStream(data);\n                // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n                var size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n                var result = {\n                    text: \"\",\n                    bytes: [],\n                    chunks: [],\n                    version: version,\n                };\n                while (stream.available() >= 4) {\n                    var mode = stream.readBits(4);\n                    if (mode === ModeByte.Terminator) {\n                        return result;\n                    }\n                    else if (mode === ModeByte.ECI) {\n                        if (stream.readBits(1) === 0) {\n                            result.chunks.push({\n                                type: Mode.ECI,\n                                assignmentNumber: stream.readBits(7),\n                            });\n                        }\n                        else if (stream.readBits(1) === 0) {\n                            result.chunks.push({\n                                type: Mode.ECI,\n                                assignmentNumber: stream.readBits(14),\n                            });\n                        }\n                        else if (stream.readBits(1) === 0) {\n                            result.chunks.push({\n                                type: Mode.ECI,\n                                assignmentNumber: stream.readBits(21),\n                            });\n                        }\n                        else {\n                            // ECI data seems corrupted\n                            result.chunks.push({\n                                type: Mode.ECI,\n                                assignmentNumber: -1,\n                            });\n                        }\n                    }\n                    else if (mode === ModeByte.Numeric) {\n                        var numericResult = decodeNumeric(stream, size);\n                        result.text += numericResult.text;\n                        (_a = result.bytes).push.apply(_a, numericResult.bytes);\n                        result.chunks.push({\n                            type: Mode.Numeric,\n                            text: numericResult.text,\n                        });\n                    }\n                    else if (mode === ModeByte.Alphanumeric) {\n                        var alphanumericResult = decodeAlphanumeric(stream, size);\n                        result.text += alphanumericResult.text;\n                        (_b = result.bytes).push.apply(_b, alphanumericResult.bytes);\n                        result.chunks.push({\n                            type: Mode.Alphanumeric,\n                            text: alphanumericResult.text,\n                        });\n                    }\n                    else if (mode === ModeByte.Byte) {\n                        var byteResult = decodeByte(stream, size);\n                        result.text += byteResult.text;\n                        (_c = result.bytes).push.apply(_c, byteResult.bytes);\n                        result.chunks.push({\n                            type: Mode.Byte,\n                            bytes: byteResult.bytes,\n                            text: byteResult.text,\n                        });\n                    }\n                    else if (mode === ModeByte.Kanji) {\n                        var kanjiResult = decodeKanji(stream, size);\n                        result.text += kanjiResult.text;\n                        (_d = result.bytes).push.apply(_d, kanjiResult.bytes);\n                        result.chunks.push({\n                            type: Mode.Kanji,\n                            bytes: kanjiResult.bytes,\n                            text: kanjiResult.text,\n                        });\n                    }\n                }\n                // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n                if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n                    return result;\n                }\n            }\n            exports.decode = decode;\n\n\n            /***/\n}),\n/* 7 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            // tslint:disable:no-bitwise\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var BitStream = /** @class */ (function () {\n                function BitStream(bytes) {\n                    this.byteOffset = 0;\n                    this.bitOffset = 0;\n                    this.bytes = bytes;\n                }\n                BitStream.prototype.readBits = function (numBits) {\n                    if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n                        throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n                    }\n                    var result = 0;\n                    // First, read remainder from current byte\n                    if (this.bitOffset > 0) {\n                        var bitsLeft = 8 - this.bitOffset;\n                        var toRead = numBits < bitsLeft ? numBits : bitsLeft;\n                        var bitsToNotRead = bitsLeft - toRead;\n                        var mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n                        result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n                        numBits -= toRead;\n                        this.bitOffset += toRead;\n                        if (this.bitOffset === 8) {\n                            this.bitOffset = 0;\n                            this.byteOffset++;\n                        }\n                    }\n                    // Next read whole bytes\n                    if (numBits > 0) {\n                        while (numBits >= 8) {\n                            result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n                            this.byteOffset++;\n                            numBits -= 8;\n                        }\n                        // Finally read a partial byte\n                        if (numBits > 0) {\n                            var bitsToNotRead = 8 - numBits;\n                            var mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n                            result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n                            this.bitOffset += numBits;\n                        }\n                    }\n                    return result;\n                };\n                BitStream.prototype.available = function () {\n                    return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n                };\n                return BitStream;\n            }());\n            exports.BitStream = BitStream;\n\n\n            /***/\n}),\n/* 8 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            exports.shiftJISTable = {\n                0x20: 0x0020,\n                0x21: 0x0021,\n                0x22: 0x0022,\n                0x23: 0x0023,\n                0x24: 0x0024,\n                0x25: 0x0025,\n                0x26: 0x0026,\n                0x27: 0x0027,\n                0x28: 0x0028,\n                0x29: 0x0029,\n                0x2A: 0x002A,\n                0x2B: 0x002B,\n                0x2C: 0x002C,\n                0x2D: 0x002D,\n                0x2E: 0x002E,\n                0x2F: 0x002F,\n                0x30: 0x0030,\n                0x31: 0x0031,\n                0x32: 0x0032,\n                0x33: 0x0033,\n                0x34: 0x0034,\n                0x35: 0x0035,\n                0x36: 0x0036,\n                0x37: 0x0037,\n                0x38: 0x0038,\n                0x39: 0x0039,\n                0x3A: 0x003A,\n                0x3B: 0x003B,\n                0x3C: 0x003C,\n                0x3D: 0x003D,\n                0x3E: 0x003E,\n                0x3F: 0x003F,\n                0x40: 0x0040,\n                0x41: 0x0041,\n                0x42: 0x0042,\n                0x43: 0x0043,\n                0x44: 0x0044,\n                0x45: 0x0045,\n                0x46: 0x0046,\n                0x47: 0x0047,\n                0x48: 0x0048,\n                0x49: 0x0049,\n                0x4A: 0x004A,\n                0x4B: 0x004B,\n                0x4C: 0x004C,\n                0x4D: 0x004D,\n                0x4E: 0x004E,\n                0x4F: 0x004F,\n                0x50: 0x0050,\n                0x51: 0x0051,\n                0x52: 0x0052,\n                0x53: 0x0053,\n                0x54: 0x0054,\n                0x55: 0x0055,\n                0x56: 0x0056,\n                0x57: 0x0057,\n                0x58: 0x0058,\n                0x59: 0x0059,\n                0x5A: 0x005A,\n                0x5B: 0x005B,\n                0x5C: 0x00A5,\n                0x5D: 0x005D,\n                0x5E: 0x005E,\n                0x5F: 0x005F,\n                0x60: 0x0060,\n                0x61: 0x0061,\n                0x62: 0x0062,\n                0x63: 0x0063,\n                0x64: 0x0064,\n                0x65: 0x0065,\n                0x66: 0x0066,\n                0x67: 0x0067,\n                0x68: 0x0068,\n                0x69: 0x0069,\n                0x6A: 0x006A,\n                0x6B: 0x006B,\n                0x6C: 0x006C,\n                0x6D: 0x006D,\n                0x6E: 0x006E,\n                0x6F: 0x006F,\n                0x70: 0x0070,\n                0x71: 0x0071,\n                0x72: 0x0072,\n                0x73: 0x0073,\n                0x74: 0x0074,\n                0x75: 0x0075,\n                0x76: 0x0076,\n                0x77: 0x0077,\n                0x78: 0x0078,\n                0x79: 0x0079,\n                0x7A: 0x007A,\n                0x7B: 0x007B,\n                0x7C: 0x007C,\n                0x7D: 0x007D,\n                0x7E: 0x203E,\n                0x8140: 0x3000,\n                0x8141: 0x3001,\n                0x8142: 0x3002,\n                0x8143: 0xFF0C,\n                0x8144: 0xFF0E,\n                0x8145: 0x30FB,\n                0x8146: 0xFF1A,\n                0x8147: 0xFF1B,\n                0x8148: 0xFF1F,\n                0x8149: 0xFF01,\n                0x814A: 0x309B,\n                0x814B: 0x309C,\n                0x814C: 0x00B4,\n                0x814D: 0xFF40,\n                0x814E: 0x00A8,\n                0x814F: 0xFF3E,\n                0x8150: 0xFFE3,\n                0x8151: 0xFF3F,\n                0x8152: 0x30FD,\n                0x8153: 0x30FE,\n                0x8154: 0x309D,\n                0x8155: 0x309E,\n                0x8156: 0x3003,\n                0x8157: 0x4EDD,\n                0x8158: 0x3005,\n                0x8159: 0x3006,\n                0x815A: 0x3007,\n                0x815B: 0x30FC,\n                0x815C: 0x2015,\n                0x815D: 0x2010,\n                0x815E: 0xFF0F,\n                0x815F: 0x005C,\n                0x8160: 0x301C,\n                0x8161: 0x2016,\n                0x8162: 0xFF5C,\n                0x8163: 0x2026,\n                0x8164: 0x2025,\n                0x8165: 0x2018,\n                0x8166: 0x2019,\n                0x8167: 0x201C,\n                0x8168: 0x201D,\n                0x8169: 0xFF08,\n                0x816A: 0xFF09,\n                0x816B: 0x3014,\n                0x816C: 0x3015,\n                0x816D: 0xFF3B,\n                0x816E: 0xFF3D,\n                0x816F: 0xFF5B,\n                0x8170: 0xFF5D,\n                0x8171: 0x3008,\n                0x8172: 0x3009,\n                0x8173: 0x300A,\n                0x8174: 0x300B,\n                0x8175: 0x300C,\n                0x8176: 0x300D,\n                0x8177: 0x300E,\n                0x8178: 0x300F,\n                0x8179: 0x3010,\n                0x817A: 0x3011,\n                0x817B: 0xFF0B,\n                0x817C: 0x2212,\n                0x817D: 0x00B1,\n                0x817E: 0x00D7,\n                0x8180: 0x00F7,\n                0x8181: 0xFF1D,\n                0x8182: 0x2260,\n                0x8183: 0xFF1C,\n                0x8184: 0xFF1E,\n                0x8185: 0x2266,\n                0x8186: 0x2267,\n                0x8187: 0x221E,\n                0x8188: 0x2234,\n                0x8189: 0x2642,\n                0x818A: 0x2640,\n                0x818B: 0x00B0,\n                0x818C: 0x2032,\n                0x818D: 0x2033,\n                0x818E: 0x2103,\n                0x818F: 0xFFE5,\n                0x8190: 0xFF04,\n                0x8191: 0x00A2,\n                0x8192: 0x00A3,\n                0x8193: 0xFF05,\n                0x8194: 0xFF03,\n                0x8195: 0xFF06,\n                0x8196: 0xFF0A,\n                0x8197: 0xFF20,\n                0x8198: 0x00A7,\n                0x8199: 0x2606,\n                0x819A: 0x2605,\n                0x819B: 0x25CB,\n                0x819C: 0x25CF,\n                0x819D: 0x25CE,\n                0x819E: 0x25C7,\n                0x819F: 0x25C6,\n                0x81A0: 0x25A1,\n                0x81A1: 0x25A0,\n                0x81A2: 0x25B3,\n                0x81A3: 0x25B2,\n                0x81A4: 0x25BD,\n                0x81A5: 0x25BC,\n                0x81A6: 0x203B,\n                0x81A7: 0x3012,\n                0x81A8: 0x2192,\n                0x81A9: 0x2190,\n                0x81AA: 0x2191,\n                0x81AB: 0x2193,\n                0x81AC: 0x3013,\n                0x81B8: 0x2208,\n                0x81B9: 0x220B,\n                0x81BA: 0x2286,\n                0x81BB: 0x2287,\n                0x81BC: 0x2282,\n                0x81BD: 0x2283,\n                0x81BE: 0x222A,\n                0x81BF: 0x2229,\n                0x81C8: 0x2227,\n                0x81C9: 0x2228,\n                0x81CA: 0x00AC,\n                0x81CB: 0x21D2,\n                0x81CC: 0x21D4,\n                0x81CD: 0x2200,\n                0x81CE: 0x2203,\n                0x81DA: 0x2220,\n                0x81DB: 0x22A5,\n                0x81DC: 0x2312,\n                0x81DD: 0x2202,\n                0x81DE: 0x2207,\n                0x81DF: 0x2261,\n                0x81E0: 0x2252,\n                0x81E1: 0x226A,\n                0x81E2: 0x226B,\n                0x81E3: 0x221A,\n                0x81E4: 0x223D,\n                0x81E5: 0x221D,\n                0x81E6: 0x2235,\n                0x81E7: 0x222B,\n                0x81E8: 0x222C,\n                0x81F0: 0x212B,\n                0x81F1: 0x2030,\n                0x81F2: 0x266F,\n                0x81F3: 0x266D,\n                0x81F4: 0x266A,\n                0x81F5: 0x2020,\n                0x81F6: 0x2021,\n                0x81F7: 0x00B6,\n                0x81FC: 0x25EF,\n                0x824F: 0xFF10,\n                0x8250: 0xFF11,\n                0x8251: 0xFF12,\n                0x8252: 0xFF13,\n                0x8253: 0xFF14,\n                0x8254: 0xFF15,\n                0x8255: 0xFF16,\n                0x8256: 0xFF17,\n                0x8257: 0xFF18,\n                0x8258: 0xFF19,\n                0x8260: 0xFF21,\n                0x8261: 0xFF22,\n                0x8262: 0xFF23,\n                0x8263: 0xFF24,\n                0x8264: 0xFF25,\n                0x8265: 0xFF26,\n                0x8266: 0xFF27,\n                0x8267: 0xFF28,\n                0x8268: 0xFF29,\n                0x8269: 0xFF2A,\n                0x826A: 0xFF2B,\n                0x826B: 0xFF2C,\n                0x826C: 0xFF2D,\n                0x826D: 0xFF2E,\n                0x826E: 0xFF2F,\n                0x826F: 0xFF30,\n                0x8270: 0xFF31,\n                0x8271: 0xFF32,\n                0x8272: 0xFF33,\n                0x8273: 0xFF34,\n                0x8274: 0xFF35,\n                0x8275: 0xFF36,\n                0x8276: 0xFF37,\n                0x8277: 0xFF38,\n                0x8278: 0xFF39,\n                0x8279: 0xFF3A,\n                0x8281: 0xFF41,\n                0x8282: 0xFF42,\n                0x8283: 0xFF43,\n                0x8284: 0xFF44,\n                0x8285: 0xFF45,\n                0x8286: 0xFF46,\n                0x8287: 0xFF47,\n                0x8288: 0xFF48,\n                0x8289: 0xFF49,\n                0x828A: 0xFF4A,\n                0x828B: 0xFF4B,\n                0x828C: 0xFF4C,\n                0x828D: 0xFF4D,\n                0x828E: 0xFF4E,\n                0x828F: 0xFF4F,\n                0x8290: 0xFF50,\n                0x8291: 0xFF51,\n                0x8292: 0xFF52,\n                0x8293: 0xFF53,\n                0x8294: 0xFF54,\n                0x8295: 0xFF55,\n                0x8296: 0xFF56,\n                0x8297: 0xFF57,\n                0x8298: 0xFF58,\n                0x8299: 0xFF59,\n                0x829A: 0xFF5A,\n                0x829F: 0x3041,\n                0x82A0: 0x3042,\n                0x82A1: 0x3043,\n                0x82A2: 0x3044,\n                0x82A3: 0x3045,\n                0x82A4: 0x3046,\n                0x82A5: 0x3047,\n                0x82A6: 0x3048,\n                0x82A7: 0x3049,\n                0x82A8: 0x304A,\n                0x82A9: 0x304B,\n                0x82AA: 0x304C,\n                0x82AB: 0x304D,\n                0x82AC: 0x304E,\n                0x82AD: 0x304F,\n                0x82AE: 0x3050,\n                0x82AF: 0x3051,\n                0x82B0: 0x3052,\n                0x82B1: 0x3053,\n                0x82B2: 0x3054,\n                0x82B3: 0x3055,\n                0x82B4: 0x3056,\n                0x82B5: 0x3057,\n                0x82B6: 0x3058,\n                0x82B7: 0x3059,\n                0x82B8: 0x305A,\n                0x82B9: 0x305B,\n                0x82BA: 0x305C,\n                0x82BB: 0x305D,\n                0x82BC: 0x305E,\n                0x82BD: 0x305F,\n                0x82BE: 0x3060,\n                0x82BF: 0x3061,\n                0x82C0: 0x3062,\n                0x82C1: 0x3063,\n                0x82C2: 0x3064,\n                0x82C3: 0x3065,\n                0x82C4: 0x3066,\n                0x82C5: 0x3067,\n                0x82C6: 0x3068,\n                0x82C7: 0x3069,\n                0x82C8: 0x306A,\n                0x82C9: 0x306B,\n                0x82CA: 0x306C,\n                0x82CB: 0x306D,\n                0x82CC: 0x306E,\n                0x82CD: 0x306F,\n                0x82CE: 0x3070,\n                0x82CF: 0x3071,\n                0x82D0: 0x3072,\n                0x82D1: 0x3073,\n                0x82D2: 0x3074,\n                0x82D3: 0x3075,\n                0x82D4: 0x3076,\n                0x82D5: 0x3077,\n                0x82D6: 0x3078,\n                0x82D7: 0x3079,\n                0x82D8: 0x307A,\n                0x82D9: 0x307B,\n                0x82DA: 0x307C,\n                0x82DB: 0x307D,\n                0x82DC: 0x307E,\n                0x82DD: 0x307F,\n                0x82DE: 0x3080,\n                0x82DF: 0x3081,\n                0x82E0: 0x3082,\n                0x82E1: 0x3083,\n                0x82E2: 0x3084,\n                0x82E3: 0x3085,\n                0x82E4: 0x3086,\n                0x82E5: 0x3087,\n                0x82E6: 0x3088,\n                0x82E7: 0x3089,\n                0x82E8: 0x308A,\n                0x82E9: 0x308B,\n                0x82EA: 0x308C,\n                0x82EB: 0x308D,\n                0x82EC: 0x308E,\n                0x82ED: 0x308F,\n                0x82EE: 0x3090,\n                0x82EF: 0x3091,\n                0x82F0: 0x3092,\n                0x82F1: 0x3093,\n                0x8340: 0x30A1,\n                0x8341: 0x30A2,\n                0x8342: 0x30A3,\n                0x8343: 0x30A4,\n                0x8344: 0x30A5,\n                0x8345: 0x30A6,\n                0x8346: 0x30A7,\n                0x8347: 0x30A8,\n                0x8348: 0x30A9,\n                0x8349: 0x30AA,\n                0x834A: 0x30AB,\n                0x834B: 0x30AC,\n                0x834C: 0x30AD,\n                0x834D: 0x30AE,\n                0x834E: 0x30AF,\n                0x834F: 0x30B0,\n                0x8350: 0x30B1,\n                0x8351: 0x30B2,\n                0x8352: 0x30B3,\n                0x8353: 0x30B4,\n                0x8354: 0x30B5,\n                0x8355: 0x30B6,\n                0x8356: 0x30B7,\n                0x8357: 0x30B8,\n                0x8358: 0x30B9,\n                0x8359: 0x30BA,\n                0x835A: 0x30BB,\n                0x835B: 0x30BC,\n                0x835C: 0x30BD,\n                0x835D: 0x30BE,\n                0x835E: 0x30BF,\n                0x835F: 0x30C0,\n                0x8360: 0x30C1,\n                0x8361: 0x30C2,\n                0x8362: 0x30C3,\n                0x8363: 0x30C4,\n                0x8364: 0x30C5,\n                0x8365: 0x30C6,\n                0x8366: 0x30C7,\n                0x8367: 0x30C8,\n                0x8368: 0x30C9,\n                0x8369: 0x30CA,\n                0x836A: 0x30CB,\n                0x836B: 0x30CC,\n                0x836C: 0x30CD,\n                0x836D: 0x30CE,\n                0x836E: 0x30CF,\n                0x836F: 0x30D0,\n                0x8370: 0x30D1,\n                0x8371: 0x30D2,\n                0x8372: 0x30D3,\n                0x8373: 0x30D4,\n                0x8374: 0x30D5,\n                0x8375: 0x30D6,\n                0x8376: 0x30D7,\n                0x8377: 0x30D8,\n                0x8378: 0x30D9,\n                0x8379: 0x30DA,\n                0x837A: 0x30DB,\n                0x837B: 0x30DC,\n                0x837C: 0x30DD,\n                0x837D: 0x30DE,\n                0x837E: 0x30DF,\n                0x8380: 0x30E0,\n                0x8381: 0x30E1,\n                0x8382: 0x30E2,\n                0x8383: 0x30E3,\n                0x8384: 0x30E4,\n                0x8385: 0x30E5,\n                0x8386: 0x30E6,\n                0x8387: 0x30E7,\n                0x8388: 0x30E8,\n                0x8389: 0x30E9,\n                0x838A: 0x30EA,\n                0x838B: 0x30EB,\n                0x838C: 0x30EC,\n                0x838D: 0x30ED,\n                0x838E: 0x30EE,\n                0x838F: 0x30EF,\n                0x8390: 0x30F0,\n                0x8391: 0x30F1,\n                0x8392: 0x30F2,\n                0x8393: 0x30F3,\n                0x8394: 0x30F4,\n                0x8395: 0x30F5,\n                0x8396: 0x30F6,\n                0x839F: 0x0391,\n                0x83A0: 0x0392,\n                0x83A1: 0x0393,\n                0x83A2: 0x0394,\n                0x83A3: 0x0395,\n                0x83A4: 0x0396,\n                0x83A5: 0x0397,\n                0x83A6: 0x0398,\n                0x83A7: 0x0399,\n                0x83A8: 0x039A,\n                0x83A9: 0x039B,\n                0x83AA: 0x039C,\n                0x83AB: 0x039D,\n                0x83AC: 0x039E,\n                0x83AD: 0x039F,\n                0x83AE: 0x03A0,\n                0x83AF: 0x03A1,\n                0x83B0: 0x03A3,\n                0x83B1: 0x03A4,\n                0x83B2: 0x03A5,\n                0x83B3: 0x03A6,\n                0x83B4: 0x03A7,\n                0x83B5: 0x03A8,\n                0x83B6: 0x03A9,\n                0x83BF: 0x03B1,\n                0x83C0: 0x03B2,\n                0x83C1: 0x03B3,\n                0x83C2: 0x03B4,\n                0x83C3: 0x03B5,\n                0x83C4: 0x03B6,\n                0x83C5: 0x03B7,\n                0x83C6: 0x03B8,\n                0x83C7: 0x03B9,\n                0x83C8: 0x03BA,\n                0x83C9: 0x03BB,\n                0x83CA: 0x03BC,\n                0x83CB: 0x03BD,\n                0x83CC: 0x03BE,\n                0x83CD: 0x03BF,\n                0x83CE: 0x03C0,\n                0x83CF: 0x03C1,\n                0x83D0: 0x03C3,\n                0x83D1: 0x03C4,\n                0x83D2: 0x03C5,\n                0x83D3: 0x03C6,\n                0x83D4: 0x03C7,\n                0x83D5: 0x03C8,\n                0x83D6: 0x03C9,\n                0x8440: 0x0410,\n                0x8441: 0x0411,\n                0x8442: 0x0412,\n                0x8443: 0x0413,\n                0x8444: 0x0414,\n                0x8445: 0x0415,\n                0x8446: 0x0401,\n                0x8447: 0x0416,\n                0x8448: 0x0417,\n                0x8449: 0x0418,\n                0x844A: 0x0419,\n                0x844B: 0x041A,\n                0x844C: 0x041B,\n                0x844D: 0x041C,\n                0x844E: 0x041D,\n                0x844F: 0x041E,\n                0x8450: 0x041F,\n                0x8451: 0x0420,\n                0x8452: 0x0421,\n                0x8453: 0x0422,\n                0x8454: 0x0423,\n                0x8455: 0x0424,\n                0x8456: 0x0425,\n                0x8457: 0x0426,\n                0x8458: 0x0427,\n                0x8459: 0x0428,\n                0x845A: 0x0429,\n                0x845B: 0x042A,\n                0x845C: 0x042B,\n                0x845D: 0x042C,\n                0x845E: 0x042D,\n                0x845F: 0x042E,\n                0x8460: 0x042F,\n                0x8470: 0x0430,\n                0x8471: 0x0431,\n                0x8472: 0x0432,\n                0x8473: 0x0433,\n                0x8474: 0x0434,\n                0x8475: 0x0435,\n                0x8476: 0x0451,\n                0x8477: 0x0436,\n                0x8478: 0x0437,\n                0x8479: 0x0438,\n                0x847A: 0x0439,\n                0x847B: 0x043A,\n                0x847C: 0x043B,\n                0x847D: 0x043C,\n                0x847E: 0x043D,\n                0x8480: 0x043E,\n                0x8481: 0x043F,\n                0x8482: 0x0440,\n                0x8483: 0x0441,\n                0x8484: 0x0442,\n                0x8485: 0x0443,\n                0x8486: 0x0444,\n                0x8487: 0x0445,\n                0x8488: 0x0446,\n                0x8489: 0x0447,\n                0x848A: 0x0448,\n                0x848B: 0x0449,\n                0x848C: 0x044A,\n                0x848D: 0x044B,\n                0x848E: 0x044C,\n                0x848F: 0x044D,\n                0x8490: 0x044E,\n                0x8491: 0x044F,\n                0x849F: 0x2500,\n                0x84A0: 0x2502,\n                0x84A1: 0x250C,\n                0x84A2: 0x2510,\n                0x84A3: 0x2518,\n                0x84A4: 0x2514,\n                0x84A5: 0x251C,\n                0x84A6: 0x252C,\n                0x84A7: 0x2524,\n                0x84A8: 0x2534,\n                0x84A9: 0x253C,\n                0x84AA: 0x2501,\n                0x84AB: 0x2503,\n                0x84AC: 0x250F,\n                0x84AD: 0x2513,\n                0x84AE: 0x251B,\n                0x84AF: 0x2517,\n                0x84B0: 0x2523,\n                0x84B1: 0x2533,\n                0x84B2: 0x252B,\n                0x84B3: 0x253B,\n                0x84B4: 0x254B,\n                0x84B5: 0x2520,\n                0x84B6: 0x252F,\n                0x84B7: 0x2528,\n                0x84B8: 0x2537,\n                0x84B9: 0x253F,\n                0x84BA: 0x251D,\n                0x84BB: 0x2530,\n                0x84BC: 0x2525,\n                0x84BD: 0x2538,\n                0x84BE: 0x2542,\n                0x889F: 0x4E9C,\n                0x88A0: 0x5516,\n                0x88A1: 0x5A03,\n                0x88A2: 0x963F,\n                0x88A3: 0x54C0,\n                0x88A4: 0x611B,\n                0x88A5: 0x6328,\n                0x88A6: 0x59F6,\n                0x88A7: 0x9022,\n                0x88A8: 0x8475,\n                0x88A9: 0x831C,\n                0x88AA: 0x7A50,\n                0x88AB: 0x60AA,\n                0x88AC: 0x63E1,\n                0x88AD: 0x6E25,\n                0x88AE: 0x65ED,\n                0x88AF: 0x8466,\n                0x88B0: 0x82A6,\n                0x88B1: 0x9BF5,\n                0x88B2: 0x6893,\n                0x88B3: 0x5727,\n                0x88B4: 0x65A1,\n                0x88B5: 0x6271,\n                0x88B6: 0x5B9B,\n                0x88B7: 0x59D0,\n                0x88B8: 0x867B,\n                0x88B9: 0x98F4,\n                0x88BA: 0x7D62,\n                0x88BB: 0x7DBE,\n                0x88BC: 0x9B8E,\n                0x88BD: 0x6216,\n                0x88BE: 0x7C9F,\n                0x88BF: 0x88B7,\n                0x88C0: 0x5B89,\n                0x88C1: 0x5EB5,\n                0x88C2: 0x6309,\n                0x88C3: 0x6697,\n                0x88C4: 0x6848,\n                0x88C5: 0x95C7,\n                0x88C6: 0x978D,\n                0x88C7: 0x674F,\n                0x88C8: 0x4EE5,\n                0x88C9: 0x4F0A,\n                0x88CA: 0x4F4D,\n                0x88CB: 0x4F9D,\n                0x88CC: 0x5049,\n                0x88CD: 0x56F2,\n                0x88CE: 0x5937,\n                0x88CF: 0x59D4,\n                0x88D0: 0x5A01,\n                0x88D1: 0x5C09,\n                0x88D2: 0x60DF,\n                0x88D3: 0x610F,\n                0x88D4: 0x6170,\n                0x88D5: 0x6613,\n                0x88D6: 0x6905,\n                0x88D7: 0x70BA,\n                0x88D8: 0x754F,\n                0x88D9: 0x7570,\n                0x88DA: 0x79FB,\n                0x88DB: 0x7DAD,\n                0x88DC: 0x7DEF,\n                0x88DD: 0x80C3,\n                0x88DE: 0x840E,\n                0x88DF: 0x8863,\n                0x88E0: 0x8B02,\n                0x88E1: 0x9055,\n                0x88E2: 0x907A,\n                0x88E3: 0x533B,\n                0x88E4: 0x4E95,\n                0x88E5: 0x4EA5,\n                0x88E6: 0x57DF,\n                0x88E7: 0x80B2,\n                0x88E8: 0x90C1,\n                0x88E9: 0x78EF,\n                0x88EA: 0x4E00,\n                0x88EB: 0x58F1,\n                0x88EC: 0x6EA2,\n                0x88ED: 0x9038,\n                0x88EE: 0x7A32,\n                0x88EF: 0x8328,\n                0x88F0: 0x828B,\n                0x88F1: 0x9C2F,\n                0x88F2: 0x5141,\n                0x88F3: 0x5370,\n                0x88F4: 0x54BD,\n                0x88F5: 0x54E1,\n                0x88F6: 0x56E0,\n                0x88F7: 0x59FB,\n                0x88F8: 0x5F15,\n                0x88F9: 0x98F2,\n                0x88FA: 0x6DEB,\n                0x88FB: 0x80E4,\n                0x88FC: 0x852D,\n                0x8940: 0x9662,\n                0x8941: 0x9670,\n                0x8942: 0x96A0,\n                0x8943: 0x97FB,\n                0x8944: 0x540B,\n                0x8945: 0x53F3,\n                0x8946: 0x5B87,\n                0x8947: 0x70CF,\n                0x8948: 0x7FBD,\n                0x8949: 0x8FC2,\n                0x894A: 0x96E8,\n                0x894B: 0x536F,\n                0x894C: 0x9D5C,\n                0x894D: 0x7ABA,\n                0x894E: 0x4E11,\n                0x894F: 0x7893,\n                0x8950: 0x81FC,\n                0x8951: 0x6E26,\n                0x8952: 0x5618,\n                0x8953: 0x5504,\n                0x8954: 0x6B1D,\n                0x8955: 0x851A,\n                0x8956: 0x9C3B,\n                0x8957: 0x59E5,\n                0x8958: 0x53A9,\n                0x8959: 0x6D66,\n                0x895A: 0x74DC,\n                0x895B: 0x958F,\n                0x895C: 0x5642,\n                0x895D: 0x4E91,\n                0x895E: 0x904B,\n                0x895F: 0x96F2,\n                0x8960: 0x834F,\n                0x8961: 0x990C,\n                0x8962: 0x53E1,\n                0x8963: 0x55B6,\n                0x8964: 0x5B30,\n                0x8965: 0x5F71,\n                0x8966: 0x6620,\n                0x8967: 0x66F3,\n                0x8968: 0x6804,\n                0x8969: 0x6C38,\n                0x896A: 0x6CF3,\n                0x896B: 0x6D29,\n                0x896C: 0x745B,\n                0x896D: 0x76C8,\n                0x896E: 0x7A4E,\n                0x896F: 0x9834,\n                0x8970: 0x82F1,\n                0x8971: 0x885B,\n                0x8972: 0x8A60,\n                0x8973: 0x92ED,\n                0x8974: 0x6DB2,\n                0x8975: 0x75AB,\n                0x8976: 0x76CA,\n                0x8977: 0x99C5,\n                0x8978: 0x60A6,\n                0x8979: 0x8B01,\n                0x897A: 0x8D8A,\n                0x897B: 0x95B2,\n                0x897C: 0x698E,\n                0x897D: 0x53AD,\n                0x897E: 0x5186,\n                0x8980: 0x5712,\n                0x8981: 0x5830,\n                0x8982: 0x5944,\n                0x8983: 0x5BB4,\n                0x8984: 0x5EF6,\n                0x8985: 0x6028,\n                0x8986: 0x63A9,\n                0x8987: 0x63F4,\n                0x8988: 0x6CBF,\n                0x8989: 0x6F14,\n                0x898A: 0x708E,\n                0x898B: 0x7114,\n                0x898C: 0x7159,\n                0x898D: 0x71D5,\n                0x898E: 0x733F,\n                0x898F: 0x7E01,\n                0x8990: 0x8276,\n                0x8991: 0x82D1,\n                0x8992: 0x8597,\n                0x8993: 0x9060,\n                0x8994: 0x925B,\n                0x8995: 0x9D1B,\n                0x8996: 0x5869,\n                0x8997: 0x65BC,\n                0x8998: 0x6C5A,\n                0x8999: 0x7525,\n                0x899A: 0x51F9,\n                0x899B: 0x592E,\n                0x899C: 0x5965,\n                0x899D: 0x5F80,\n                0x899E: 0x5FDC,\n                0x899F: 0x62BC,\n                0x89A0: 0x65FA,\n                0x89A1: 0x6A2A,\n                0x89A2: 0x6B27,\n                0x89A3: 0x6BB4,\n                0x89A4: 0x738B,\n                0x89A5: 0x7FC1,\n                0x89A6: 0x8956,\n                0x89A7: 0x9D2C,\n                0x89A8: 0x9D0E,\n                0x89A9: 0x9EC4,\n                0x89AA: 0x5CA1,\n                0x89AB: 0x6C96,\n                0x89AC: 0x837B,\n                0x89AD: 0x5104,\n                0x89AE: 0x5C4B,\n                0x89AF: 0x61B6,\n                0x89B0: 0x81C6,\n                0x89B1: 0x6876,\n                0x89B2: 0x7261,\n                0x89B3: 0x4E59,\n                0x89B4: 0x4FFA,\n                0x89B5: 0x5378,\n                0x89B6: 0x6069,\n                0x89B7: 0x6E29,\n                0x89B8: 0x7A4F,\n                0x89B9: 0x97F3,\n                0x89BA: 0x4E0B,\n                0x89BB: 0x5316,\n                0x89BC: 0x4EEE,\n                0x89BD: 0x4F55,\n                0x89BE: 0x4F3D,\n                0x89BF: 0x4FA1,\n                0x89C0: 0x4F73,\n                0x89C1: 0x52A0,\n                0x89C2: 0x53EF,\n                0x89C3: 0x5609,\n                0x89C4: 0x590F,\n                0x89C5: 0x5AC1,\n                0x89C6: 0x5BB6,\n                0x89C7: 0x5BE1,\n                0x89C8: 0x79D1,\n                0x89C9: 0x6687,\n                0x89CA: 0x679C,\n                0x89CB: 0x67B6,\n                0x89CC: 0x6B4C,\n                0x89CD: 0x6CB3,\n                0x89CE: 0x706B,\n                0x89CF: 0x73C2,\n                0x89D0: 0x798D,\n                0x89D1: 0x79BE,\n                0x89D2: 0x7A3C,\n                0x89D3: 0x7B87,\n                0x89D4: 0x82B1,\n                0x89D5: 0x82DB,\n                0x89D6: 0x8304,\n                0x89D7: 0x8377,\n                0x89D8: 0x83EF,\n                0x89D9: 0x83D3,\n                0x89DA: 0x8766,\n                0x89DB: 0x8AB2,\n                0x89DC: 0x5629,\n                0x89DD: 0x8CA8,\n                0x89DE: 0x8FE6,\n                0x89DF: 0x904E,\n                0x89E0: 0x971E,\n                0x89E1: 0x868A,\n                0x89E2: 0x4FC4,\n                0x89E3: 0x5CE8,\n                0x89E4: 0x6211,\n                0x89E5: 0x7259,\n                0x89E6: 0x753B,\n                0x89E7: 0x81E5,\n                0x89E8: 0x82BD,\n                0x89E9: 0x86FE,\n                0x89EA: 0x8CC0,\n                0x89EB: 0x96C5,\n                0x89EC: 0x9913,\n                0x89ED: 0x99D5,\n                0x89EE: 0x4ECB,\n                0x89EF: 0x4F1A,\n                0x89F0: 0x89E3,\n                0x89F1: 0x56DE,\n                0x89F2: 0x584A,\n                0x89F3: 0x58CA,\n                0x89F4: 0x5EFB,\n                0x89F5: 0x5FEB,\n                0x89F6: 0x602A,\n                0x89F7: 0x6094,\n                0x89F8: 0x6062,\n                0x89F9: 0x61D0,\n                0x89FA: 0x6212,\n                0x89FB: 0x62D0,\n                0x89FC: 0x6539,\n                0x8A40: 0x9B41,\n                0x8A41: 0x6666,\n                0x8A42: 0x68B0,\n                0x8A43: 0x6D77,\n                0x8A44: 0x7070,\n                0x8A45: 0x754C,\n                0x8A46: 0x7686,\n                0x8A47: 0x7D75,\n                0x8A48: 0x82A5,\n                0x8A49: 0x87F9,\n                0x8A4A: 0x958B,\n                0x8A4B: 0x968E,\n                0x8A4C: 0x8C9D,\n                0x8A4D: 0x51F1,\n                0x8A4E: 0x52BE,\n                0x8A4F: 0x5916,\n                0x8A50: 0x54B3,\n                0x8A51: 0x5BB3,\n                0x8A52: 0x5D16,\n                0x8A53: 0x6168,\n                0x8A54: 0x6982,\n                0x8A55: 0x6DAF,\n                0x8A56: 0x788D,\n                0x8A57: 0x84CB,\n                0x8A58: 0x8857,\n                0x8A59: 0x8A72,\n                0x8A5A: 0x93A7,\n                0x8A5B: 0x9AB8,\n                0x8A5C: 0x6D6C,\n                0x8A5D: 0x99A8,\n                0x8A5E: 0x86D9,\n                0x8A5F: 0x57A3,\n                0x8A60: 0x67FF,\n                0x8A61: 0x86CE,\n                0x8A62: 0x920E,\n                0x8A63: 0x5283,\n                0x8A64: 0x5687,\n                0x8A65: 0x5404,\n                0x8A66: 0x5ED3,\n                0x8A67: 0x62E1,\n                0x8A68: 0x64B9,\n                0x8A69: 0x683C,\n                0x8A6A: 0x6838,\n                0x8A6B: 0x6BBB,\n                0x8A6C: 0x7372,\n                0x8A6D: 0x78BA,\n                0x8A6E: 0x7A6B,\n                0x8A6F: 0x899A,\n                0x8A70: 0x89D2,\n                0x8A71: 0x8D6B,\n                0x8A72: 0x8F03,\n                0x8A73: 0x90ED,\n                0x8A74: 0x95A3,\n                0x8A75: 0x9694,\n                0x8A76: 0x9769,\n                0x8A77: 0x5B66,\n                0x8A78: 0x5CB3,\n                0x8A79: 0x697D,\n                0x8A7A: 0x984D,\n                0x8A7B: 0x984E,\n                0x8A7C: 0x639B,\n                0x8A7D: 0x7B20,\n                0x8A7E: 0x6A2B,\n                0x8A80: 0x6A7F,\n                0x8A81: 0x68B6,\n                0x8A82: 0x9C0D,\n                0x8A83: 0x6F5F,\n                0x8A84: 0x5272,\n                0x8A85: 0x559D,\n                0x8A86: 0x6070,\n                0x8A87: 0x62EC,\n                0x8A88: 0x6D3B,\n                0x8A89: 0x6E07,\n                0x8A8A: 0x6ED1,\n                0x8A8B: 0x845B,\n                0x8A8C: 0x8910,\n                0x8A8D: 0x8F44,\n                0x8A8E: 0x4E14,\n                0x8A8F: 0x9C39,\n                0x8A90: 0x53F6,\n                0x8A91: 0x691B,\n                0x8A92: 0x6A3A,\n                0x8A93: 0x9784,\n                0x8A94: 0x682A,\n                0x8A95: 0x515C,\n                0x8A96: 0x7AC3,\n                0x8A97: 0x84B2,\n                0x8A98: 0x91DC,\n                0x8A99: 0x938C,\n                0x8A9A: 0x565B,\n                0x8A9B: 0x9D28,\n                0x8A9C: 0x6822,\n                0x8A9D: 0x8305,\n                0x8A9E: 0x8431,\n                0x8A9F: 0x7CA5,\n                0x8AA0: 0x5208,\n                0x8AA1: 0x82C5,\n                0x8AA2: 0x74E6,\n                0x8AA3: 0x4E7E,\n                0x8AA4: 0x4F83,\n                0x8AA5: 0x51A0,\n                0x8AA6: 0x5BD2,\n                0x8AA7: 0x520A,\n                0x8AA8: 0x52D8,\n                0x8AA9: 0x52E7,\n                0x8AAA: 0x5DFB,\n                0x8AAB: 0x559A,\n                0x8AAC: 0x582A,\n                0x8AAD: 0x59E6,\n                0x8AAE: 0x5B8C,\n                0x8AAF: 0x5B98,\n                0x8AB0: 0x5BDB,\n                0x8AB1: 0x5E72,\n                0x8AB2: 0x5E79,\n                0x8AB3: 0x60A3,\n                0x8AB4: 0x611F,\n                0x8AB5: 0x6163,\n                0x8AB6: 0x61BE,\n                0x8AB7: 0x63DB,\n                0x8AB8: 0x6562,\n                0x8AB9: 0x67D1,\n                0x8ABA: 0x6853,\n                0x8ABB: 0x68FA,\n                0x8ABC: 0x6B3E,\n                0x8ABD: 0x6B53,\n                0x8ABE: 0x6C57,\n                0x8ABF: 0x6F22,\n                0x8AC0: 0x6F97,\n                0x8AC1: 0x6F45,\n                0x8AC2: 0x74B0,\n                0x8AC3: 0x7518,\n                0x8AC4: 0x76E3,\n                0x8AC5: 0x770B,\n                0x8AC6: 0x7AFF,\n                0x8AC7: 0x7BA1,\n                0x8AC8: 0x7C21,\n                0x8AC9: 0x7DE9,\n                0x8ACA: 0x7F36,\n                0x8ACB: 0x7FF0,\n                0x8ACC: 0x809D,\n                0x8ACD: 0x8266,\n                0x8ACE: 0x839E,\n                0x8ACF: 0x89B3,\n                0x8AD0: 0x8ACC,\n                0x8AD1: 0x8CAB,\n                0x8AD2: 0x9084,\n                0x8AD3: 0x9451,\n                0x8AD4: 0x9593,\n                0x8AD5: 0x9591,\n                0x8AD6: 0x95A2,\n                0x8AD7: 0x9665,\n                0x8AD8: 0x97D3,\n                0x8AD9: 0x9928,\n                0x8ADA: 0x8218,\n                0x8ADB: 0x4E38,\n                0x8ADC: 0x542B,\n                0x8ADD: 0x5CB8,\n                0x8ADE: 0x5DCC,\n                0x8ADF: 0x73A9,\n                0x8AE0: 0x764C,\n                0x8AE1: 0x773C,\n                0x8AE2: 0x5CA9,\n                0x8AE3: 0x7FEB,\n                0x8AE4: 0x8D0B,\n                0x8AE5: 0x96C1,\n                0x8AE6: 0x9811,\n                0x8AE7: 0x9854,\n                0x8AE8: 0x9858,\n                0x8AE9: 0x4F01,\n                0x8AEA: 0x4F0E,\n                0x8AEB: 0x5371,\n                0x8AEC: 0x559C,\n                0x8AED: 0x5668,\n                0x8AEE: 0x57FA,\n                0x8AEF: 0x5947,\n                0x8AF0: 0x5B09,\n                0x8AF1: 0x5BC4,\n                0x8AF2: 0x5C90,\n                0x8AF3: 0x5E0C,\n                0x8AF4: 0x5E7E,\n                0x8AF5: 0x5FCC,\n                0x8AF6: 0x63EE,\n                0x8AF7: 0x673A,\n                0x8AF8: 0x65D7,\n                0x8AF9: 0x65E2,\n                0x8AFA: 0x671F,\n                0x8AFB: 0x68CB,\n                0x8AFC: 0x68C4,\n                0x8B40: 0x6A5F,\n                0x8B41: 0x5E30,\n                0x8B42: 0x6BC5,\n                0x8B43: 0x6C17,\n                0x8B44: 0x6C7D,\n                0x8B45: 0x757F,\n                0x8B46: 0x7948,\n                0x8B47: 0x5B63,\n                0x8B48: 0x7A00,\n                0x8B49: 0x7D00,\n                0x8B4A: 0x5FBD,\n                0x8B4B: 0x898F,\n                0x8B4C: 0x8A18,\n                0x8B4D: 0x8CB4,\n                0x8B4E: 0x8D77,\n                0x8B4F: 0x8ECC,\n                0x8B50: 0x8F1D,\n                0x8B51: 0x98E2,\n                0x8B52: 0x9A0E,\n                0x8B53: 0x9B3C,\n                0x8B54: 0x4E80,\n                0x8B55: 0x507D,\n                0x8B56: 0x5100,\n                0x8B57: 0x5993,\n                0x8B58: 0x5B9C,\n                0x8B59: 0x622F,\n                0x8B5A: 0x6280,\n                0x8B5B: 0x64EC,\n                0x8B5C: 0x6B3A,\n                0x8B5D: 0x72A0,\n                0x8B5E: 0x7591,\n                0x8B5F: 0x7947,\n                0x8B60: 0x7FA9,\n                0x8B61: 0x87FB,\n                0x8B62: 0x8ABC,\n                0x8B63: 0x8B70,\n                0x8B64: 0x63AC,\n                0x8B65: 0x83CA,\n                0x8B66: 0x97A0,\n                0x8B67: 0x5409,\n                0x8B68: 0x5403,\n                0x8B69: 0x55AB,\n                0x8B6A: 0x6854,\n                0x8B6B: 0x6A58,\n                0x8B6C: 0x8A70,\n                0x8B6D: 0x7827,\n                0x8B6E: 0x6775,\n                0x8B6F: 0x9ECD,\n                0x8B70: 0x5374,\n                0x8B71: 0x5BA2,\n                0x8B72: 0x811A,\n                0x8B73: 0x8650,\n                0x8B74: 0x9006,\n                0x8B75: 0x4E18,\n                0x8B76: 0x4E45,\n                0x8B77: 0x4EC7,\n                0x8B78: 0x4F11,\n                0x8B79: 0x53CA,\n                0x8B7A: 0x5438,\n                0x8B7B: 0x5BAE,\n                0x8B7C: 0x5F13,\n                0x8B7D: 0x6025,\n                0x8B7E: 0x6551,\n                0x8B80: 0x673D,\n                0x8B81: 0x6C42,\n                0x8B82: 0x6C72,\n                0x8B83: 0x6CE3,\n                0x8B84: 0x7078,\n                0x8B85: 0x7403,\n                0x8B86: 0x7A76,\n                0x8B87: 0x7AAE,\n                0x8B88: 0x7B08,\n                0x8B89: 0x7D1A,\n                0x8B8A: 0x7CFE,\n                0x8B8B: 0x7D66,\n                0x8B8C: 0x65E7,\n                0x8B8D: 0x725B,\n                0x8B8E: 0x53BB,\n                0x8B8F: 0x5C45,\n                0x8B90: 0x5DE8,\n                0x8B91: 0x62D2,\n                0x8B92: 0x62E0,\n                0x8B93: 0x6319,\n                0x8B94: 0x6E20,\n                0x8B95: 0x865A,\n                0x8B96: 0x8A31,\n                0x8B97: 0x8DDD,\n                0x8B98: 0x92F8,\n                0x8B99: 0x6F01,\n                0x8B9A: 0x79A6,\n                0x8B9B: 0x9B5A,\n                0x8B9C: 0x4EA8,\n                0x8B9D: 0x4EAB,\n                0x8B9E: 0x4EAC,\n                0x8B9F: 0x4F9B,\n                0x8BA0: 0x4FA0,\n                0x8BA1: 0x50D1,\n                0x8BA2: 0x5147,\n                0x8BA3: 0x7AF6,\n                0x8BA4: 0x5171,\n                0x8BA5: 0x51F6,\n                0x8BA6: 0x5354,\n                0x8BA7: 0x5321,\n                0x8BA8: 0x537F,\n                0x8BA9: 0x53EB,\n                0x8BAA: 0x55AC,\n                0x8BAB: 0x5883,\n                0x8BAC: 0x5CE1,\n                0x8BAD: 0x5F37,\n                0x8BAE: 0x5F4A,\n                0x8BAF: 0x602F,\n                0x8BB0: 0x6050,\n                0x8BB1: 0x606D,\n                0x8BB2: 0x631F,\n                0x8BB3: 0x6559,\n                0x8BB4: 0x6A4B,\n                0x8BB5: 0x6CC1,\n                0x8BB6: 0x72C2,\n                0x8BB7: 0x72ED,\n                0x8BB8: 0x77EF,\n                0x8BB9: 0x80F8,\n                0x8BBA: 0x8105,\n                0x8BBB: 0x8208,\n                0x8BBC: 0x854E,\n                0x8BBD: 0x90F7,\n                0x8BBE: 0x93E1,\n                0x8BBF: 0x97FF,\n                0x8BC0: 0x9957,\n                0x8BC1: 0x9A5A,\n                0x8BC2: 0x4EF0,\n                0x8BC3: 0x51DD,\n                0x8BC4: 0x5C2D,\n                0x8BC5: 0x6681,\n                0x8BC6: 0x696D,\n                0x8BC7: 0x5C40,\n                0x8BC8: 0x66F2,\n                0x8BC9: 0x6975,\n                0x8BCA: 0x7389,\n                0x8BCB: 0x6850,\n                0x8BCC: 0x7C81,\n                0x8BCD: 0x50C5,\n                0x8BCE: 0x52E4,\n                0x8BCF: 0x5747,\n                0x8BD0: 0x5DFE,\n                0x8BD1: 0x9326,\n                0x8BD2: 0x65A4,\n                0x8BD3: 0x6B23,\n                0x8BD4: 0x6B3D,\n                0x8BD5: 0x7434,\n                0x8BD6: 0x7981,\n                0x8BD7: 0x79BD,\n                0x8BD8: 0x7B4B,\n                0x8BD9: 0x7DCA,\n                0x8BDA: 0x82B9,\n                0x8BDB: 0x83CC,\n                0x8BDC: 0x887F,\n                0x8BDD: 0x895F,\n                0x8BDE: 0x8B39,\n                0x8BDF: 0x8FD1,\n                0x8BE0: 0x91D1,\n                0x8BE1: 0x541F,\n                0x8BE2: 0x9280,\n                0x8BE3: 0x4E5D,\n                0x8BE4: 0x5036,\n                0x8BE5: 0x53E5,\n                0x8BE6: 0x533A,\n                0x8BE7: 0x72D7,\n                0x8BE8: 0x7396,\n                0x8BE9: 0x77E9,\n                0x8BEA: 0x82E6,\n                0x8BEB: 0x8EAF,\n                0x8BEC: 0x99C6,\n                0x8BED: 0x99C8,\n                0x8BEE: 0x99D2,\n                0x8BEF: 0x5177,\n                0x8BF0: 0x611A,\n                0x8BF1: 0x865E,\n                0x8BF2: 0x55B0,\n                0x8BF3: 0x7A7A,\n                0x8BF4: 0x5076,\n                0x8BF5: 0x5BD3,\n                0x8BF6: 0x9047,\n                0x8BF7: 0x9685,\n                0x8BF8: 0x4E32,\n                0x8BF9: 0x6ADB,\n                0x8BFA: 0x91E7,\n                0x8BFB: 0x5C51,\n                0x8BFC: 0x5C48,\n                0x8C40: 0x6398,\n                0x8C41: 0x7A9F,\n                0x8C42: 0x6C93,\n                0x8C43: 0x9774,\n                0x8C44: 0x8F61,\n                0x8C45: 0x7AAA,\n                0x8C46: 0x718A,\n                0x8C47: 0x9688,\n                0x8C48: 0x7C82,\n                0x8C49: 0x6817,\n                0x8C4A: 0x7E70,\n                0x8C4B: 0x6851,\n                0x8C4C: 0x936C,\n                0x8C4D: 0x52F2,\n                0x8C4E: 0x541B,\n                0x8C4F: 0x85AB,\n                0x8C50: 0x8A13,\n                0x8C51: 0x7FA4,\n                0x8C52: 0x8ECD,\n                0x8C53: 0x90E1,\n                0x8C54: 0x5366,\n                0x8C55: 0x8888,\n                0x8C56: 0x7941,\n                0x8C57: 0x4FC2,\n                0x8C58: 0x50BE,\n                0x8C59: 0x5211,\n                0x8C5A: 0x5144,\n                0x8C5B: 0x5553,\n                0x8C5C: 0x572D,\n                0x8C5D: 0x73EA,\n                0x8C5E: 0x578B,\n                0x8C5F: 0x5951,\n                0x8C60: 0x5F62,\n                0x8C61: 0x5F84,\n                0x8C62: 0x6075,\n                0x8C63: 0x6176,\n                0x8C64: 0x6167,\n                0x8C65: 0x61A9,\n                0x8C66: 0x63B2,\n                0x8C67: 0x643A,\n                0x8C68: 0x656C,\n                0x8C69: 0x666F,\n                0x8C6A: 0x6842,\n                0x8C6B: 0x6E13,\n                0x8C6C: 0x7566,\n                0x8C6D: 0x7A3D,\n                0x8C6E: 0x7CFB,\n                0x8C6F: 0x7D4C,\n                0x8C70: 0x7D99,\n                0x8C71: 0x7E4B,\n                0x8C72: 0x7F6B,\n                0x8C73: 0x830E,\n                0x8C74: 0x834A,\n                0x8C75: 0x86CD,\n                0x8C76: 0x8A08,\n                0x8C77: 0x8A63,\n                0x8C78: 0x8B66,\n                0x8C79: 0x8EFD,\n                0x8C7A: 0x981A,\n                0x8C7B: 0x9D8F,\n                0x8C7C: 0x82B8,\n                0x8C7D: 0x8FCE,\n                0x8C7E: 0x9BE8,\n                0x8C80: 0x5287,\n                0x8C81: 0x621F,\n                0x8C82: 0x6483,\n                0x8C83: 0x6FC0,\n                0x8C84: 0x9699,\n                0x8C85: 0x6841,\n                0x8C86: 0x5091,\n                0x8C87: 0x6B20,\n                0x8C88: 0x6C7A,\n                0x8C89: 0x6F54,\n                0x8C8A: 0x7A74,\n                0x8C8B: 0x7D50,\n                0x8C8C: 0x8840,\n                0x8C8D: 0x8A23,\n                0x8C8E: 0x6708,\n                0x8C8F: 0x4EF6,\n                0x8C90: 0x5039,\n                0x8C91: 0x5026,\n                0x8C92: 0x5065,\n                0x8C93: 0x517C,\n                0x8C94: 0x5238,\n                0x8C95: 0x5263,\n                0x8C96: 0x55A7,\n                0x8C97: 0x570F,\n                0x8C98: 0x5805,\n                0x8C99: 0x5ACC,\n                0x8C9A: 0x5EFA,\n                0x8C9B: 0x61B2,\n                0x8C9C: 0x61F8,\n                0x8C9D: 0x62F3,\n                0x8C9E: 0x6372,\n                0x8C9F: 0x691C,\n                0x8CA0: 0x6A29,\n                0x8CA1: 0x727D,\n                0x8CA2: 0x72AC,\n                0x8CA3: 0x732E,\n                0x8CA4: 0x7814,\n                0x8CA5: 0x786F,\n                0x8CA6: 0x7D79,\n                0x8CA7: 0x770C,\n                0x8CA8: 0x80A9,\n                0x8CA9: 0x898B,\n                0x8CAA: 0x8B19,\n                0x8CAB: 0x8CE2,\n                0x8CAC: 0x8ED2,\n                0x8CAD: 0x9063,\n                0x8CAE: 0x9375,\n                0x8CAF: 0x967A,\n                0x8CB0: 0x9855,\n                0x8CB1: 0x9A13,\n                0x8CB2: 0x9E78,\n                0x8CB3: 0x5143,\n                0x8CB4: 0x539F,\n                0x8CB5: 0x53B3,\n                0x8CB6: 0x5E7B,\n                0x8CB7: 0x5F26,\n                0x8CB8: 0x6E1B,\n                0x8CB9: 0x6E90,\n                0x8CBA: 0x7384,\n                0x8CBB: 0x73FE,\n                0x8CBC: 0x7D43,\n                0x8CBD: 0x8237,\n                0x8CBE: 0x8A00,\n                0x8CBF: 0x8AFA,\n                0x8CC0: 0x9650,\n                0x8CC1: 0x4E4E,\n                0x8CC2: 0x500B,\n                0x8CC3: 0x53E4,\n                0x8CC4: 0x547C,\n                0x8CC5: 0x56FA,\n                0x8CC6: 0x59D1,\n                0x8CC7: 0x5B64,\n                0x8CC8: 0x5DF1,\n                0x8CC9: 0x5EAB,\n                0x8CCA: 0x5F27,\n                0x8CCB: 0x6238,\n                0x8CCC: 0x6545,\n                0x8CCD: 0x67AF,\n                0x8CCE: 0x6E56,\n                0x8CCF: 0x72D0,\n                0x8CD0: 0x7CCA,\n                0x8CD1: 0x88B4,\n                0x8CD2: 0x80A1,\n                0x8CD3: 0x80E1,\n                0x8CD4: 0x83F0,\n                0x8CD5: 0x864E,\n                0x8CD6: 0x8A87,\n                0x8CD7: 0x8DE8,\n                0x8CD8: 0x9237,\n                0x8CD9: 0x96C7,\n                0x8CDA: 0x9867,\n                0x8CDB: 0x9F13,\n                0x8CDC: 0x4E94,\n                0x8CDD: 0x4E92,\n                0x8CDE: 0x4F0D,\n                0x8CDF: 0x5348,\n                0x8CE0: 0x5449,\n                0x8CE1: 0x543E,\n                0x8CE2: 0x5A2F,\n                0x8CE3: 0x5F8C,\n                0x8CE4: 0x5FA1,\n                0x8CE5: 0x609F,\n                0x8CE6: 0x68A7,\n                0x8CE7: 0x6A8E,\n                0x8CE8: 0x745A,\n                0x8CE9: 0x7881,\n                0x8CEA: 0x8A9E,\n                0x8CEB: 0x8AA4,\n                0x8CEC: 0x8B77,\n                0x8CED: 0x9190,\n                0x8CEE: 0x4E5E,\n                0x8CEF: 0x9BC9,\n                0x8CF0: 0x4EA4,\n                0x8CF1: 0x4F7C,\n                0x8CF2: 0x4FAF,\n                0x8CF3: 0x5019,\n                0x8CF4: 0x5016,\n                0x8CF5: 0x5149,\n                0x8CF6: 0x516C,\n                0x8CF7: 0x529F,\n                0x8CF8: 0x52B9,\n                0x8CF9: 0x52FE,\n                0x8CFA: 0x539A,\n                0x8CFB: 0x53E3,\n                0x8CFC: 0x5411,\n                0x8D40: 0x540E,\n                0x8D41: 0x5589,\n                0x8D42: 0x5751,\n                0x8D43: 0x57A2,\n                0x8D44: 0x597D,\n                0x8D45: 0x5B54,\n                0x8D46: 0x5B5D,\n                0x8D47: 0x5B8F,\n                0x8D48: 0x5DE5,\n                0x8D49: 0x5DE7,\n                0x8D4A: 0x5DF7,\n                0x8D4B: 0x5E78,\n                0x8D4C: 0x5E83,\n                0x8D4D: 0x5E9A,\n                0x8D4E: 0x5EB7,\n                0x8D4F: 0x5F18,\n                0x8D50: 0x6052,\n                0x8D51: 0x614C,\n                0x8D52: 0x6297,\n                0x8D53: 0x62D8,\n                0x8D54: 0x63A7,\n                0x8D55: 0x653B,\n                0x8D56: 0x6602,\n                0x8D57: 0x6643,\n                0x8D58: 0x66F4,\n                0x8D59: 0x676D,\n                0x8D5A: 0x6821,\n                0x8D5B: 0x6897,\n                0x8D5C: 0x69CB,\n                0x8D5D: 0x6C5F,\n                0x8D5E: 0x6D2A,\n                0x8D5F: 0x6D69,\n                0x8D60: 0x6E2F,\n                0x8D61: 0x6E9D,\n                0x8D62: 0x7532,\n                0x8D63: 0x7687,\n                0x8D64: 0x786C,\n                0x8D65: 0x7A3F,\n                0x8D66: 0x7CE0,\n                0x8D67: 0x7D05,\n                0x8D68: 0x7D18,\n                0x8D69: 0x7D5E,\n                0x8D6A: 0x7DB1,\n                0x8D6B: 0x8015,\n                0x8D6C: 0x8003,\n                0x8D6D: 0x80AF,\n                0x8D6E: 0x80B1,\n                0x8D6F: 0x8154,\n                0x8D70: 0x818F,\n                0x8D71: 0x822A,\n                0x8D72: 0x8352,\n                0x8D73: 0x884C,\n                0x8D74: 0x8861,\n                0x8D75: 0x8B1B,\n                0x8D76: 0x8CA2,\n                0x8D77: 0x8CFC,\n                0x8D78: 0x90CA,\n                0x8D79: 0x9175,\n                0x8D7A: 0x9271,\n                0x8D7B: 0x783F,\n                0x8D7C: 0x92FC,\n                0x8D7D: 0x95A4,\n                0x8D7E: 0x964D,\n                0x8D80: 0x9805,\n                0x8D81: 0x9999,\n                0x8D82: 0x9AD8,\n                0x8D83: 0x9D3B,\n                0x8D84: 0x525B,\n                0x8D85: 0x52AB,\n                0x8D86: 0x53F7,\n                0x8D87: 0x5408,\n                0x8D88: 0x58D5,\n                0x8D89: 0x62F7,\n                0x8D8A: 0x6FE0,\n                0x8D8B: 0x8C6A,\n                0x8D8C: 0x8F5F,\n                0x8D8D: 0x9EB9,\n                0x8D8E: 0x514B,\n                0x8D8F: 0x523B,\n                0x8D90: 0x544A,\n                0x8D91: 0x56FD,\n                0x8D92: 0x7A40,\n                0x8D93: 0x9177,\n                0x8D94: 0x9D60,\n                0x8D95: 0x9ED2,\n                0x8D96: 0x7344,\n                0x8D97: 0x6F09,\n                0x8D98: 0x8170,\n                0x8D99: 0x7511,\n                0x8D9A: 0x5FFD,\n                0x8D9B: 0x60DA,\n                0x8D9C: 0x9AA8,\n                0x8D9D: 0x72DB,\n                0x8D9E: 0x8FBC,\n                0x8D9F: 0x6B64,\n                0x8DA0: 0x9803,\n                0x8DA1: 0x4ECA,\n                0x8DA2: 0x56F0,\n                0x8DA3: 0x5764,\n                0x8DA4: 0x58BE,\n                0x8DA5: 0x5A5A,\n                0x8DA6: 0x6068,\n                0x8DA7: 0x61C7,\n                0x8DA8: 0x660F,\n                0x8DA9: 0x6606,\n                0x8DAA: 0x6839,\n                0x8DAB: 0x68B1,\n                0x8DAC: 0x6DF7,\n                0x8DAD: 0x75D5,\n                0x8DAE: 0x7D3A,\n                0x8DAF: 0x826E,\n                0x8DB0: 0x9B42,\n                0x8DB1: 0x4E9B,\n                0x8DB2: 0x4F50,\n                0x8DB3: 0x53C9,\n                0x8DB4: 0x5506,\n                0x8DB5: 0x5D6F,\n                0x8DB6: 0x5DE6,\n                0x8DB7: 0x5DEE,\n                0x8DB8: 0x67FB,\n                0x8DB9: 0x6C99,\n                0x8DBA: 0x7473,\n                0x8DBB: 0x7802,\n                0x8DBC: 0x8A50,\n                0x8DBD: 0x9396,\n                0x8DBE: 0x88DF,\n                0x8DBF: 0x5750,\n                0x8DC0: 0x5EA7,\n                0x8DC1: 0x632B,\n                0x8DC2: 0x50B5,\n                0x8DC3: 0x50AC,\n                0x8DC4: 0x518D,\n                0x8DC5: 0x6700,\n                0x8DC6: 0x54C9,\n                0x8DC7: 0x585E,\n                0x8DC8: 0x59BB,\n                0x8DC9: 0x5BB0,\n                0x8DCA: 0x5F69,\n                0x8DCB: 0x624D,\n                0x8DCC: 0x63A1,\n                0x8DCD: 0x683D,\n                0x8DCE: 0x6B73,\n                0x8DCF: 0x6E08,\n                0x8DD0: 0x707D,\n                0x8DD1: 0x91C7,\n                0x8DD2: 0x7280,\n                0x8DD3: 0x7815,\n                0x8DD4: 0x7826,\n                0x8DD5: 0x796D,\n                0x8DD6: 0x658E,\n                0x8DD7: 0x7D30,\n                0x8DD8: 0x83DC,\n                0x8DD9: 0x88C1,\n                0x8DDA: 0x8F09,\n                0x8DDB: 0x969B,\n                0x8DDC: 0x5264,\n                0x8DDD: 0x5728,\n                0x8DDE: 0x6750,\n                0x8DDF: 0x7F6A,\n                0x8DE0: 0x8CA1,\n                0x8DE1: 0x51B4,\n                0x8DE2: 0x5742,\n                0x8DE3: 0x962A,\n                0x8DE4: 0x583A,\n                0x8DE5: 0x698A,\n                0x8DE6: 0x80B4,\n                0x8DE7: 0x54B2,\n                0x8DE8: 0x5D0E,\n                0x8DE9: 0x57FC,\n                0x8DEA: 0x7895,\n                0x8DEB: 0x9DFA,\n                0x8DEC: 0x4F5C,\n                0x8DED: 0x524A,\n                0x8DEE: 0x548B,\n                0x8DEF: 0x643E,\n                0x8DF0: 0x6628,\n                0x8DF1: 0x6714,\n                0x8DF2: 0x67F5,\n                0x8DF3: 0x7A84,\n                0x8DF4: 0x7B56,\n                0x8DF5: 0x7D22,\n                0x8DF6: 0x932F,\n                0x8DF7: 0x685C,\n                0x8DF8: 0x9BAD,\n                0x8DF9: 0x7B39,\n                0x8DFA: 0x5319,\n                0x8DFB: 0x518A,\n                0x8DFC: 0x5237,\n                0x8E40: 0x5BDF,\n                0x8E41: 0x62F6,\n                0x8E42: 0x64AE,\n                0x8E43: 0x64E6,\n                0x8E44: 0x672D,\n                0x8E45: 0x6BBA,\n                0x8E46: 0x85A9,\n                0x8E47: 0x96D1,\n                0x8E48: 0x7690,\n                0x8E49: 0x9BD6,\n                0x8E4A: 0x634C,\n                0x8E4B: 0x9306,\n                0x8E4C: 0x9BAB,\n                0x8E4D: 0x76BF,\n                0x8E4E: 0x6652,\n                0x8E4F: 0x4E09,\n                0x8E50: 0x5098,\n                0x8E51: 0x53C2,\n                0x8E52: 0x5C71,\n                0x8E53: 0x60E8,\n                0x8E54: 0x6492,\n                0x8E55: 0x6563,\n                0x8E56: 0x685F,\n                0x8E57: 0x71E6,\n                0x8E58: 0x73CA,\n                0x8E59: 0x7523,\n                0x8E5A: 0x7B97,\n                0x8E5B: 0x7E82,\n                0x8E5C: 0x8695,\n                0x8E5D: 0x8B83,\n                0x8E5E: 0x8CDB,\n                0x8E5F: 0x9178,\n                0x8E60: 0x9910,\n                0x8E61: 0x65AC,\n                0x8E62: 0x66AB,\n                0x8E63: 0x6B8B,\n                0x8E64: 0x4ED5,\n                0x8E65: 0x4ED4,\n                0x8E66: 0x4F3A,\n                0x8E67: 0x4F7F,\n                0x8E68: 0x523A,\n                0x8E69: 0x53F8,\n                0x8E6A: 0x53F2,\n                0x8E6B: 0x55E3,\n                0x8E6C: 0x56DB,\n                0x8E6D: 0x58EB,\n                0x8E6E: 0x59CB,\n                0x8E6F: 0x59C9,\n                0x8E70: 0x59FF,\n                0x8E71: 0x5B50,\n                0x8E72: 0x5C4D,\n                0x8E73: 0x5E02,\n                0x8E74: 0x5E2B,\n                0x8E75: 0x5FD7,\n                0x8E76: 0x601D,\n                0x8E77: 0x6307,\n                0x8E78: 0x652F,\n                0x8E79: 0x5B5C,\n                0x8E7A: 0x65AF,\n                0x8E7B: 0x65BD,\n                0x8E7C: 0x65E8,\n                0x8E7D: 0x679D,\n                0x8E7E: 0x6B62,\n                0x8E80: 0x6B7B,\n                0x8E81: 0x6C0F,\n                0x8E82: 0x7345,\n                0x8E83: 0x7949,\n                0x8E84: 0x79C1,\n                0x8E85: 0x7CF8,\n                0x8E86: 0x7D19,\n                0x8E87: 0x7D2B,\n                0x8E88: 0x80A2,\n                0x8E89: 0x8102,\n                0x8E8A: 0x81F3,\n                0x8E8B: 0x8996,\n                0x8E8C: 0x8A5E,\n                0x8E8D: 0x8A69,\n                0x8E8E: 0x8A66,\n                0x8E8F: 0x8A8C,\n                0x8E90: 0x8AEE,\n                0x8E91: 0x8CC7,\n                0x8E92: 0x8CDC,\n                0x8E93: 0x96CC,\n                0x8E94: 0x98FC,\n                0x8E95: 0x6B6F,\n                0x8E96: 0x4E8B,\n                0x8E97: 0x4F3C,\n                0x8E98: 0x4F8D,\n                0x8E99: 0x5150,\n                0x8E9A: 0x5B57,\n                0x8E9B: 0x5BFA,\n                0x8E9C: 0x6148,\n                0x8E9D: 0x6301,\n                0x8E9E: 0x6642,\n                0x8E9F: 0x6B21,\n                0x8EA0: 0x6ECB,\n                0x8EA1: 0x6CBB,\n                0x8EA2: 0x723E,\n                0x8EA3: 0x74BD,\n                0x8EA4: 0x75D4,\n                0x8EA5: 0x78C1,\n                0x8EA6: 0x793A,\n                0x8EA7: 0x800C,\n                0x8EA8: 0x8033,\n                0x8EA9: 0x81EA,\n                0x8EAA: 0x8494,\n                0x8EAB: 0x8F9E,\n                0x8EAC: 0x6C50,\n                0x8EAD: 0x9E7F,\n                0x8EAE: 0x5F0F,\n                0x8EAF: 0x8B58,\n                0x8EB0: 0x9D2B,\n                0x8EB1: 0x7AFA,\n                0x8EB2: 0x8EF8,\n                0x8EB3: 0x5B8D,\n                0x8EB4: 0x96EB,\n                0x8EB5: 0x4E03,\n                0x8EB6: 0x53F1,\n                0x8EB7: 0x57F7,\n                0x8EB8: 0x5931,\n                0x8EB9: 0x5AC9,\n                0x8EBA: 0x5BA4,\n                0x8EBB: 0x6089,\n                0x8EBC: 0x6E7F,\n                0x8EBD: 0x6F06,\n                0x8EBE: 0x75BE,\n                0x8EBF: 0x8CEA,\n                0x8EC0: 0x5B9F,\n                0x8EC1: 0x8500,\n                0x8EC2: 0x7BE0,\n                0x8EC3: 0x5072,\n                0x8EC4: 0x67F4,\n                0x8EC5: 0x829D,\n                0x8EC6: 0x5C61,\n                0x8EC7: 0x854A,\n                0x8EC8: 0x7E1E,\n                0x8EC9: 0x820E,\n                0x8ECA: 0x5199,\n                0x8ECB: 0x5C04,\n                0x8ECC: 0x6368,\n                0x8ECD: 0x8D66,\n                0x8ECE: 0x659C,\n                0x8ECF: 0x716E,\n                0x8ED0: 0x793E,\n                0x8ED1: 0x7D17,\n                0x8ED2: 0x8005,\n                0x8ED3: 0x8B1D,\n                0x8ED4: 0x8ECA,\n                0x8ED5: 0x906E,\n                0x8ED6: 0x86C7,\n                0x8ED7: 0x90AA,\n                0x8ED8: 0x501F,\n                0x8ED9: 0x52FA,\n                0x8EDA: 0x5C3A,\n                0x8EDB: 0x6753,\n                0x8EDC: 0x707C,\n                0x8EDD: 0x7235,\n                0x8EDE: 0x914C,\n                0x8EDF: 0x91C8,\n                0x8EE0: 0x932B,\n                0x8EE1: 0x82E5,\n                0x8EE2: 0x5BC2,\n                0x8EE3: 0x5F31,\n                0x8EE4: 0x60F9,\n                0x8EE5: 0x4E3B,\n                0x8EE6: 0x53D6,\n                0x8EE7: 0x5B88,\n                0x8EE8: 0x624B,\n                0x8EE9: 0x6731,\n                0x8EEA: 0x6B8A,\n                0x8EEB: 0x72E9,\n                0x8EEC: 0x73E0,\n                0x8EED: 0x7A2E,\n                0x8EEE: 0x816B,\n                0x8EEF: 0x8DA3,\n                0x8EF0: 0x9152,\n                0x8EF1: 0x9996,\n                0x8EF2: 0x5112,\n                0x8EF3: 0x53D7,\n                0x8EF4: 0x546A,\n                0x8EF5: 0x5BFF,\n                0x8EF6: 0x6388,\n                0x8EF7: 0x6A39,\n                0x8EF8: 0x7DAC,\n                0x8EF9: 0x9700,\n                0x8EFA: 0x56DA,\n                0x8EFB: 0x53CE,\n                0x8EFC: 0x5468,\n                0x8F40: 0x5B97,\n                0x8F41: 0x5C31,\n                0x8F42: 0x5DDE,\n                0x8F43: 0x4FEE,\n                0x8F44: 0x6101,\n                0x8F45: 0x62FE,\n                0x8F46: 0x6D32,\n                0x8F47: 0x79C0,\n                0x8F48: 0x79CB,\n                0x8F49: 0x7D42,\n                0x8F4A: 0x7E4D,\n                0x8F4B: 0x7FD2,\n                0x8F4C: 0x81ED,\n                0x8F4D: 0x821F,\n                0x8F4E: 0x8490,\n                0x8F4F: 0x8846,\n                0x8F50: 0x8972,\n                0x8F51: 0x8B90,\n                0x8F52: 0x8E74,\n                0x8F53: 0x8F2F,\n                0x8F54: 0x9031,\n                0x8F55: 0x914B,\n                0x8F56: 0x916C,\n                0x8F57: 0x96C6,\n                0x8F58: 0x919C,\n                0x8F59: 0x4EC0,\n                0x8F5A: 0x4F4F,\n                0x8F5B: 0x5145,\n                0x8F5C: 0x5341,\n                0x8F5D: 0x5F93,\n                0x8F5E: 0x620E,\n                0x8F5F: 0x67D4,\n                0x8F60: 0x6C41,\n                0x8F61: 0x6E0B,\n                0x8F62: 0x7363,\n                0x8F63: 0x7E26,\n                0x8F64: 0x91CD,\n                0x8F65: 0x9283,\n                0x8F66: 0x53D4,\n                0x8F67: 0x5919,\n                0x8F68: 0x5BBF,\n                0x8F69: 0x6DD1,\n                0x8F6A: 0x795D,\n                0x8F6B: 0x7E2E,\n                0x8F6C: 0x7C9B,\n                0x8F6D: 0x587E,\n                0x8F6E: 0x719F,\n                0x8F6F: 0x51FA,\n                0x8F70: 0x8853,\n                0x8F71: 0x8FF0,\n                0x8F72: 0x4FCA,\n                0x8F73: 0x5CFB,\n                0x8F74: 0x6625,\n                0x8F75: 0x77AC,\n                0x8F76: 0x7AE3,\n                0x8F77: 0x821C,\n                0x8F78: 0x99FF,\n                0x8F79: 0x51C6,\n                0x8F7A: 0x5FAA,\n                0x8F7B: 0x65EC,\n                0x8F7C: 0x696F,\n                0x8F7D: 0x6B89,\n                0x8F7E: 0x6DF3,\n                0x8F80: 0x6E96,\n                0x8F81: 0x6F64,\n                0x8F82: 0x76FE,\n                0x8F83: 0x7D14,\n                0x8F84: 0x5DE1,\n                0x8F85: 0x9075,\n                0x8F86: 0x9187,\n                0x8F87: 0x9806,\n                0x8F88: 0x51E6,\n                0x8F89: 0x521D,\n                0x8F8A: 0x6240,\n                0x8F8B: 0x6691,\n                0x8F8C: 0x66D9,\n                0x8F8D: 0x6E1A,\n                0x8F8E: 0x5EB6,\n                0x8F8F: 0x7DD2,\n                0x8F90: 0x7F72,\n                0x8F91: 0x66F8,\n                0x8F92: 0x85AF,\n                0x8F93: 0x85F7,\n                0x8F94: 0x8AF8,\n                0x8F95: 0x52A9,\n                0x8F96: 0x53D9,\n                0x8F97: 0x5973,\n                0x8F98: 0x5E8F,\n                0x8F99: 0x5F90,\n                0x8F9A: 0x6055,\n                0x8F9B: 0x92E4,\n                0x8F9C: 0x9664,\n                0x8F9D: 0x50B7,\n                0x8F9E: 0x511F,\n                0x8F9F: 0x52DD,\n                0x8FA0: 0x5320,\n                0x8FA1: 0x5347,\n                0x8FA2: 0x53EC,\n                0x8FA3: 0x54E8,\n                0x8FA4: 0x5546,\n                0x8FA5: 0x5531,\n                0x8FA6: 0x5617,\n                0x8FA7: 0x5968,\n                0x8FA8: 0x59BE,\n                0x8FA9: 0x5A3C,\n                0x8FAA: 0x5BB5,\n                0x8FAB: 0x5C06,\n                0x8FAC: 0x5C0F,\n                0x8FAD: 0x5C11,\n                0x8FAE: 0x5C1A,\n                0x8FAF: 0x5E84,\n                0x8FB0: 0x5E8A,\n                0x8FB1: 0x5EE0,\n                0x8FB2: 0x5F70,\n                0x8FB3: 0x627F,\n                0x8FB4: 0x6284,\n                0x8FB5: 0x62DB,\n                0x8FB6: 0x638C,\n                0x8FB7: 0x6377,\n                0x8FB8: 0x6607,\n                0x8FB9: 0x660C,\n                0x8FBA: 0x662D,\n                0x8FBB: 0x6676,\n                0x8FBC: 0x677E,\n                0x8FBD: 0x68A2,\n                0x8FBE: 0x6A1F,\n                0x8FBF: 0x6A35,\n                0x8FC0: 0x6CBC,\n                0x8FC1: 0x6D88,\n                0x8FC2: 0x6E09,\n                0x8FC3: 0x6E58,\n                0x8FC4: 0x713C,\n                0x8FC5: 0x7126,\n                0x8FC6: 0x7167,\n                0x8FC7: 0x75C7,\n                0x8FC8: 0x7701,\n                0x8FC9: 0x785D,\n                0x8FCA: 0x7901,\n                0x8FCB: 0x7965,\n                0x8FCC: 0x79F0,\n                0x8FCD: 0x7AE0,\n                0x8FCE: 0x7B11,\n                0x8FCF: 0x7CA7,\n                0x8FD0: 0x7D39,\n                0x8FD1: 0x8096,\n                0x8FD2: 0x83D6,\n                0x8FD3: 0x848B,\n                0x8FD4: 0x8549,\n                0x8FD5: 0x885D,\n                0x8FD6: 0x88F3,\n                0x8FD7: 0x8A1F,\n                0x8FD8: 0x8A3C,\n                0x8FD9: 0x8A54,\n                0x8FDA: 0x8A73,\n                0x8FDB: 0x8C61,\n                0x8FDC: 0x8CDE,\n                0x8FDD: 0x91A4,\n                0x8FDE: 0x9266,\n                0x8FDF: 0x937E,\n                0x8FE0: 0x9418,\n                0x8FE1: 0x969C,\n                0x8FE2: 0x9798,\n                0x8FE3: 0x4E0A,\n                0x8FE4: 0x4E08,\n                0x8FE5: 0x4E1E,\n                0x8FE6: 0x4E57,\n                0x8FE7: 0x5197,\n                0x8FE8: 0x5270,\n                0x8FE9: 0x57CE,\n                0x8FEA: 0x5834,\n                0x8FEB: 0x58CC,\n                0x8FEC: 0x5B22,\n                0x8FED: 0x5E38,\n                0x8FEE: 0x60C5,\n                0x8FEF: 0x64FE,\n                0x8FF0: 0x6761,\n                0x8FF1: 0x6756,\n                0x8FF2: 0x6D44,\n                0x8FF3: 0x72B6,\n                0x8FF4: 0x7573,\n                0x8FF5: 0x7A63,\n                0x8FF6: 0x84B8,\n                0x8FF7: 0x8B72,\n                0x8FF8: 0x91B8,\n                0x8FF9: 0x9320,\n                0x8FFA: 0x5631,\n                0x8FFB: 0x57F4,\n                0x8FFC: 0x98FE,\n                0x9040: 0x62ED,\n                0x9041: 0x690D,\n                0x9042: 0x6B96,\n                0x9043: 0x71ED,\n                0x9044: 0x7E54,\n                0x9045: 0x8077,\n                0x9046: 0x8272,\n                0x9047: 0x89E6,\n                0x9048: 0x98DF,\n                0x9049: 0x8755,\n                0x904A: 0x8FB1,\n                0x904B: 0x5C3B,\n                0x904C: 0x4F38,\n                0x904D: 0x4FE1,\n                0x904E: 0x4FB5,\n                0x904F: 0x5507,\n                0x9050: 0x5A20,\n                0x9051: 0x5BDD,\n                0x9052: 0x5BE9,\n                0x9053: 0x5FC3,\n                0x9054: 0x614E,\n                0x9055: 0x632F,\n                0x9056: 0x65B0,\n                0x9057: 0x664B,\n                0x9058: 0x68EE,\n                0x9059: 0x699B,\n                0x905A: 0x6D78,\n                0x905B: 0x6DF1,\n                0x905C: 0x7533,\n                0x905D: 0x75B9,\n                0x905E: 0x771F,\n                0x905F: 0x795E,\n                0x9060: 0x79E6,\n                0x9061: 0x7D33,\n                0x9062: 0x81E3,\n                0x9063: 0x82AF,\n                0x9064: 0x85AA,\n                0x9065: 0x89AA,\n                0x9066: 0x8A3A,\n                0x9067: 0x8EAB,\n                0x9068: 0x8F9B,\n                0x9069: 0x9032,\n                0x906A: 0x91DD,\n                0x906B: 0x9707,\n                0x906C: 0x4EBA,\n                0x906D: 0x4EC1,\n                0x906E: 0x5203,\n                0x906F: 0x5875,\n                0x9070: 0x58EC,\n                0x9071: 0x5C0B,\n                0x9072: 0x751A,\n                0x9073: 0x5C3D,\n                0x9074: 0x814E,\n                0x9075: 0x8A0A,\n                0x9076: 0x8FC5,\n                0x9077: 0x9663,\n                0x9078: 0x976D,\n                0x9079: 0x7B25,\n                0x907A: 0x8ACF,\n                0x907B: 0x9808,\n                0x907C: 0x9162,\n                0x907D: 0x56F3,\n                0x907E: 0x53A8,\n                0x9080: 0x9017,\n                0x9081: 0x5439,\n                0x9082: 0x5782,\n                0x9083: 0x5E25,\n                0x9084: 0x63A8,\n                0x9085: 0x6C34,\n                0x9086: 0x708A,\n                0x9087: 0x7761,\n                0x9088: 0x7C8B,\n                0x9089: 0x7FE0,\n                0x908A: 0x8870,\n                0x908B: 0x9042,\n                0x908C: 0x9154,\n                0x908D: 0x9310,\n                0x908E: 0x9318,\n                0x908F: 0x968F,\n                0x9090: 0x745E,\n                0x9091: 0x9AC4,\n                0x9092: 0x5D07,\n                0x9093: 0x5D69,\n                0x9094: 0x6570,\n                0x9095: 0x67A2,\n                0x9096: 0x8DA8,\n                0x9097: 0x96DB,\n                0x9098: 0x636E,\n                0x9099: 0x6749,\n                0x909A: 0x6919,\n                0x909B: 0x83C5,\n                0x909C: 0x9817,\n                0x909D: 0x96C0,\n                0x909E: 0x88FE,\n                0x909F: 0x6F84,\n                0x90A0: 0x647A,\n                0x90A1: 0x5BF8,\n                0x90A2: 0x4E16,\n                0x90A3: 0x702C,\n                0x90A4: 0x755D,\n                0x90A5: 0x662F,\n                0x90A6: 0x51C4,\n                0x90A7: 0x5236,\n                0x90A8: 0x52E2,\n                0x90A9: 0x59D3,\n                0x90AA: 0x5F81,\n                0x90AB: 0x6027,\n                0x90AC: 0x6210,\n                0x90AD: 0x653F,\n                0x90AE: 0x6574,\n                0x90AF: 0x661F,\n                0x90B0: 0x6674,\n                0x90B1: 0x68F2,\n                0x90B2: 0x6816,\n                0x90B3: 0x6B63,\n                0x90B4: 0x6E05,\n                0x90B5: 0x7272,\n                0x90B6: 0x751F,\n                0x90B7: 0x76DB,\n                0x90B8: 0x7CBE,\n                0x90B9: 0x8056,\n                0x90BA: 0x58F0,\n                0x90BB: 0x88FD,\n                0x90BC: 0x897F,\n                0x90BD: 0x8AA0,\n                0x90BE: 0x8A93,\n                0x90BF: 0x8ACB,\n                0x90C0: 0x901D,\n                0x90C1: 0x9192,\n                0x90C2: 0x9752,\n                0x90C3: 0x9759,\n                0x90C4: 0x6589,\n                0x90C5: 0x7A0E,\n                0x90C6: 0x8106,\n                0x90C7: 0x96BB,\n                0x90C8: 0x5E2D,\n                0x90C9: 0x60DC,\n                0x90CA: 0x621A,\n                0x90CB: 0x65A5,\n                0x90CC: 0x6614,\n                0x90CD: 0x6790,\n                0x90CE: 0x77F3,\n                0x90CF: 0x7A4D,\n                0x90D0: 0x7C4D,\n                0x90D1: 0x7E3E,\n                0x90D2: 0x810A,\n                0x90D3: 0x8CAC,\n                0x90D4: 0x8D64,\n                0x90D5: 0x8DE1,\n                0x90D6: 0x8E5F,\n                0x90D7: 0x78A9,\n                0x90D8: 0x5207,\n                0x90D9: 0x62D9,\n                0x90DA: 0x63A5,\n                0x90DB: 0x6442,\n                0x90DC: 0x6298,\n                0x90DD: 0x8A2D,\n                0x90DE: 0x7A83,\n                0x90DF: 0x7BC0,\n                0x90E0: 0x8AAC,\n                0x90E1: 0x96EA,\n                0x90E2: 0x7D76,\n                0x90E3: 0x820C,\n                0x90E4: 0x8749,\n                0x90E5: 0x4ED9,\n                0x90E6: 0x5148,\n                0x90E7: 0x5343,\n                0x90E8: 0x5360,\n                0x90E9: 0x5BA3,\n                0x90EA: 0x5C02,\n                0x90EB: 0x5C16,\n                0x90EC: 0x5DDD,\n                0x90ED: 0x6226,\n                0x90EE: 0x6247,\n                0x90EF: 0x64B0,\n                0x90F0: 0x6813,\n                0x90F1: 0x6834,\n                0x90F2: 0x6CC9,\n                0x90F3: 0x6D45,\n                0x90F4: 0x6D17,\n                0x90F5: 0x67D3,\n                0x90F6: 0x6F5C,\n                0x90F7: 0x714E,\n                0x90F8: 0x717D,\n                0x90F9: 0x65CB,\n                0x90FA: 0x7A7F,\n                0x90FB: 0x7BAD,\n                0x90FC: 0x7DDA,\n                0x9140: 0x7E4A,\n                0x9141: 0x7FA8,\n                0x9142: 0x817A,\n                0x9143: 0x821B,\n                0x9144: 0x8239,\n                0x9145: 0x85A6,\n                0x9146: 0x8A6E,\n                0x9147: 0x8CCE,\n                0x9148: 0x8DF5,\n                0x9149: 0x9078,\n                0x914A: 0x9077,\n                0x914B: 0x92AD,\n                0x914C: 0x9291,\n                0x914D: 0x9583,\n                0x914E: 0x9BAE,\n                0x914F: 0x524D,\n                0x9150: 0x5584,\n                0x9151: 0x6F38,\n                0x9152: 0x7136,\n                0x9153: 0x5168,\n                0x9154: 0x7985,\n                0x9155: 0x7E55,\n                0x9156: 0x81B3,\n                0x9157: 0x7CCE,\n                0x9158: 0x564C,\n                0x9159: 0x5851,\n                0x915A: 0x5CA8,\n                0x915B: 0x63AA,\n                0x915C: 0x66FE,\n                0x915D: 0x66FD,\n                0x915E: 0x695A,\n                0x915F: 0x72D9,\n                0x9160: 0x758F,\n                0x9161: 0x758E,\n                0x9162: 0x790E,\n                0x9163: 0x7956,\n                0x9164: 0x79DF,\n                0x9165: 0x7C97,\n                0x9166: 0x7D20,\n                0x9167: 0x7D44,\n                0x9168: 0x8607,\n                0x9169: 0x8A34,\n                0x916A: 0x963B,\n                0x916B: 0x9061,\n                0x916C: 0x9F20,\n                0x916D: 0x50E7,\n                0x916E: 0x5275,\n                0x916F: 0x53CC,\n                0x9170: 0x53E2,\n                0x9171: 0x5009,\n                0x9172: 0x55AA,\n                0x9173: 0x58EE,\n                0x9174: 0x594F,\n                0x9175: 0x723D,\n                0x9176: 0x5B8B,\n                0x9177: 0x5C64,\n                0x9178: 0x531D,\n                0x9179: 0x60E3,\n                0x917A: 0x60F3,\n                0x917B: 0x635C,\n                0x917C: 0x6383,\n                0x917D: 0x633F,\n                0x917E: 0x63BB,\n                0x9180: 0x64CD,\n                0x9181: 0x65E9,\n                0x9182: 0x66F9,\n                0x9183: 0x5DE3,\n                0x9184: 0x69CD,\n                0x9185: 0x69FD,\n                0x9186: 0x6F15,\n                0x9187: 0x71E5,\n                0x9188: 0x4E89,\n                0x9189: 0x75E9,\n                0x918A: 0x76F8,\n                0x918B: 0x7A93,\n                0x918C: 0x7CDF,\n                0x918D: 0x7DCF,\n                0x918E: 0x7D9C,\n                0x918F: 0x8061,\n                0x9190: 0x8349,\n                0x9191: 0x8358,\n                0x9192: 0x846C,\n                0x9193: 0x84BC,\n                0x9194: 0x85FB,\n                0x9195: 0x88C5,\n                0x9196: 0x8D70,\n                0x9197: 0x9001,\n                0x9198: 0x906D,\n                0x9199: 0x9397,\n                0x919A: 0x971C,\n                0x919B: 0x9A12,\n                0x919C: 0x50CF,\n                0x919D: 0x5897,\n                0x919E: 0x618E,\n                0x919F: 0x81D3,\n                0x91A0: 0x8535,\n                0x91A1: 0x8D08,\n                0x91A2: 0x9020,\n                0x91A3: 0x4FC3,\n                0x91A4: 0x5074,\n                0x91A5: 0x5247,\n                0x91A6: 0x5373,\n                0x91A7: 0x606F,\n                0x91A8: 0x6349,\n                0x91A9: 0x675F,\n                0x91AA: 0x6E2C,\n                0x91AB: 0x8DB3,\n                0x91AC: 0x901F,\n                0x91AD: 0x4FD7,\n                0x91AE: 0x5C5E,\n                0x91AF: 0x8CCA,\n                0x91B0: 0x65CF,\n                0x91B1: 0x7D9A,\n                0x91B2: 0x5352,\n                0x91B3: 0x8896,\n                0x91B4: 0x5176,\n                0x91B5: 0x63C3,\n                0x91B6: 0x5B58,\n                0x91B7: 0x5B6B,\n                0x91B8: 0x5C0A,\n                0x91B9: 0x640D,\n                0x91BA: 0x6751,\n                0x91BB: 0x905C,\n                0x91BC: 0x4ED6,\n                0x91BD: 0x591A,\n                0x91BE: 0x592A,\n                0x91BF: 0x6C70,\n                0x91C0: 0x8A51,\n                0x91C1: 0x553E,\n                0x91C2: 0x5815,\n                0x91C3: 0x59A5,\n                0x91C4: 0x60F0,\n                0x91C5: 0x6253,\n                0x91C6: 0x67C1,\n                0x91C7: 0x8235,\n                0x91C8: 0x6955,\n                0x91C9: 0x9640,\n                0x91CA: 0x99C4,\n                0x91CB: 0x9A28,\n                0x91CC: 0x4F53,\n                0x91CD: 0x5806,\n                0x91CE: 0x5BFE,\n                0x91CF: 0x8010,\n                0x91D0: 0x5CB1,\n                0x91D1: 0x5E2F,\n                0x91D2: 0x5F85,\n                0x91D3: 0x6020,\n                0x91D4: 0x614B,\n                0x91D5: 0x6234,\n                0x91D6: 0x66FF,\n                0x91D7: 0x6CF0,\n                0x91D8: 0x6EDE,\n                0x91D9: 0x80CE,\n                0x91DA: 0x817F,\n                0x91DB: 0x82D4,\n                0x91DC: 0x888B,\n                0x91DD: 0x8CB8,\n                0x91DE: 0x9000,\n                0x91DF: 0x902E,\n                0x91E0: 0x968A,\n                0x91E1: 0x9EDB,\n                0x91E2: 0x9BDB,\n                0x91E3: 0x4EE3,\n                0x91E4: 0x53F0,\n                0x91E5: 0x5927,\n                0x91E6: 0x7B2C,\n                0x91E7: 0x918D,\n                0x91E8: 0x984C,\n                0x91E9: 0x9DF9,\n                0x91EA: 0x6EDD,\n                0x91EB: 0x7027,\n                0x91EC: 0x5353,\n                0x91ED: 0x5544,\n                0x91EE: 0x5B85,\n                0x91EF: 0x6258,\n                0x91F0: 0x629E,\n                0x91F1: 0x62D3,\n                0x91F2: 0x6CA2,\n                0x91F3: 0x6FEF,\n                0x91F4: 0x7422,\n                0x91F5: 0x8A17,\n                0x91F6: 0x9438,\n                0x91F7: 0x6FC1,\n                0x91F8: 0x8AFE,\n                0x91F9: 0x8338,\n                0x91FA: 0x51E7,\n                0x91FB: 0x86F8,\n                0x91FC: 0x53EA,\n                0x9240: 0x53E9,\n                0x9241: 0x4F46,\n                0x9242: 0x9054,\n                0x9243: 0x8FB0,\n                0x9244: 0x596A,\n                0x9245: 0x8131,\n                0x9246: 0x5DFD,\n                0x9247: 0x7AEA,\n                0x9248: 0x8FBF,\n                0x9249: 0x68DA,\n                0x924A: 0x8C37,\n                0x924B: 0x72F8,\n                0x924C: 0x9C48,\n                0x924D: 0x6A3D,\n                0x924E: 0x8AB0,\n                0x924F: 0x4E39,\n                0x9250: 0x5358,\n                0x9251: 0x5606,\n                0x9252: 0x5766,\n                0x9253: 0x62C5,\n                0x9254: 0x63A2,\n                0x9255: 0x65E6,\n                0x9256: 0x6B4E,\n                0x9257: 0x6DE1,\n                0x9258: 0x6E5B,\n                0x9259: 0x70AD,\n                0x925A: 0x77ED,\n                0x925B: 0x7AEF,\n                0x925C: 0x7BAA,\n                0x925D: 0x7DBB,\n                0x925E: 0x803D,\n                0x925F: 0x80C6,\n                0x9260: 0x86CB,\n                0x9261: 0x8A95,\n                0x9262: 0x935B,\n                0x9263: 0x56E3,\n                0x9264: 0x58C7,\n                0x9265: 0x5F3E,\n                0x9266: 0x65AD,\n                0x9267: 0x6696,\n                0x9268: 0x6A80,\n                0x9269: 0x6BB5,\n                0x926A: 0x7537,\n                0x926B: 0x8AC7,\n                0x926C: 0x5024,\n                0x926D: 0x77E5,\n                0x926E: 0x5730,\n                0x926F: 0x5F1B,\n                0x9270: 0x6065,\n                0x9271: 0x667A,\n                0x9272: 0x6C60,\n                0x9273: 0x75F4,\n                0x9274: 0x7A1A,\n                0x9275: 0x7F6E,\n                0x9276: 0x81F4,\n                0x9277: 0x8718,\n                0x9278: 0x9045,\n                0x9279: 0x99B3,\n                0x927A: 0x7BC9,\n                0x927B: 0x755C,\n                0x927C: 0x7AF9,\n                0x927D: 0x7B51,\n                0x927E: 0x84C4,\n                0x9280: 0x9010,\n                0x9281: 0x79E9,\n                0x9282: 0x7A92,\n                0x9283: 0x8336,\n                0x9284: 0x5AE1,\n                0x9285: 0x7740,\n                0x9286: 0x4E2D,\n                0x9287: 0x4EF2,\n                0x9288: 0x5B99,\n                0x9289: 0x5FE0,\n                0x928A: 0x62BD,\n                0x928B: 0x663C,\n                0x928C: 0x67F1,\n                0x928D: 0x6CE8,\n                0x928E: 0x866B,\n                0x928F: 0x8877,\n                0x9290: 0x8A3B,\n                0x9291: 0x914E,\n                0x9292: 0x92F3,\n                0x9293: 0x99D0,\n                0x9294: 0x6A17,\n                0x9295: 0x7026,\n                0x9296: 0x732A,\n                0x9297: 0x82E7,\n                0x9298: 0x8457,\n                0x9299: 0x8CAF,\n                0x929A: 0x4E01,\n                0x929B: 0x5146,\n                0x929C: 0x51CB,\n                0x929D: 0x558B,\n                0x929E: 0x5BF5,\n                0x929F: 0x5E16,\n                0x92A0: 0x5E33,\n                0x92A1: 0x5E81,\n                0x92A2: 0x5F14,\n                0x92A3: 0x5F35,\n                0x92A4: 0x5F6B,\n                0x92A5: 0x5FB4,\n                0x92A6: 0x61F2,\n                0x92A7: 0x6311,\n                0x92A8: 0x66A2,\n                0x92A9: 0x671D,\n                0x92AA: 0x6F6E,\n                0x92AB: 0x7252,\n                0x92AC: 0x753A,\n                0x92AD: 0x773A,\n                0x92AE: 0x8074,\n                0x92AF: 0x8139,\n                0x92B0: 0x8178,\n                0x92B1: 0x8776,\n                0x92B2: 0x8ABF,\n                0x92B3: 0x8ADC,\n                0x92B4: 0x8D85,\n                0x92B5: 0x8DF3,\n                0x92B6: 0x929A,\n                0x92B7: 0x9577,\n                0x92B8: 0x9802,\n                0x92B9: 0x9CE5,\n                0x92BA: 0x52C5,\n                0x92BB: 0x6357,\n                0x92BC: 0x76F4,\n                0x92BD: 0x6715,\n                0x92BE: 0x6C88,\n                0x92BF: 0x73CD,\n                0x92C0: 0x8CC3,\n                0x92C1: 0x93AE,\n                0x92C2: 0x9673,\n                0x92C3: 0x6D25,\n                0x92C4: 0x589C,\n                0x92C5: 0x690E,\n                0x92C6: 0x69CC,\n                0x92C7: 0x8FFD,\n                0x92C8: 0x939A,\n                0x92C9: 0x75DB,\n                0x92CA: 0x901A,\n                0x92CB: 0x585A,\n                0x92CC: 0x6802,\n                0x92CD: 0x63B4,\n                0x92CE: 0x69FB,\n                0x92CF: 0x4F43,\n                0x92D0: 0x6F2C,\n                0x92D1: 0x67D8,\n                0x92D2: 0x8FBB,\n                0x92D3: 0x8526,\n                0x92D4: 0x7DB4,\n                0x92D5: 0x9354,\n                0x92D6: 0x693F,\n                0x92D7: 0x6F70,\n                0x92D8: 0x576A,\n                0x92D9: 0x58F7,\n                0x92DA: 0x5B2C,\n                0x92DB: 0x7D2C,\n                0x92DC: 0x722A,\n                0x92DD: 0x540A,\n                0x92DE: 0x91E3,\n                0x92DF: 0x9DB4,\n                0x92E0: 0x4EAD,\n                0x92E1: 0x4F4E,\n                0x92E2: 0x505C,\n                0x92E3: 0x5075,\n                0x92E4: 0x5243,\n                0x92E5: 0x8C9E,\n                0x92E6: 0x5448,\n                0x92E7: 0x5824,\n                0x92E8: 0x5B9A,\n                0x92E9: 0x5E1D,\n                0x92EA: 0x5E95,\n                0x92EB: 0x5EAD,\n                0x92EC: 0x5EF7,\n                0x92ED: 0x5F1F,\n                0x92EE: 0x608C,\n                0x92EF: 0x62B5,\n                0x92F0: 0x633A,\n                0x92F1: 0x63D0,\n                0x92F2: 0x68AF,\n                0x92F3: 0x6C40,\n                0x92F4: 0x7887,\n                0x92F5: 0x798E,\n                0x92F6: 0x7A0B,\n                0x92F7: 0x7DE0,\n                0x92F8: 0x8247,\n                0x92F9: 0x8A02,\n                0x92FA: 0x8AE6,\n                0x92FB: 0x8E44,\n                0x92FC: 0x9013,\n                0x9340: 0x90B8,\n                0x9341: 0x912D,\n                0x9342: 0x91D8,\n                0x9343: 0x9F0E,\n                0x9344: 0x6CE5,\n                0x9345: 0x6458,\n                0x9346: 0x64E2,\n                0x9347: 0x6575,\n                0x9348: 0x6EF4,\n                0x9349: 0x7684,\n                0x934A: 0x7B1B,\n                0x934B: 0x9069,\n                0x934C: 0x93D1,\n                0x934D: 0x6EBA,\n                0x934E: 0x54F2,\n                0x934F: 0x5FB9,\n                0x9350: 0x64A4,\n                0x9351: 0x8F4D,\n                0x9352: 0x8FED,\n                0x9353: 0x9244,\n                0x9354: 0x5178,\n                0x9355: 0x586B,\n                0x9356: 0x5929,\n                0x9357: 0x5C55,\n                0x9358: 0x5E97,\n                0x9359: 0x6DFB,\n                0x935A: 0x7E8F,\n                0x935B: 0x751C,\n                0x935C: 0x8CBC,\n                0x935D: 0x8EE2,\n                0x935E: 0x985B,\n                0x935F: 0x70B9,\n                0x9360: 0x4F1D,\n                0x9361: 0x6BBF,\n                0x9362: 0x6FB1,\n                0x9363: 0x7530,\n                0x9364: 0x96FB,\n                0x9365: 0x514E,\n                0x9366: 0x5410,\n                0x9367: 0x5835,\n                0x9368: 0x5857,\n                0x9369: 0x59AC,\n                0x936A: 0x5C60,\n                0x936B: 0x5F92,\n                0x936C: 0x6597,\n                0x936D: 0x675C,\n                0x936E: 0x6E21,\n                0x936F: 0x767B,\n                0x9370: 0x83DF,\n                0x9371: 0x8CED,\n                0x9372: 0x9014,\n                0x9373: 0x90FD,\n                0x9374: 0x934D,\n                0x9375: 0x7825,\n                0x9376: 0x783A,\n                0x9377: 0x52AA,\n                0x9378: 0x5EA6,\n                0x9379: 0x571F,\n                0x937A: 0x5974,\n                0x937B: 0x6012,\n                0x937C: 0x5012,\n                0x937D: 0x515A,\n                0x937E: 0x51AC,\n                0x9380: 0x51CD,\n                0x9381: 0x5200,\n                0x9382: 0x5510,\n                0x9383: 0x5854,\n                0x9384: 0x5858,\n                0x9385: 0x5957,\n                0x9386: 0x5B95,\n                0x9387: 0x5CF6,\n                0x9388: 0x5D8B,\n                0x9389: 0x60BC,\n                0x938A: 0x6295,\n                0x938B: 0x642D,\n                0x938C: 0x6771,\n                0x938D: 0x6843,\n                0x938E: 0x68BC,\n                0x938F: 0x68DF,\n                0x9390: 0x76D7,\n                0x9391: 0x6DD8,\n                0x9392: 0x6E6F,\n                0x9393: 0x6D9B,\n                0x9394: 0x706F,\n                0x9395: 0x71C8,\n                0x9396: 0x5F53,\n                0x9397: 0x75D8,\n                0x9398: 0x7977,\n                0x9399: 0x7B49,\n                0x939A: 0x7B54,\n                0x939B: 0x7B52,\n                0x939C: 0x7CD6,\n                0x939D: 0x7D71,\n                0x939E: 0x5230,\n                0x939F: 0x8463,\n                0x93A0: 0x8569,\n                0x93A1: 0x85E4,\n                0x93A2: 0x8A0E,\n                0x93A3: 0x8B04,\n                0x93A4: 0x8C46,\n                0x93A5: 0x8E0F,\n                0x93A6: 0x9003,\n                0x93A7: 0x900F,\n                0x93A8: 0x9419,\n                0x93A9: 0x9676,\n                0x93AA: 0x982D,\n                0x93AB: 0x9A30,\n                0x93AC: 0x95D8,\n                0x93AD: 0x50CD,\n                0x93AE: 0x52D5,\n                0x93AF: 0x540C,\n                0x93B0: 0x5802,\n                0x93B1: 0x5C0E,\n                0x93B2: 0x61A7,\n                0x93B3: 0x649E,\n                0x93B4: 0x6D1E,\n                0x93B5: 0x77B3,\n                0x93B6: 0x7AE5,\n                0x93B7: 0x80F4,\n                0x93B8: 0x8404,\n                0x93B9: 0x9053,\n                0x93BA: 0x9285,\n                0x93BB: 0x5CE0,\n                0x93BC: 0x9D07,\n                0x93BD: 0x533F,\n                0x93BE: 0x5F97,\n                0x93BF: 0x5FB3,\n                0x93C0: 0x6D9C,\n                0x93C1: 0x7279,\n                0x93C2: 0x7763,\n                0x93C3: 0x79BF,\n                0x93C4: 0x7BE4,\n                0x93C5: 0x6BD2,\n                0x93C6: 0x72EC,\n                0x93C7: 0x8AAD,\n                0x93C8: 0x6803,\n                0x93C9: 0x6A61,\n                0x93CA: 0x51F8,\n                0x93CB: 0x7A81,\n                0x93CC: 0x6934,\n                0x93CD: 0x5C4A,\n                0x93CE: 0x9CF6,\n                0x93CF: 0x82EB,\n                0x93D0: 0x5BC5,\n                0x93D1: 0x9149,\n                0x93D2: 0x701E,\n                0x93D3: 0x5678,\n                0x93D4: 0x5C6F,\n                0x93D5: 0x60C7,\n                0x93D6: 0x6566,\n                0x93D7: 0x6C8C,\n                0x93D8: 0x8C5A,\n                0x93D9: 0x9041,\n                0x93DA: 0x9813,\n                0x93DB: 0x5451,\n                0x93DC: 0x66C7,\n                0x93DD: 0x920D,\n                0x93DE: 0x5948,\n                0x93DF: 0x90A3,\n                0x93E0: 0x5185,\n                0x93E1: 0x4E4D,\n                0x93E2: 0x51EA,\n                0x93E3: 0x8599,\n                0x93E4: 0x8B0E,\n                0x93E5: 0x7058,\n                0x93E6: 0x637A,\n                0x93E7: 0x934B,\n                0x93E8: 0x6962,\n                0x93E9: 0x99B4,\n                0x93EA: 0x7E04,\n                0x93EB: 0x7577,\n                0x93EC: 0x5357,\n                0x93ED: 0x6960,\n                0x93EE: 0x8EDF,\n                0x93EF: 0x96E3,\n                0x93F0: 0x6C5D,\n                0x93F1: 0x4E8C,\n                0x93F2: 0x5C3C,\n                0x93F3: 0x5F10,\n                0x93F4: 0x8FE9,\n                0x93F5: 0x5302,\n                0x93F6: 0x8CD1,\n                0x93F7: 0x8089,\n                0x93F8: 0x8679,\n                0x93F9: 0x5EFF,\n                0x93FA: 0x65E5,\n                0x93FB: 0x4E73,\n                0x93FC: 0x5165,\n                0x9440: 0x5982,\n                0x9441: 0x5C3F,\n                0x9442: 0x97EE,\n                0x9443: 0x4EFB,\n                0x9444: 0x598A,\n                0x9445: 0x5FCD,\n                0x9446: 0x8A8D,\n                0x9447: 0x6FE1,\n                0x9448: 0x79B0,\n                0x9449: 0x7962,\n                0x944A: 0x5BE7,\n                0x944B: 0x8471,\n                0x944C: 0x732B,\n                0x944D: 0x71B1,\n                0x944E: 0x5E74,\n                0x944F: 0x5FF5,\n                0x9450: 0x637B,\n                0x9451: 0x649A,\n                0x9452: 0x71C3,\n                0x9453: 0x7C98,\n                0x9454: 0x4E43,\n                0x9455: 0x5EFC,\n                0x9456: 0x4E4B,\n                0x9457: 0x57DC,\n                0x9458: 0x56A2,\n                0x9459: 0x60A9,\n                0x945A: 0x6FC3,\n                0x945B: 0x7D0D,\n                0x945C: 0x80FD,\n                0x945D: 0x8133,\n                0x945E: 0x81BF,\n                0x945F: 0x8FB2,\n                0x9460: 0x8997,\n                0x9461: 0x86A4,\n                0x9462: 0x5DF4,\n                0x9463: 0x628A,\n                0x9464: 0x64AD,\n                0x9465: 0x8987,\n                0x9466: 0x6777,\n                0x9467: 0x6CE2,\n                0x9468: 0x6D3E,\n                0x9469: 0x7436,\n                0x946A: 0x7834,\n                0x946B: 0x5A46,\n                0x946C: 0x7F75,\n                0x946D: 0x82AD,\n                0x946E: 0x99AC,\n                0x946F: 0x4FF3,\n                0x9470: 0x5EC3,\n                0x9471: 0x62DD,\n                0x9472: 0x6392,\n                0x9473: 0x6557,\n                0x9474: 0x676F,\n                0x9475: 0x76C3,\n                0x9476: 0x724C,\n                0x9477: 0x80CC,\n                0x9478: 0x80BA,\n                0x9479: 0x8F29,\n                0x947A: 0x914D,\n                0x947B: 0x500D,\n                0x947C: 0x57F9,\n                0x947D: 0x5A92,\n                0x947E: 0x6885,\n                0x9480: 0x6973,\n                0x9481: 0x7164,\n                0x9482: 0x72FD,\n                0x9483: 0x8CB7,\n                0x9484: 0x58F2,\n                0x9485: 0x8CE0,\n                0x9486: 0x966A,\n                0x9487: 0x9019,\n                0x9488: 0x877F,\n                0x9489: 0x79E4,\n                0x948A: 0x77E7,\n                0x948B: 0x8429,\n                0x948C: 0x4F2F,\n                0x948D: 0x5265,\n                0x948E: 0x535A,\n                0x948F: 0x62CD,\n                0x9490: 0x67CF,\n                0x9491: 0x6CCA,\n                0x9492: 0x767D,\n                0x9493: 0x7B94,\n                0x9494: 0x7C95,\n                0x9495: 0x8236,\n                0x9496: 0x8584,\n                0x9497: 0x8FEB,\n                0x9498: 0x66DD,\n                0x9499: 0x6F20,\n                0x949A: 0x7206,\n                0x949B: 0x7E1B,\n                0x949C: 0x83AB,\n                0x949D: 0x99C1,\n                0x949E: 0x9EA6,\n                0x949F: 0x51FD,\n                0x94A0: 0x7BB1,\n                0x94A1: 0x7872,\n                0x94A2: 0x7BB8,\n                0x94A3: 0x8087,\n                0x94A4: 0x7B48,\n                0x94A5: 0x6AE8,\n                0x94A6: 0x5E61,\n                0x94A7: 0x808C,\n                0x94A8: 0x7551,\n                0x94A9: 0x7560,\n                0x94AA: 0x516B,\n                0x94AB: 0x9262,\n                0x94AC: 0x6E8C,\n                0x94AD: 0x767A,\n                0x94AE: 0x9197,\n                0x94AF: 0x9AEA,\n                0x94B0: 0x4F10,\n                0x94B1: 0x7F70,\n                0x94B2: 0x629C,\n                0x94B3: 0x7B4F,\n                0x94B4: 0x95A5,\n                0x94B5: 0x9CE9,\n                0x94B6: 0x567A,\n                0x94B7: 0x5859,\n                0x94B8: 0x86E4,\n                0x94B9: 0x96BC,\n                0x94BA: 0x4F34,\n                0x94BB: 0x5224,\n                0x94BC: 0x534A,\n                0x94BD: 0x53CD,\n                0x94BE: 0x53DB,\n                0x94BF: 0x5E06,\n                0x94C0: 0x642C,\n                0x94C1: 0x6591,\n                0x94C2: 0x677F,\n                0x94C3: 0x6C3E,\n                0x94C4: 0x6C4E,\n                0x94C5: 0x7248,\n                0x94C6: 0x72AF,\n                0x94C7: 0x73ED,\n                0x94C8: 0x7554,\n                0x94C9: 0x7E41,\n                0x94CA: 0x822C,\n                0x94CB: 0x85E9,\n                0x94CC: 0x8CA9,\n                0x94CD: 0x7BC4,\n                0x94CE: 0x91C6,\n                0x94CF: 0x7169,\n                0x94D0: 0x9812,\n                0x94D1: 0x98EF,\n                0x94D2: 0x633D,\n                0x94D3: 0x6669,\n                0x94D4: 0x756A,\n                0x94D5: 0x76E4,\n                0x94D6: 0x78D0,\n                0x94D7: 0x8543,\n                0x94D8: 0x86EE,\n                0x94D9: 0x532A,\n                0x94DA: 0x5351,\n                0x94DB: 0x5426,\n                0x94DC: 0x5983,\n                0x94DD: 0x5E87,\n                0x94DE: 0x5F7C,\n                0x94DF: 0x60B2,\n                0x94E0: 0x6249,\n                0x94E1: 0x6279,\n                0x94E2: 0x62AB,\n                0x94E3: 0x6590,\n                0x94E4: 0x6BD4,\n                0x94E5: 0x6CCC,\n                0x94E6: 0x75B2,\n                0x94E7: 0x76AE,\n                0x94E8: 0x7891,\n                0x94E9: 0x79D8,\n                0x94EA: 0x7DCB,\n                0x94EB: 0x7F77,\n                0x94EC: 0x80A5,\n                0x94ED: 0x88AB,\n                0x94EE: 0x8AB9,\n                0x94EF: 0x8CBB,\n                0x94F0: 0x907F,\n                0x94F1: 0x975E,\n                0x94F2: 0x98DB,\n                0x94F3: 0x6A0B,\n                0x94F4: 0x7C38,\n                0x94F5: 0x5099,\n                0x94F6: 0x5C3E,\n                0x94F7: 0x5FAE,\n                0x94F8: 0x6787,\n                0x94F9: 0x6BD8,\n                0x94FA: 0x7435,\n                0x94FB: 0x7709,\n                0x94FC: 0x7F8E,\n                0x9540: 0x9F3B,\n                0x9541: 0x67CA,\n                0x9542: 0x7A17,\n                0x9543: 0x5339,\n                0x9544: 0x758B,\n                0x9545: 0x9AED,\n                0x9546: 0x5F66,\n                0x9547: 0x819D,\n                0x9548: 0x83F1,\n                0x9549: 0x8098,\n                0x954A: 0x5F3C,\n                0x954B: 0x5FC5,\n                0x954C: 0x7562,\n                0x954D: 0x7B46,\n                0x954E: 0x903C,\n                0x954F: 0x6867,\n                0x9550: 0x59EB,\n                0x9551: 0x5A9B,\n                0x9552: 0x7D10,\n                0x9553: 0x767E,\n                0x9554: 0x8B2C,\n                0x9555: 0x4FF5,\n                0x9556: 0x5F6A,\n                0x9557: 0x6A19,\n                0x9558: 0x6C37,\n                0x9559: 0x6F02,\n                0x955A: 0x74E2,\n                0x955B: 0x7968,\n                0x955C: 0x8868,\n                0x955D: 0x8A55,\n                0x955E: 0x8C79,\n                0x955F: 0x5EDF,\n                0x9560: 0x63CF,\n                0x9561: 0x75C5,\n                0x9562: 0x79D2,\n                0x9563: 0x82D7,\n                0x9564: 0x9328,\n                0x9565: 0x92F2,\n                0x9566: 0x849C,\n                0x9567: 0x86ED,\n                0x9568: 0x9C2D,\n                0x9569: 0x54C1,\n                0x956A: 0x5F6C,\n                0x956B: 0x658C,\n                0x956C: 0x6D5C,\n                0x956D: 0x7015,\n                0x956E: 0x8CA7,\n                0x956F: 0x8CD3,\n                0x9570: 0x983B,\n                0x9571: 0x654F,\n                0x9572: 0x74F6,\n                0x9573: 0x4E0D,\n                0x9574: 0x4ED8,\n                0x9575: 0x57E0,\n                0x9576: 0x592B,\n                0x9577: 0x5A66,\n                0x9578: 0x5BCC,\n                0x9579: 0x51A8,\n                0x957A: 0x5E03,\n                0x957B: 0x5E9C,\n                0x957C: 0x6016,\n                0x957D: 0x6276,\n                0x957E: 0x6577,\n                0x9580: 0x65A7,\n                0x9581: 0x666E,\n                0x9582: 0x6D6E,\n                0x9583: 0x7236,\n                0x9584: 0x7B26,\n                0x9585: 0x8150,\n                0x9586: 0x819A,\n                0x9587: 0x8299,\n                0x9588: 0x8B5C,\n                0x9589: 0x8CA0,\n                0x958A: 0x8CE6,\n                0x958B: 0x8D74,\n                0x958C: 0x961C,\n                0x958D: 0x9644,\n                0x958E: 0x4FAE,\n                0x958F: 0x64AB,\n                0x9590: 0x6B66,\n                0x9591: 0x821E,\n                0x9592: 0x8461,\n                0x9593: 0x856A,\n                0x9594: 0x90E8,\n                0x9595: 0x5C01,\n                0x9596: 0x6953,\n                0x9597: 0x98A8,\n                0x9598: 0x847A,\n                0x9599: 0x8557,\n                0x959A: 0x4F0F,\n                0x959B: 0x526F,\n                0x959C: 0x5FA9,\n                0x959D: 0x5E45,\n                0x959E: 0x670D,\n                0x959F: 0x798F,\n                0x95A0: 0x8179,\n                0x95A1: 0x8907,\n                0x95A2: 0x8986,\n                0x95A3: 0x6DF5,\n                0x95A4: 0x5F17,\n                0x95A5: 0x6255,\n                0x95A6: 0x6CB8,\n                0x95A7: 0x4ECF,\n                0x95A8: 0x7269,\n                0x95A9: 0x9B92,\n                0x95AA: 0x5206,\n                0x95AB: 0x543B,\n                0x95AC: 0x5674,\n                0x95AD: 0x58B3,\n                0x95AE: 0x61A4,\n                0x95AF: 0x626E,\n                0x95B0: 0x711A,\n                0x95B1: 0x596E,\n                0x95B2: 0x7C89,\n                0x95B3: 0x7CDE,\n                0x95B4: 0x7D1B,\n                0x95B5: 0x96F0,\n                0x95B6: 0x6587,\n                0x95B7: 0x805E,\n                0x95B8: 0x4E19,\n                0x95B9: 0x4F75,\n                0x95BA: 0x5175,\n                0x95BB: 0x5840,\n                0x95BC: 0x5E63,\n                0x95BD: 0x5E73,\n                0x95BE: 0x5F0A,\n                0x95BF: 0x67C4,\n                0x95C0: 0x4E26,\n                0x95C1: 0x853D,\n                0x95C2: 0x9589,\n                0x95C3: 0x965B,\n                0x95C4: 0x7C73,\n                0x95C5: 0x9801,\n                0x95C6: 0x50FB,\n                0x95C7: 0x58C1,\n                0x95C8: 0x7656,\n                0x95C9: 0x78A7,\n                0x95CA: 0x5225,\n                0x95CB: 0x77A5,\n                0x95CC: 0x8511,\n                0x95CD: 0x7B86,\n                0x95CE: 0x504F,\n                0x95CF: 0x5909,\n                0x95D0: 0x7247,\n                0x95D1: 0x7BC7,\n                0x95D2: 0x7DE8,\n                0x95D3: 0x8FBA,\n                0x95D4: 0x8FD4,\n                0x95D5: 0x904D,\n                0x95D6: 0x4FBF,\n                0x95D7: 0x52C9,\n                0x95D8: 0x5A29,\n                0x95D9: 0x5F01,\n                0x95DA: 0x97AD,\n                0x95DB: 0x4FDD,\n                0x95DC: 0x8217,\n                0x95DD: 0x92EA,\n                0x95DE: 0x5703,\n                0x95DF: 0x6355,\n                0x95E0: 0x6B69,\n                0x95E1: 0x752B,\n                0x95E2: 0x88DC,\n                0x95E3: 0x8F14,\n                0x95E4: 0x7A42,\n                0x95E5: 0x52DF,\n                0x95E6: 0x5893,\n                0x95E7: 0x6155,\n                0x95E8: 0x620A,\n                0x95E9: 0x66AE,\n                0x95EA: 0x6BCD,\n                0x95EB: 0x7C3F,\n                0x95EC: 0x83E9,\n                0x95ED: 0x5023,\n                0x95EE: 0x4FF8,\n                0x95EF: 0x5305,\n                0x95F0: 0x5446,\n                0x95F1: 0x5831,\n                0x95F2: 0x5949,\n                0x95F3: 0x5B9D,\n                0x95F4: 0x5CF0,\n                0x95F5: 0x5CEF,\n                0x95F6: 0x5D29,\n                0x95F7: 0x5E96,\n                0x95F8: 0x62B1,\n                0x95F9: 0x6367,\n                0x95FA: 0x653E,\n                0x95FB: 0x65B9,\n                0x95FC: 0x670B,\n                0x9640: 0x6CD5,\n                0x9641: 0x6CE1,\n                0x9642: 0x70F9,\n                0x9643: 0x7832,\n                0x9644: 0x7E2B,\n                0x9645: 0x80DE,\n                0x9646: 0x82B3,\n                0x9647: 0x840C,\n                0x9648: 0x84EC,\n                0x9649: 0x8702,\n                0x964A: 0x8912,\n                0x964B: 0x8A2A,\n                0x964C: 0x8C4A,\n                0x964D: 0x90A6,\n                0x964E: 0x92D2,\n                0x964F: 0x98FD,\n                0x9650: 0x9CF3,\n                0x9651: 0x9D6C,\n                0x9652: 0x4E4F,\n                0x9653: 0x4EA1,\n                0x9654: 0x508D,\n                0x9655: 0x5256,\n                0x9656: 0x574A,\n                0x9657: 0x59A8,\n                0x9658: 0x5E3D,\n                0x9659: 0x5FD8,\n                0x965A: 0x5FD9,\n                0x965B: 0x623F,\n                0x965C: 0x66B4,\n                0x965D: 0x671B,\n                0x965E: 0x67D0,\n                0x965F: 0x68D2,\n                0x9660: 0x5192,\n                0x9661: 0x7D21,\n                0x9662: 0x80AA,\n                0x9663: 0x81A8,\n                0x9664: 0x8B00,\n                0x9665: 0x8C8C,\n                0x9666: 0x8CBF,\n                0x9667: 0x927E,\n                0x9668: 0x9632,\n                0x9669: 0x5420,\n                0x966A: 0x982C,\n                0x966B: 0x5317,\n                0x966C: 0x50D5,\n                0x966D: 0x535C,\n                0x966E: 0x58A8,\n                0x966F: 0x64B2,\n                0x9670: 0x6734,\n                0x9671: 0x7267,\n                0x9672: 0x7766,\n                0x9673: 0x7A46,\n                0x9674: 0x91E6,\n                0x9675: 0x52C3,\n                0x9676: 0x6CA1,\n                0x9677: 0x6B86,\n                0x9678: 0x5800,\n                0x9679: 0x5E4C,\n                0x967A: 0x5954,\n                0x967B: 0x672C,\n                0x967C: 0x7FFB,\n                0x967D: 0x51E1,\n                0x967E: 0x76C6,\n                0x9680: 0x6469,\n                0x9681: 0x78E8,\n                0x9682: 0x9B54,\n                0x9683: 0x9EBB,\n                0x9684: 0x57CB,\n                0x9685: 0x59B9,\n                0x9686: 0x6627,\n                0x9687: 0x679A,\n                0x9688: 0x6BCE,\n                0x9689: 0x54E9,\n                0x968A: 0x69D9,\n                0x968B: 0x5E55,\n                0x968C: 0x819C,\n                0x968D: 0x6795,\n                0x968E: 0x9BAA,\n                0x968F: 0x67FE,\n                0x9690: 0x9C52,\n                0x9691: 0x685D,\n                0x9692: 0x4EA6,\n                0x9693: 0x4FE3,\n                0x9694: 0x53C8,\n                0x9695: 0x62B9,\n                0x9696: 0x672B,\n                0x9697: 0x6CAB,\n                0x9698: 0x8FC4,\n                0x9699: 0x4FAD,\n                0x969A: 0x7E6D,\n                0x969B: 0x9EBF,\n                0x969C: 0x4E07,\n                0x969D: 0x6162,\n                0x969E: 0x6E80,\n                0x969F: 0x6F2B,\n                0x96A0: 0x8513,\n                0x96A1: 0x5473,\n                0x96A2: 0x672A,\n                0x96A3: 0x9B45,\n                0x96A4: 0x5DF3,\n                0x96A5: 0x7B95,\n                0x96A6: 0x5CAC,\n                0x96A7: 0x5BC6,\n                0x96A8: 0x871C,\n                0x96A9: 0x6E4A,\n                0x96AA: 0x84D1,\n                0x96AB: 0x7A14,\n                0x96AC: 0x8108,\n                0x96AD: 0x5999,\n                0x96AE: 0x7C8D,\n                0x96AF: 0x6C11,\n                0x96B0: 0x7720,\n                0x96B1: 0x52D9,\n                0x96B2: 0x5922,\n                0x96B3: 0x7121,\n                0x96B4: 0x725F,\n                0x96B5: 0x77DB,\n                0x96B6: 0x9727,\n                0x96B7: 0x9D61,\n                0x96B8: 0x690B,\n                0x96B9: 0x5A7F,\n                0x96BA: 0x5A18,\n                0x96BB: 0x51A5,\n                0x96BC: 0x540D,\n                0x96BD: 0x547D,\n                0x96BE: 0x660E,\n                0x96BF: 0x76DF,\n                0x96C0: 0x8FF7,\n                0x96C1: 0x9298,\n                0x96C2: 0x9CF4,\n                0x96C3: 0x59EA,\n                0x96C4: 0x725D,\n                0x96C5: 0x6EC5,\n                0x96C6: 0x514D,\n                0x96C7: 0x68C9,\n                0x96C8: 0x7DBF,\n                0x96C9: 0x7DEC,\n                0x96CA: 0x9762,\n                0x96CB: 0x9EBA,\n                0x96CC: 0x6478,\n                0x96CD: 0x6A21,\n                0x96CE: 0x8302,\n                0x96CF: 0x5984,\n                0x96D0: 0x5B5F,\n                0x96D1: 0x6BDB,\n                0x96D2: 0x731B,\n                0x96D3: 0x76F2,\n                0x96D4: 0x7DB2,\n                0x96D5: 0x8017,\n                0x96D6: 0x8499,\n                0x96D7: 0x5132,\n                0x96D8: 0x6728,\n                0x96D9: 0x9ED9,\n                0x96DA: 0x76EE,\n                0x96DB: 0x6762,\n                0x96DC: 0x52FF,\n                0x96DD: 0x9905,\n                0x96DE: 0x5C24,\n                0x96DF: 0x623B,\n                0x96E0: 0x7C7E,\n                0x96E1: 0x8CB0,\n                0x96E2: 0x554F,\n                0x96E3: 0x60B6,\n                0x96E4: 0x7D0B,\n                0x96E5: 0x9580,\n                0x96E6: 0x5301,\n                0x96E7: 0x4E5F,\n                0x96E8: 0x51B6,\n                0x96E9: 0x591C,\n                0x96EA: 0x723A,\n                0x96EB: 0x8036,\n                0x96EC: 0x91CE,\n                0x96ED: 0x5F25,\n                0x96EE: 0x77E2,\n                0x96EF: 0x5384,\n                0x96F0: 0x5F79,\n                0x96F1: 0x7D04,\n                0x96F2: 0x85AC,\n                0x96F3: 0x8A33,\n                0x96F4: 0x8E8D,\n                0x96F5: 0x9756,\n                0x96F6: 0x67F3,\n                0x96F7: 0x85AE,\n                0x96F8: 0x9453,\n                0x96F9: 0x6109,\n                0x96FA: 0x6108,\n                0x96FB: 0x6CB9,\n                0x96FC: 0x7652,\n                0x9740: 0x8AED,\n                0x9741: 0x8F38,\n                0x9742: 0x552F,\n                0x9743: 0x4F51,\n                0x9744: 0x512A,\n                0x9745: 0x52C7,\n                0x9746: 0x53CB,\n                0x9747: 0x5BA5,\n                0x9748: 0x5E7D,\n                0x9749: 0x60A0,\n                0x974A: 0x6182,\n                0x974B: 0x63D6,\n                0x974C: 0x6709,\n                0x974D: 0x67DA,\n                0x974E: 0x6E67,\n                0x974F: 0x6D8C,\n                0x9750: 0x7336,\n                0x9751: 0x7337,\n                0x9752: 0x7531,\n                0x9753: 0x7950,\n                0x9754: 0x88D5,\n                0x9755: 0x8A98,\n                0x9756: 0x904A,\n                0x9757: 0x9091,\n                0x9758: 0x90F5,\n                0x9759: 0x96C4,\n                0x975A: 0x878D,\n                0x975B: 0x5915,\n                0x975C: 0x4E88,\n                0x975D: 0x4F59,\n                0x975E: 0x4E0E,\n                0x975F: 0x8A89,\n                0x9760: 0x8F3F,\n                0x9761: 0x9810,\n                0x9762: 0x50AD,\n                0x9763: 0x5E7C,\n                0x9764: 0x5996,\n                0x9765: 0x5BB9,\n                0x9766: 0x5EB8,\n                0x9767: 0x63DA,\n                0x9768: 0x63FA,\n                0x9769: 0x64C1,\n                0x976A: 0x66DC,\n                0x976B: 0x694A,\n                0x976C: 0x69D8,\n                0x976D: 0x6D0B,\n                0x976E: 0x6EB6,\n                0x976F: 0x7194,\n                0x9770: 0x7528,\n                0x9771: 0x7AAF,\n                0x9772: 0x7F8A,\n                0x9773: 0x8000,\n                0x9774: 0x8449,\n                0x9775: 0x84C9,\n                0x9776: 0x8981,\n                0x9777: 0x8B21,\n                0x9778: 0x8E0A,\n                0x9779: 0x9065,\n                0x977A: 0x967D,\n                0x977B: 0x990A,\n                0x977C: 0x617E,\n                0x977D: 0x6291,\n                0x977E: 0x6B32,\n                0x9780: 0x6C83,\n                0x9781: 0x6D74,\n                0x9782: 0x7FCC,\n                0x9783: 0x7FFC,\n                0x9784: 0x6DC0,\n                0x9785: 0x7F85,\n                0x9786: 0x87BA,\n                0x9787: 0x88F8,\n                0x9788: 0x6765,\n                0x9789: 0x83B1,\n                0x978A: 0x983C,\n                0x978B: 0x96F7,\n                0x978C: 0x6D1B,\n                0x978D: 0x7D61,\n                0x978E: 0x843D,\n                0x978F: 0x916A,\n                0x9790: 0x4E71,\n                0x9791: 0x5375,\n                0x9792: 0x5D50,\n                0x9793: 0x6B04,\n                0x9794: 0x6FEB,\n                0x9795: 0x85CD,\n                0x9796: 0x862D,\n                0x9797: 0x89A7,\n                0x9798: 0x5229,\n                0x9799: 0x540F,\n                0x979A: 0x5C65,\n                0x979B: 0x674E,\n                0x979C: 0x68A8,\n                0x979D: 0x7406,\n                0x979E: 0x7483,\n                0x979F: 0x75E2,\n                0x97A0: 0x88CF,\n                0x97A1: 0x88E1,\n                0x97A2: 0x91CC,\n                0x97A3: 0x96E2,\n                0x97A4: 0x9678,\n                0x97A5: 0x5F8B,\n                0x97A6: 0x7387,\n                0x97A7: 0x7ACB,\n                0x97A8: 0x844E,\n                0x97A9: 0x63A0,\n                0x97AA: 0x7565,\n                0x97AB: 0x5289,\n                0x97AC: 0x6D41,\n                0x97AD: 0x6E9C,\n                0x97AE: 0x7409,\n                0x97AF: 0x7559,\n                0x97B0: 0x786B,\n                0x97B1: 0x7C92,\n                0x97B2: 0x9686,\n                0x97B3: 0x7ADC,\n                0x97B4: 0x9F8D,\n                0x97B5: 0x4FB6,\n                0x97B6: 0x616E,\n                0x97B7: 0x65C5,\n                0x97B8: 0x865C,\n                0x97B9: 0x4E86,\n                0x97BA: 0x4EAE,\n                0x97BB: 0x50DA,\n                0x97BC: 0x4E21,\n                0x97BD: 0x51CC,\n                0x97BE: 0x5BEE,\n                0x97BF: 0x6599,\n                0x97C0: 0x6881,\n                0x97C1: 0x6DBC,\n                0x97C2: 0x731F,\n                0x97C3: 0x7642,\n                0x97C4: 0x77AD,\n                0x97C5: 0x7A1C,\n                0x97C6: 0x7CE7,\n                0x97C7: 0x826F,\n                0x97C8: 0x8AD2,\n                0x97C9: 0x907C,\n                0x97CA: 0x91CF,\n                0x97CB: 0x9675,\n                0x97CC: 0x9818,\n                0x97CD: 0x529B,\n                0x97CE: 0x7DD1,\n                0x97CF: 0x502B,\n                0x97D0: 0x5398,\n                0x97D1: 0x6797,\n                0x97D2: 0x6DCB,\n                0x97D3: 0x71D0,\n                0x97D4: 0x7433,\n                0x97D5: 0x81E8,\n                0x97D6: 0x8F2A,\n                0x97D7: 0x96A3,\n                0x97D8: 0x9C57,\n                0x97D9: 0x9E9F,\n                0x97DA: 0x7460,\n                0x97DB: 0x5841,\n                0x97DC: 0x6D99,\n                0x97DD: 0x7D2F,\n                0x97DE: 0x985E,\n                0x97DF: 0x4EE4,\n                0x97E0: 0x4F36,\n                0x97E1: 0x4F8B,\n                0x97E2: 0x51B7,\n                0x97E3: 0x52B1,\n                0x97E4: 0x5DBA,\n                0x97E5: 0x601C,\n                0x97E6: 0x73B2,\n                0x97E7: 0x793C,\n                0x97E8: 0x82D3,\n                0x97E9: 0x9234,\n                0x97EA: 0x96B7,\n                0x97EB: 0x96F6,\n                0x97EC: 0x970A,\n                0x97ED: 0x9E97,\n                0x97EE: 0x9F62,\n                0x97EF: 0x66A6,\n                0x97F0: 0x6B74,\n                0x97F1: 0x5217,\n                0x97F2: 0x52A3,\n                0x97F3: 0x70C8,\n                0x97F4: 0x88C2,\n                0x97F5: 0x5EC9,\n                0x97F6: 0x604B,\n                0x97F7: 0x6190,\n                0x97F8: 0x6F23,\n                0x97F9: 0x7149,\n                0x97FA: 0x7C3E,\n                0x97FB: 0x7DF4,\n                0x97FC: 0x806F,\n                0x9840: 0x84EE,\n                0x9841: 0x9023,\n                0x9842: 0x932C,\n                0x9843: 0x5442,\n                0x9844: 0x9B6F,\n                0x9845: 0x6AD3,\n                0x9846: 0x7089,\n                0x9847: 0x8CC2,\n                0x9848: 0x8DEF,\n                0x9849: 0x9732,\n                0x984A: 0x52B4,\n                0x984B: 0x5A41,\n                0x984C: 0x5ECA,\n                0x984D: 0x5F04,\n                0x984E: 0x6717,\n                0x984F: 0x697C,\n                0x9850: 0x6994,\n                0x9851: 0x6D6A,\n                0x9852: 0x6F0F,\n                0x9853: 0x7262,\n                0x9854: 0x72FC,\n                0x9855: 0x7BED,\n                0x9856: 0x8001,\n                0x9857: 0x807E,\n                0x9858: 0x874B,\n                0x9859: 0x90CE,\n                0x985A: 0x516D,\n                0x985B: 0x9E93,\n                0x985C: 0x7984,\n                0x985D: 0x808B,\n                0x985E: 0x9332,\n                0x985F: 0x8AD6,\n                0x9860: 0x502D,\n                0x9861: 0x548C,\n                0x9862: 0x8A71,\n                0x9863: 0x6B6A,\n                0x9864: 0x8CC4,\n                0x9865: 0x8107,\n                0x9866: 0x60D1,\n                0x9867: 0x67A0,\n                0x9868: 0x9DF2,\n                0x9869: 0x4E99,\n                0x986A: 0x4E98,\n                0x986B: 0x9C10,\n                0x986C: 0x8A6B,\n                0x986D: 0x85C1,\n                0x986E: 0x8568,\n                0x986F: 0x6900,\n                0x9870: 0x6E7E,\n                0x9871: 0x7897,\n                0x9872: 0x8155,\n                0x989F: 0x5F0C,\n                0x98A0: 0x4E10,\n                0x98A1: 0x4E15,\n                0x98A2: 0x4E2A,\n                0x98A3: 0x4E31,\n                0x98A4: 0x4E36,\n                0x98A5: 0x4E3C,\n                0x98A6: 0x4E3F,\n                0x98A7: 0x4E42,\n                0x98A8: 0x4E56,\n                0x98A9: 0x4E58,\n                0x98AA: 0x4E82,\n                0x98AB: 0x4E85,\n                0x98AC: 0x8C6B,\n                0x98AD: 0x4E8A,\n                0x98AE: 0x8212,\n                0x98AF: 0x5F0D,\n                0x98B0: 0x4E8E,\n                0x98B1: 0x4E9E,\n                0x98B2: 0x4E9F,\n                0x98B3: 0x4EA0,\n                0x98B4: 0x4EA2,\n                0x98B5: 0x4EB0,\n                0x98B6: 0x4EB3,\n                0x98B7: 0x4EB6,\n                0x98B8: 0x4ECE,\n                0x98B9: 0x4ECD,\n                0x98BA: 0x4EC4,\n                0x98BB: 0x4EC6,\n                0x98BC: 0x4EC2,\n                0x98BD: 0x4ED7,\n                0x98BE: 0x4EDE,\n                0x98BF: 0x4EED,\n                0x98C0: 0x4EDF,\n                0x98C1: 0x4EF7,\n                0x98C2: 0x4F09,\n                0x98C3: 0x4F5A,\n                0x98C4: 0x4F30,\n                0x98C5: 0x4F5B,\n                0x98C6: 0x4F5D,\n                0x98C7: 0x4F57,\n                0x98C8: 0x4F47,\n                0x98C9: 0x4F76,\n                0x98CA: 0x4F88,\n                0x98CB: 0x4F8F,\n                0x98CC: 0x4F98,\n                0x98CD: 0x4F7B,\n                0x98CE: 0x4F69,\n                0x98CF: 0x4F70,\n                0x98D0: 0x4F91,\n                0x98D1: 0x4F6F,\n                0x98D2: 0x4F86,\n                0x98D3: 0x4F96,\n                0x98D4: 0x5118,\n                0x98D5: 0x4FD4,\n                0x98D6: 0x4FDF,\n                0x98D7: 0x4FCE,\n                0x98D8: 0x4FD8,\n                0x98D9: 0x4FDB,\n                0x98DA: 0x4FD1,\n                0x98DB: 0x4FDA,\n                0x98DC: 0x4FD0,\n                0x98DD: 0x4FE4,\n                0x98DE: 0x4FE5,\n                0x98DF: 0x501A,\n                0x98E0: 0x5028,\n                0x98E1: 0x5014,\n                0x98E2: 0x502A,\n                0x98E3: 0x5025,\n                0x98E4: 0x5005,\n                0x98E5: 0x4F1C,\n                0x98E6: 0x4FF6,\n                0x98E7: 0x5021,\n                0x98E8: 0x5029,\n                0x98E9: 0x502C,\n                0x98EA: 0x4FFE,\n                0x98EB: 0x4FEF,\n                0x98EC: 0x5011,\n                0x98ED: 0x5006,\n                0x98EE: 0x5043,\n                0x98EF: 0x5047,\n                0x98F0: 0x6703,\n                0x98F1: 0x5055,\n                0x98F2: 0x5050,\n                0x98F3: 0x5048,\n                0x98F4: 0x505A,\n                0x98F5: 0x5056,\n                0x98F6: 0x506C,\n                0x98F7: 0x5078,\n                0x98F8: 0x5080,\n                0x98F9: 0x509A,\n                0x98FA: 0x5085,\n                0x98FB: 0x50B4,\n                0x98FC: 0x50B2,\n                0x9940: 0x50C9,\n                0x9941: 0x50CA,\n                0x9942: 0x50B3,\n                0x9943: 0x50C2,\n                0x9944: 0x50D6,\n                0x9945: 0x50DE,\n                0x9946: 0x50E5,\n                0x9947: 0x50ED,\n                0x9948: 0x50E3,\n                0x9949: 0x50EE,\n                0x994A: 0x50F9,\n                0x994B: 0x50F5,\n                0x994C: 0x5109,\n                0x994D: 0x5101,\n                0x994E: 0x5102,\n                0x994F: 0x5116,\n                0x9950: 0x5115,\n                0x9951: 0x5114,\n                0x9952: 0x511A,\n                0x9953: 0x5121,\n                0x9954: 0x513A,\n                0x9955: 0x5137,\n                0x9956: 0x513C,\n                0x9957: 0x513B,\n                0x9958: 0x513F,\n                0x9959: 0x5140,\n                0x995A: 0x5152,\n                0x995B: 0x514C,\n                0x995C: 0x5154,\n                0x995D: 0x5162,\n                0x995E: 0x7AF8,\n                0x995F: 0x5169,\n                0x9960: 0x516A,\n                0x9961: 0x516E,\n                0x9962: 0x5180,\n                0x9963: 0x5182,\n                0x9964: 0x56D8,\n                0x9965: 0x518C,\n                0x9966: 0x5189,\n                0x9967: 0x518F,\n                0x9968: 0x5191,\n                0x9969: 0x5193,\n                0x996A: 0x5195,\n                0x996B: 0x5196,\n                0x996C: 0x51A4,\n                0x996D: 0x51A6,\n                0x996E: 0x51A2,\n                0x996F: 0x51A9,\n                0x9970: 0x51AA,\n                0x9971: 0x51AB,\n                0x9972: 0x51B3,\n                0x9973: 0x51B1,\n                0x9974: 0x51B2,\n                0x9975: 0x51B0,\n                0x9976: 0x51B5,\n                0x9977: 0x51BD,\n                0x9978: 0x51C5,\n                0x9979: 0x51C9,\n                0x997A: 0x51DB,\n                0x997B: 0x51E0,\n                0x997C: 0x8655,\n                0x997D: 0x51E9,\n                0x997E: 0x51ED,\n                0x9980: 0x51F0,\n                0x9981: 0x51F5,\n                0x9982: 0x51FE,\n                0x9983: 0x5204,\n                0x9984: 0x520B,\n                0x9985: 0x5214,\n                0x9986: 0x520E,\n                0x9987: 0x5227,\n                0x9988: 0x522A,\n                0x9989: 0x522E,\n                0x998A: 0x5233,\n                0x998B: 0x5239,\n                0x998C: 0x524F,\n                0x998D: 0x5244,\n                0x998E: 0x524B,\n                0x998F: 0x524C,\n                0x9990: 0x525E,\n                0x9991: 0x5254,\n                0x9992: 0x526A,\n                0x9993: 0x5274,\n                0x9994: 0x5269,\n                0x9995: 0x5273,\n                0x9996: 0x527F,\n                0x9997: 0x527D,\n                0x9998: 0x528D,\n                0x9999: 0x5294,\n                0x999A: 0x5292,\n                0x999B: 0x5271,\n                0x999C: 0x5288,\n                0x999D: 0x5291,\n                0x999E: 0x8FA8,\n                0x999F: 0x8FA7,\n                0x99A0: 0x52AC,\n                0x99A1: 0x52AD,\n                0x99A2: 0x52BC,\n                0x99A3: 0x52B5,\n                0x99A4: 0x52C1,\n                0x99A5: 0x52CD,\n                0x99A6: 0x52D7,\n                0x99A7: 0x52DE,\n                0x99A8: 0x52E3,\n                0x99A9: 0x52E6,\n                0x99AA: 0x98ED,\n                0x99AB: 0x52E0,\n                0x99AC: 0x52F3,\n                0x99AD: 0x52F5,\n                0x99AE: 0x52F8,\n                0x99AF: 0x52F9,\n                0x99B0: 0x5306,\n                0x99B1: 0x5308,\n                0x99B2: 0x7538,\n                0x99B3: 0x530D,\n                0x99B4: 0x5310,\n                0x99B5: 0x530F,\n                0x99B6: 0x5315,\n                0x99B7: 0x531A,\n                0x99B8: 0x5323,\n                0x99B9: 0x532F,\n                0x99BA: 0x5331,\n                0x99BB: 0x5333,\n                0x99BC: 0x5338,\n                0x99BD: 0x5340,\n                0x99BE: 0x5346,\n                0x99BF: 0x5345,\n                0x99C0: 0x4E17,\n                0x99C1: 0x5349,\n                0x99C2: 0x534D,\n                0x99C3: 0x51D6,\n                0x99C4: 0x535E,\n                0x99C5: 0x5369,\n                0x99C6: 0x536E,\n                0x99C7: 0x5918,\n                0x99C8: 0x537B,\n                0x99C9: 0x5377,\n                0x99CA: 0x5382,\n                0x99CB: 0x5396,\n                0x99CC: 0x53A0,\n                0x99CD: 0x53A6,\n                0x99CE: 0x53A5,\n                0x99CF: 0x53AE,\n                0x99D0: 0x53B0,\n                0x99D1: 0x53B6,\n                0x99D2: 0x53C3,\n                0x99D3: 0x7C12,\n                0x99D4: 0x96D9,\n                0x99D5: 0x53DF,\n                0x99D6: 0x66FC,\n                0x99D7: 0x71EE,\n                0x99D8: 0x53EE,\n                0x99D9: 0x53E8,\n                0x99DA: 0x53ED,\n                0x99DB: 0x53FA,\n                0x99DC: 0x5401,\n                0x99DD: 0x543D,\n                0x99DE: 0x5440,\n                0x99DF: 0x542C,\n                0x99E0: 0x542D,\n                0x99E1: 0x543C,\n                0x99E2: 0x542E,\n                0x99E3: 0x5436,\n                0x99E4: 0x5429,\n                0x99E5: 0x541D,\n                0x99E6: 0x544E,\n                0x99E7: 0x548F,\n                0x99E8: 0x5475,\n                0x99E9: 0x548E,\n                0x99EA: 0x545F,\n                0x99EB: 0x5471,\n                0x99EC: 0x5477,\n                0x99ED: 0x5470,\n                0x99EE: 0x5492,\n                0x99EF: 0x547B,\n                0x99F0: 0x5480,\n                0x99F1: 0x5476,\n                0x99F2: 0x5484,\n                0x99F3: 0x5490,\n                0x99F4: 0x5486,\n                0x99F5: 0x54C7,\n                0x99F6: 0x54A2,\n                0x99F7: 0x54B8,\n                0x99F8: 0x54A5,\n                0x99F9: 0x54AC,\n                0x99FA: 0x54C4,\n                0x99FB: 0x54C8,\n                0x99FC: 0x54A8,\n                0x9A40: 0x54AB,\n                0x9A41: 0x54C2,\n                0x9A42: 0x54A4,\n                0x9A43: 0x54BE,\n                0x9A44: 0x54BC,\n                0x9A45: 0x54D8,\n                0x9A46: 0x54E5,\n                0x9A47: 0x54E6,\n                0x9A48: 0x550F,\n                0x9A49: 0x5514,\n                0x9A4A: 0x54FD,\n                0x9A4B: 0x54EE,\n                0x9A4C: 0x54ED,\n                0x9A4D: 0x54FA,\n                0x9A4E: 0x54E2,\n                0x9A4F: 0x5539,\n                0x9A50: 0x5540,\n                0x9A51: 0x5563,\n                0x9A52: 0x554C,\n                0x9A53: 0x552E,\n                0x9A54: 0x555C,\n                0x9A55: 0x5545,\n                0x9A56: 0x5556,\n                0x9A57: 0x5557,\n                0x9A58: 0x5538,\n                0x9A59: 0x5533,\n                0x9A5A: 0x555D,\n                0x9A5B: 0x5599,\n                0x9A5C: 0x5580,\n                0x9A5D: 0x54AF,\n                0x9A5E: 0x558A,\n                0x9A5F: 0x559F,\n                0x9A60: 0x557B,\n                0x9A61: 0x557E,\n                0x9A62: 0x5598,\n                0x9A63: 0x559E,\n                0x9A64: 0x55AE,\n                0x9A65: 0x557C,\n                0x9A66: 0x5583,\n                0x9A67: 0x55A9,\n                0x9A68: 0x5587,\n                0x9A69: 0x55A8,\n                0x9A6A: 0x55DA,\n                0x9A6B: 0x55C5,\n                0x9A6C: 0x55DF,\n                0x9A6D: 0x55C4,\n                0x9A6E: 0x55DC,\n                0x9A6F: 0x55E4,\n                0x9A70: 0x55D4,\n                0x9A71: 0x5614,\n                0x9A72: 0x55F7,\n                0x9A73: 0x5616,\n                0x9A74: 0x55FE,\n                0x9A75: 0x55FD,\n                0x9A76: 0x561B,\n                0x9A77: 0x55F9,\n                0x9A78: 0x564E,\n                0x9A79: 0x5650,\n                0x9A7A: 0x71DF,\n                0x9A7B: 0x5634,\n                0x9A7C: 0x5636,\n                0x9A7D: 0x5632,\n                0x9A7E: 0x5638,\n                0x9A80: 0x566B,\n                0x9A81: 0x5664,\n                0x9A82: 0x562F,\n                0x9A83: 0x566C,\n                0x9A84: 0x566A,\n                0x9A85: 0x5686,\n                0x9A86: 0x5680,\n                0x9A87: 0x568A,\n                0x9A88: 0x56A0,\n                0x9A89: 0x5694,\n                0x9A8A: 0x568F,\n                0x9A8B: 0x56A5,\n                0x9A8C: 0x56AE,\n                0x9A8D: 0x56B6,\n                0x9A8E: 0x56B4,\n                0x9A8F: 0x56C2,\n                0x9A90: 0x56BC,\n                0x9A91: 0x56C1,\n                0x9A92: 0x56C3,\n                0x9A93: 0x56C0,\n                0x9A94: 0x56C8,\n                0x9A95: 0x56CE,\n                0x9A96: 0x56D1,\n                0x9A97: 0x56D3,\n                0x9A98: 0x56D7,\n                0x9A99: 0x56EE,\n                0x9A9A: 0x56F9,\n                0x9A9B: 0x5700,\n                0x9A9C: 0x56FF,\n                0x9A9D: 0x5704,\n                0x9A9E: 0x5709,\n                0x9A9F: 0x5708,\n                0x9AA0: 0x570B,\n                0x9AA1: 0x570D,\n                0x9AA2: 0x5713,\n                0x9AA3: 0x5718,\n                0x9AA4: 0x5716,\n                0x9AA5: 0x55C7,\n                0x9AA6: 0x571C,\n                0x9AA7: 0x5726,\n                0x9AA8: 0x5737,\n                0x9AA9: 0x5738,\n                0x9AAA: 0x574E,\n                0x9AAB: 0x573B,\n                0x9AAC: 0x5740,\n                0x9AAD: 0x574F,\n                0x9AAE: 0x5769,\n                0x9AAF: 0x57C0,\n                0x9AB0: 0x5788,\n                0x9AB1: 0x5761,\n                0x9AB2: 0x577F,\n                0x9AB3: 0x5789,\n                0x9AB4: 0x5793,\n                0x9AB5: 0x57A0,\n                0x9AB6: 0x57B3,\n                0x9AB7: 0x57A4,\n                0x9AB8: 0x57AA,\n                0x9AB9: 0x57B0,\n                0x9ABA: 0x57C3,\n                0x9ABB: 0x57C6,\n                0x9ABC: 0x57D4,\n                0x9ABD: 0x57D2,\n                0x9ABE: 0x57D3,\n                0x9ABF: 0x580A,\n                0x9AC0: 0x57D6,\n                0x9AC1: 0x57E3,\n                0x9AC2: 0x580B,\n                0x9AC3: 0x5819,\n                0x9AC4: 0x581D,\n                0x9AC5: 0x5872,\n                0x9AC6: 0x5821,\n                0x9AC7: 0x5862,\n                0x9AC8: 0x584B,\n                0x9AC9: 0x5870,\n                0x9ACA: 0x6BC0,\n                0x9ACB: 0x5852,\n                0x9ACC: 0x583D,\n                0x9ACD: 0x5879,\n                0x9ACE: 0x5885,\n                0x9ACF: 0x58B9,\n                0x9AD0: 0x589F,\n                0x9AD1: 0x58AB,\n                0x9AD2: 0x58BA,\n                0x9AD3: 0x58DE,\n                0x9AD4: 0x58BB,\n                0x9AD5: 0x58B8,\n                0x9AD6: 0x58AE,\n                0x9AD7: 0x58C5,\n                0x9AD8: 0x58D3,\n                0x9AD9: 0x58D1,\n                0x9ADA: 0x58D7,\n                0x9ADB: 0x58D9,\n                0x9ADC: 0x58D8,\n                0x9ADD: 0x58E5,\n                0x9ADE: 0x58DC,\n                0x9ADF: 0x58E4,\n                0x9AE0: 0x58DF,\n                0x9AE1: 0x58EF,\n                0x9AE2: 0x58FA,\n                0x9AE3: 0x58F9,\n                0x9AE4: 0x58FB,\n                0x9AE5: 0x58FC,\n                0x9AE6: 0x58FD,\n                0x9AE7: 0x5902,\n                0x9AE8: 0x590A,\n                0x9AE9: 0x5910,\n                0x9AEA: 0x591B,\n                0x9AEB: 0x68A6,\n                0x9AEC: 0x5925,\n                0x9AED: 0x592C,\n                0x9AEE: 0x592D,\n                0x9AEF: 0x5932,\n                0x9AF0: 0x5938,\n                0x9AF1: 0x593E,\n                0x9AF2: 0x7AD2,\n                0x9AF3: 0x5955,\n                0x9AF4: 0x5950,\n                0x9AF5: 0x594E,\n                0x9AF6: 0x595A,\n                0x9AF7: 0x5958,\n                0x9AF8: 0x5962,\n                0x9AF9: 0x5960,\n                0x9AFA: 0x5967,\n                0x9AFB: 0x596C,\n                0x9AFC: 0x5969,\n                0x9B40: 0x5978,\n                0x9B41: 0x5981,\n                0x9B42: 0x599D,\n                0x9B43: 0x4F5E,\n                0x9B44: 0x4FAB,\n                0x9B45: 0x59A3,\n                0x9B46: 0x59B2,\n                0x9B47: 0x59C6,\n                0x9B48: 0x59E8,\n                0x9B49: 0x59DC,\n                0x9B4A: 0x598D,\n                0x9B4B: 0x59D9,\n                0x9B4C: 0x59DA,\n                0x9B4D: 0x5A25,\n                0x9B4E: 0x5A1F,\n                0x9B4F: 0x5A11,\n                0x9B50: 0x5A1C,\n                0x9B51: 0x5A09,\n                0x9B52: 0x5A1A,\n                0x9B53: 0x5A40,\n                0x9B54: 0x5A6C,\n                0x9B55: 0x5A49,\n                0x9B56: 0x5A35,\n                0x9B57: 0x5A36,\n                0x9B58: 0x5A62,\n                0x9B59: 0x5A6A,\n                0x9B5A: 0x5A9A,\n                0x9B5B: 0x5ABC,\n                0x9B5C: 0x5ABE,\n                0x9B5D: 0x5ACB,\n                0x9B5E: 0x5AC2,\n                0x9B5F: 0x5ABD,\n                0x9B60: 0x5AE3,\n                0x9B61: 0x5AD7,\n                0x9B62: 0x5AE6,\n                0x9B63: 0x5AE9,\n                0x9B64: 0x5AD6,\n                0x9B65: 0x5AFA,\n                0x9B66: 0x5AFB,\n                0x9B67: 0x5B0C,\n                0x9B68: 0x5B0B,\n                0x9B69: 0x5B16,\n                0x9B6A: 0x5B32,\n                0x9B6B: 0x5AD0,\n                0x9B6C: 0x5B2A,\n                0x9B6D: 0x5B36,\n                0x9B6E: 0x5B3E,\n                0x9B6F: 0x5B43,\n                0x9B70: 0x5B45,\n                0x9B71: 0x5B40,\n                0x9B72: 0x5B51,\n                0x9B73: 0x5B55,\n                0x9B74: 0x5B5A,\n                0x9B75: 0x5B5B,\n                0x9B76: 0x5B65,\n                0x9B77: 0x5B69,\n                0x9B78: 0x5B70,\n                0x9B79: 0x5B73,\n                0x9B7A: 0x5B75,\n                0x9B7B: 0x5B78,\n                0x9B7C: 0x6588,\n                0x9B7D: 0x5B7A,\n                0x9B7E: 0x5B80,\n                0x9B80: 0x5B83,\n                0x9B81: 0x5BA6,\n                0x9B82: 0x5BB8,\n                0x9B83: 0x5BC3,\n                0x9B84: 0x5BC7,\n                0x9B85: 0x5BC9,\n                0x9B86: 0x5BD4,\n                0x9B87: 0x5BD0,\n                0x9B88: 0x5BE4,\n                0x9B89: 0x5BE6,\n                0x9B8A: 0x5BE2,\n                0x9B8B: 0x5BDE,\n                0x9B8C: 0x5BE5,\n                0x9B8D: 0x5BEB,\n                0x9B8E: 0x5BF0,\n                0x9B8F: 0x5BF6,\n                0x9B90: 0x5BF3,\n                0x9B91: 0x5C05,\n                0x9B92: 0x5C07,\n                0x9B93: 0x5C08,\n                0x9B94: 0x5C0D,\n                0x9B95: 0x5C13,\n                0x9B96: 0x5C20,\n                0x9B97: 0x5C22,\n                0x9B98: 0x5C28,\n                0x9B99: 0x5C38,\n                0x9B9A: 0x5C39,\n                0x9B9B: 0x5C41,\n                0x9B9C: 0x5C46,\n                0x9B9D: 0x5C4E,\n                0x9B9E: 0x5C53,\n                0x9B9F: 0x5C50,\n                0x9BA0: 0x5C4F,\n                0x9BA1: 0x5B71,\n                0x9BA2: 0x5C6C,\n                0x9BA3: 0x5C6E,\n                0x9BA4: 0x4E62,\n                0x9BA5: 0x5C76,\n                0x9BA6: 0x5C79,\n                0x9BA7: 0x5C8C,\n                0x9BA8: 0x5C91,\n                0x9BA9: 0x5C94,\n                0x9BAA: 0x599B,\n                0x9BAB: 0x5CAB,\n                0x9BAC: 0x5CBB,\n                0x9BAD: 0x5CB6,\n                0x9BAE: 0x5CBC,\n                0x9BAF: 0x5CB7,\n                0x9BB0: 0x5CC5,\n                0x9BB1: 0x5CBE,\n                0x9BB2: 0x5CC7,\n                0x9BB3: 0x5CD9,\n                0x9BB4: 0x5CE9,\n                0x9BB5: 0x5CFD,\n                0x9BB6: 0x5CFA,\n                0x9BB7: 0x5CED,\n                0x9BB8: 0x5D8C,\n                0x9BB9: 0x5CEA,\n                0x9BBA: 0x5D0B,\n                0x9BBB: 0x5D15,\n                0x9BBC: 0x5D17,\n                0x9BBD: 0x5D5C,\n                0x9BBE: 0x5D1F,\n                0x9BBF: 0x5D1B,\n                0x9BC0: 0x5D11,\n                0x9BC1: 0x5D14,\n                0x9BC2: 0x5D22,\n                0x9BC3: 0x5D1A,\n                0x9BC4: 0x5D19,\n                0x9BC5: 0x5D18,\n                0x9BC6: 0x5D4C,\n                0x9BC7: 0x5D52,\n                0x9BC8: 0x5D4E,\n                0x9BC9: 0x5D4B,\n                0x9BCA: 0x5D6C,\n                0x9BCB: 0x5D73,\n                0x9BCC: 0x5D76,\n                0x9BCD: 0x5D87,\n                0x9BCE: 0x5D84,\n                0x9BCF: 0x5D82,\n                0x9BD0: 0x5DA2,\n                0x9BD1: 0x5D9D,\n                0x9BD2: 0x5DAC,\n                0x9BD3: 0x5DAE,\n                0x9BD4: 0x5DBD,\n                0x9BD5: 0x5D90,\n                0x9BD6: 0x5DB7,\n                0x9BD7: 0x5DBC,\n                0x9BD8: 0x5DC9,\n                0x9BD9: 0x5DCD,\n                0x9BDA: 0x5DD3,\n                0x9BDB: 0x5DD2,\n                0x9BDC: 0x5DD6,\n                0x9BDD: 0x5DDB,\n                0x9BDE: 0x5DEB,\n                0x9BDF: 0x5DF2,\n                0x9BE0: 0x5DF5,\n                0x9BE1: 0x5E0B,\n                0x9BE2: 0x5E1A,\n                0x9BE3: 0x5E19,\n                0x9BE4: 0x5E11,\n                0x9BE5: 0x5E1B,\n                0x9BE6: 0x5E36,\n                0x9BE7: 0x5E37,\n                0x9BE8: 0x5E44,\n                0x9BE9: 0x5E43,\n                0x9BEA: 0x5E40,\n                0x9BEB: 0x5E4E,\n                0x9BEC: 0x5E57,\n                0x9BED: 0x5E54,\n                0x9BEE: 0x5E5F,\n                0x9BEF: 0x5E62,\n                0x9BF0: 0x5E64,\n                0x9BF1: 0x5E47,\n                0x9BF2: 0x5E75,\n                0x9BF3: 0x5E76,\n                0x9BF4: 0x5E7A,\n                0x9BF5: 0x9EBC,\n                0x9BF6: 0x5E7F,\n                0x9BF7: 0x5EA0,\n                0x9BF8: 0x5EC1,\n                0x9BF9: 0x5EC2,\n                0x9BFA: 0x5EC8,\n                0x9BFB: 0x5ED0,\n                0x9BFC: 0x5ECF,\n                0x9C40: 0x5ED6,\n                0x9C41: 0x5EE3,\n                0x9C42: 0x5EDD,\n                0x9C43: 0x5EDA,\n                0x9C44: 0x5EDB,\n                0x9C45: 0x5EE2,\n                0x9C46: 0x5EE1,\n                0x9C47: 0x5EE8,\n                0x9C48: 0x5EE9,\n                0x9C49: 0x5EEC,\n                0x9C4A: 0x5EF1,\n                0x9C4B: 0x5EF3,\n                0x9C4C: 0x5EF0,\n                0x9C4D: 0x5EF4,\n                0x9C4E: 0x5EF8,\n                0x9C4F: 0x5EFE,\n                0x9C50: 0x5F03,\n                0x9C51: 0x5F09,\n                0x9C52: 0x5F5D,\n                0x9C53: 0x5F5C,\n                0x9C54: 0x5F0B,\n                0x9C55: 0x5F11,\n                0x9C56: 0x5F16,\n                0x9C57: 0x5F29,\n                0x9C58: 0x5F2D,\n                0x9C59: 0x5F38,\n                0x9C5A: 0x5F41,\n                0x9C5B: 0x5F48,\n                0x9C5C: 0x5F4C,\n                0x9C5D: 0x5F4E,\n                0x9C5E: 0x5F2F,\n                0x9C5F: 0x5F51,\n                0x9C60: 0x5F56,\n                0x9C61: 0x5F57,\n                0x9C62: 0x5F59,\n                0x9C63: 0x5F61,\n                0x9C64: 0x5F6D,\n                0x9C65: 0x5F73,\n                0x9C66: 0x5F77,\n                0x9C67: 0x5F83,\n                0x9C68: 0x5F82,\n                0x9C69: 0x5F7F,\n                0x9C6A: 0x5F8A,\n                0x9C6B: 0x5F88,\n                0x9C6C: 0x5F91,\n                0x9C6D: 0x5F87,\n                0x9C6E: 0x5F9E,\n                0x9C6F: 0x5F99,\n                0x9C70: 0x5F98,\n                0x9C71: 0x5FA0,\n                0x9C72: 0x5FA8,\n                0x9C73: 0x5FAD,\n                0x9C74: 0x5FBC,\n                0x9C75: 0x5FD6,\n                0x9C76: 0x5FFB,\n                0x9C77: 0x5FE4,\n                0x9C78: 0x5FF8,\n                0x9C79: 0x5FF1,\n                0x9C7A: 0x5FDD,\n                0x9C7B: 0x60B3,\n                0x9C7C: 0x5FFF,\n                0x9C7D: 0x6021,\n                0x9C7E: 0x6060,\n                0x9C80: 0x6019,\n                0x9C81: 0x6010,\n                0x9C82: 0x6029,\n                0x9C83: 0x600E,\n                0x9C84: 0x6031,\n                0x9C85: 0x601B,\n                0x9C86: 0x6015,\n                0x9C87: 0x602B,\n                0x9C88: 0x6026,\n                0x9C89: 0x600F,\n                0x9C8A: 0x603A,\n                0x9C8B: 0x605A,\n                0x9C8C: 0x6041,\n                0x9C8D: 0x606A,\n                0x9C8E: 0x6077,\n                0x9C8F: 0x605F,\n                0x9C90: 0x604A,\n                0x9C91: 0x6046,\n                0x9C92: 0x604D,\n                0x9C93: 0x6063,\n                0x9C94: 0x6043,\n                0x9C95: 0x6064,\n                0x9C96: 0x6042,\n                0x9C97: 0x606C,\n                0x9C98: 0x606B,\n                0x9C99: 0x6059,\n                0x9C9A: 0x6081,\n                0x9C9B: 0x608D,\n                0x9C9C: 0x60E7,\n                0x9C9D: 0x6083,\n                0x9C9E: 0x609A,\n                0x9C9F: 0x6084,\n                0x9CA0: 0x609B,\n                0x9CA1: 0x6096,\n                0x9CA2: 0x6097,\n                0x9CA3: 0x6092,\n                0x9CA4: 0x60A7,\n                0x9CA5: 0x608B,\n                0x9CA6: 0x60E1,\n                0x9CA7: 0x60B8,\n                0x9CA8: 0x60E0,\n                0x9CA9: 0x60D3,\n                0x9CAA: 0x60B4,\n                0x9CAB: 0x5FF0,\n                0x9CAC: 0x60BD,\n                0x9CAD: 0x60C6,\n                0x9CAE: 0x60B5,\n                0x9CAF: 0x60D8,\n                0x9CB0: 0x614D,\n                0x9CB1: 0x6115,\n                0x9CB2: 0x6106,\n                0x9CB3: 0x60F6,\n                0x9CB4: 0x60F7,\n                0x9CB5: 0x6100,\n                0x9CB6: 0x60F4,\n                0x9CB7: 0x60FA,\n                0x9CB8: 0x6103,\n                0x9CB9: 0x6121,\n                0x9CBA: 0x60FB,\n                0x9CBB: 0x60F1,\n                0x9CBC: 0x610D,\n                0x9CBD: 0x610E,\n                0x9CBE: 0x6147,\n                0x9CBF: 0x613E,\n                0x9CC0: 0x6128,\n                0x9CC1: 0x6127,\n                0x9CC2: 0x614A,\n                0x9CC3: 0x613F,\n                0x9CC4: 0x613C,\n                0x9CC5: 0x612C,\n                0x9CC6: 0x6134,\n                0x9CC7: 0x613D,\n                0x9CC8: 0x6142,\n                0x9CC9: 0x6144,\n                0x9CCA: 0x6173,\n                0x9CCB: 0x6177,\n                0x9CCC: 0x6158,\n                0x9CCD: 0x6159,\n                0x9CCE: 0x615A,\n                0x9CCF: 0x616B,\n                0x9CD0: 0x6174,\n                0x9CD1: 0x616F,\n                0x9CD2: 0x6165,\n                0x9CD3: 0x6171,\n                0x9CD4: 0x615F,\n                0x9CD5: 0x615D,\n                0x9CD6: 0x6153,\n                0x9CD7: 0x6175,\n                0x9CD8: 0x6199,\n                0x9CD9: 0x6196,\n                0x9CDA: 0x6187,\n                0x9CDB: 0x61AC,\n                0x9CDC: 0x6194,\n                0x9CDD: 0x619A,\n                0x9CDE: 0x618A,\n                0x9CDF: 0x6191,\n                0x9CE0: 0x61AB,\n                0x9CE1: 0x61AE,\n                0x9CE2: 0x61CC,\n                0x9CE3: 0x61CA,\n                0x9CE4: 0x61C9,\n                0x9CE5: 0x61F7,\n                0x9CE6: 0x61C8,\n                0x9CE7: 0x61C3,\n                0x9CE8: 0x61C6,\n                0x9CE9: 0x61BA,\n                0x9CEA: 0x61CB,\n                0x9CEB: 0x7F79,\n                0x9CEC: 0x61CD,\n                0x9CED: 0x61E6,\n                0x9CEE: 0x61E3,\n                0x9CEF: 0x61F6,\n                0x9CF0: 0x61FA,\n                0x9CF1: 0x61F4,\n                0x9CF2: 0x61FF,\n                0x9CF3: 0x61FD,\n                0x9CF4: 0x61FC,\n                0x9CF5: 0x61FE,\n                0x9CF6: 0x6200,\n                0x9CF7: 0x6208,\n                0x9CF8: 0x6209,\n                0x9CF9: 0x620D,\n                0x9CFA: 0x620C,\n                0x9CFB: 0x6214,\n                0x9CFC: 0x621B,\n                0x9D40: 0x621E,\n                0x9D41: 0x6221,\n                0x9D42: 0x622A,\n                0x9D43: 0x622E,\n                0x9D44: 0x6230,\n                0x9D45: 0x6232,\n                0x9D46: 0x6233,\n                0x9D47: 0x6241,\n                0x9D48: 0x624E,\n                0x9D49: 0x625E,\n                0x9D4A: 0x6263,\n                0x9D4B: 0x625B,\n                0x9D4C: 0x6260,\n                0x9D4D: 0x6268,\n                0x9D4E: 0x627C,\n                0x9D4F: 0x6282,\n                0x9D50: 0x6289,\n                0x9D51: 0x627E,\n                0x9D52: 0x6292,\n                0x9D53: 0x6293,\n                0x9D54: 0x6296,\n                0x9D55: 0x62D4,\n                0x9D56: 0x6283,\n                0x9D57: 0x6294,\n                0x9D58: 0x62D7,\n                0x9D59: 0x62D1,\n                0x9D5A: 0x62BB,\n                0x9D5B: 0x62CF,\n                0x9D5C: 0x62FF,\n                0x9D5D: 0x62C6,\n                0x9D5E: 0x64D4,\n                0x9D5F: 0x62C8,\n                0x9D60: 0x62DC,\n                0x9D61: 0x62CC,\n                0x9D62: 0x62CA,\n                0x9D63: 0x62C2,\n                0x9D64: 0x62C7,\n                0x9D65: 0x629B,\n                0x9D66: 0x62C9,\n                0x9D67: 0x630C,\n                0x9D68: 0x62EE,\n                0x9D69: 0x62F1,\n                0x9D6A: 0x6327,\n                0x9D6B: 0x6302,\n                0x9D6C: 0x6308,\n                0x9D6D: 0x62EF,\n                0x9D6E: 0x62F5,\n                0x9D6F: 0x6350,\n                0x9D70: 0x633E,\n                0x9D71: 0x634D,\n                0x9D72: 0x641C,\n                0x9D73: 0x634F,\n                0x9D74: 0x6396,\n                0x9D75: 0x638E,\n                0x9D76: 0x6380,\n                0x9D77: 0x63AB,\n                0x9D78: 0x6376,\n                0x9D79: 0x63A3,\n                0x9D7A: 0x638F,\n                0x9D7B: 0x6389,\n                0x9D7C: 0x639F,\n                0x9D7D: 0x63B5,\n                0x9D7E: 0x636B,\n                0x9D80: 0x6369,\n                0x9D81: 0x63BE,\n                0x9D82: 0x63E9,\n                0x9D83: 0x63C0,\n                0x9D84: 0x63C6,\n                0x9D85: 0x63E3,\n                0x9D86: 0x63C9,\n                0x9D87: 0x63D2,\n                0x9D88: 0x63F6,\n                0x9D89: 0x63C4,\n                0x9D8A: 0x6416,\n                0x9D8B: 0x6434,\n                0x9D8C: 0x6406,\n                0x9D8D: 0x6413,\n                0x9D8E: 0x6426,\n                0x9D8F: 0x6436,\n                0x9D90: 0x651D,\n                0x9D91: 0x6417,\n                0x9D92: 0x6428,\n                0x9D93: 0x640F,\n                0x9D94: 0x6467,\n                0x9D95: 0x646F,\n                0x9D96: 0x6476,\n                0x9D97: 0x644E,\n                0x9D98: 0x652A,\n                0x9D99: 0x6495,\n                0x9D9A: 0x6493,\n                0x9D9B: 0x64A5,\n                0x9D9C: 0x64A9,\n                0x9D9D: 0x6488,\n                0x9D9E: 0x64BC,\n                0x9D9F: 0x64DA,\n                0x9DA0: 0x64D2,\n                0x9DA1: 0x64C5,\n                0x9DA2: 0x64C7,\n                0x9DA3: 0x64BB,\n                0x9DA4: 0x64D8,\n                0x9DA5: 0x64C2,\n                0x9DA6: 0x64F1,\n                0x9DA7: 0x64E7,\n                0x9DA8: 0x8209,\n                0x9DA9: 0x64E0,\n                0x9DAA: 0x64E1,\n                0x9DAB: 0x62AC,\n                0x9DAC: 0x64E3,\n                0x9DAD: 0x64EF,\n                0x9DAE: 0x652C,\n                0x9DAF: 0x64F6,\n                0x9DB0: 0x64F4,\n                0x9DB1: 0x64F2,\n                0x9DB2: 0x64FA,\n                0x9DB3: 0x6500,\n                0x9DB4: 0x64FD,\n                0x9DB5: 0x6518,\n                0x9DB6: 0x651C,\n                0x9DB7: 0x6505,\n                0x9DB8: 0x6524,\n                0x9DB9: 0x6523,\n                0x9DBA: 0x652B,\n                0x9DBB: 0x6534,\n                0x9DBC: 0x6535,\n                0x9DBD: 0x6537,\n                0x9DBE: 0x6536,\n                0x9DBF: 0x6538,\n                0x9DC0: 0x754B,\n                0x9DC1: 0x6548,\n                0x9DC2: 0x6556,\n                0x9DC3: 0x6555,\n                0x9DC4: 0x654D,\n                0x9DC5: 0x6558,\n                0x9DC6: 0x655E,\n                0x9DC7: 0x655D,\n                0x9DC8: 0x6572,\n                0x9DC9: 0x6578,\n                0x9DCA: 0x6582,\n                0x9DCB: 0x6583,\n                0x9DCC: 0x8B8A,\n                0x9DCD: 0x659B,\n                0x9DCE: 0x659F,\n                0x9DCF: 0x65AB,\n                0x9DD0: 0x65B7,\n                0x9DD1: 0x65C3,\n                0x9DD2: 0x65C6,\n                0x9DD3: 0x65C1,\n                0x9DD4: 0x65C4,\n                0x9DD5: 0x65CC,\n                0x9DD6: 0x65D2,\n                0x9DD7: 0x65DB,\n                0x9DD8: 0x65D9,\n                0x9DD9: 0x65E0,\n                0x9DDA: 0x65E1,\n                0x9DDB: 0x65F1,\n                0x9DDC: 0x6772,\n                0x9DDD: 0x660A,\n                0x9DDE: 0x6603,\n                0x9DDF: 0x65FB,\n                0x9DE0: 0x6773,\n                0x9DE1: 0x6635,\n                0x9DE2: 0x6636,\n                0x9DE3: 0x6634,\n                0x9DE4: 0x661C,\n                0x9DE5: 0x664F,\n                0x9DE6: 0x6644,\n                0x9DE7: 0x6649,\n                0x9DE8: 0x6641,\n                0x9DE9: 0x665E,\n                0x9DEA: 0x665D,\n                0x9DEB: 0x6664,\n                0x9DEC: 0x6667,\n                0x9DED: 0x6668,\n                0x9DEE: 0x665F,\n                0x9DEF: 0x6662,\n                0x9DF0: 0x6670,\n                0x9DF1: 0x6683,\n                0x9DF2: 0x6688,\n                0x9DF3: 0x668E,\n                0x9DF4: 0x6689,\n                0x9DF5: 0x6684,\n                0x9DF6: 0x6698,\n                0x9DF7: 0x669D,\n                0x9DF8: 0x66C1,\n                0x9DF9: 0x66B9,\n                0x9DFA: 0x66C9,\n                0x9DFB: 0x66BE,\n                0x9DFC: 0x66BC,\n                0x9E40: 0x66C4,\n                0x9E41: 0x66B8,\n                0x9E42: 0x66D6,\n                0x9E43: 0x66DA,\n                0x9E44: 0x66E0,\n                0x9E45: 0x663F,\n                0x9E46: 0x66E6,\n                0x9E47: 0x66E9,\n                0x9E48: 0x66F0,\n                0x9E49: 0x66F5,\n                0x9E4A: 0x66F7,\n                0x9E4B: 0x670F,\n                0x9E4C: 0x6716,\n                0x9E4D: 0x671E,\n                0x9E4E: 0x6726,\n                0x9E4F: 0x6727,\n                0x9E50: 0x9738,\n                0x9E51: 0x672E,\n                0x9E52: 0x673F,\n                0x9E53: 0x6736,\n                0x9E54: 0x6741,\n                0x9E55: 0x6738,\n                0x9E56: 0x6737,\n                0x9E57: 0x6746,\n                0x9E58: 0x675E,\n                0x9E59: 0x6760,\n                0x9E5A: 0x6759,\n                0x9E5B: 0x6763,\n                0x9E5C: 0x6764,\n                0x9E5D: 0x6789,\n                0x9E5E: 0x6770,\n                0x9E5F: 0x67A9,\n                0x9E60: 0x677C,\n                0x9E61: 0x676A,\n                0x9E62: 0x678C,\n                0x9E63: 0x678B,\n                0x9E64: 0x67A6,\n                0x9E65: 0x67A1,\n                0x9E66: 0x6785,\n                0x9E67: 0x67B7,\n                0x9E68: 0x67EF,\n                0x9E69: 0x67B4,\n                0x9E6A: 0x67EC,\n                0x9E6B: 0x67B3,\n                0x9E6C: 0x67E9,\n                0x9E6D: 0x67B8,\n                0x9E6E: 0x67E4,\n                0x9E6F: 0x67DE,\n                0x9E70: 0x67DD,\n                0x9E71: 0x67E2,\n                0x9E72: 0x67EE,\n                0x9E73: 0x67B9,\n                0x9E74: 0x67CE,\n                0x9E75: 0x67C6,\n                0x9E76: 0x67E7,\n                0x9E77: 0x6A9C,\n                0x9E78: 0x681E,\n                0x9E79: 0x6846,\n                0x9E7A: 0x6829,\n                0x9E7B: 0x6840,\n                0x9E7C: 0x684D,\n                0x9E7D: 0x6832,\n                0x9E7E: 0x684E,\n                0x9E80: 0x68B3,\n                0x9E81: 0x682B,\n                0x9E82: 0x6859,\n                0x9E83: 0x6863,\n                0x9E84: 0x6877,\n                0x9E85: 0x687F,\n                0x9E86: 0x689F,\n                0x9E87: 0x688F,\n                0x9E88: 0x68AD,\n                0x9E89: 0x6894,\n                0x9E8A: 0x689D,\n                0x9E8B: 0x689B,\n                0x9E8C: 0x6883,\n                0x9E8D: 0x6AAE,\n                0x9E8E: 0x68B9,\n                0x9E8F: 0x6874,\n                0x9E90: 0x68B5,\n                0x9E91: 0x68A0,\n                0x9E92: 0x68BA,\n                0x9E93: 0x690F,\n                0x9E94: 0x688D,\n                0x9E95: 0x687E,\n                0x9E96: 0x6901,\n                0x9E97: 0x68CA,\n                0x9E98: 0x6908,\n                0x9E99: 0x68D8,\n                0x9E9A: 0x6922,\n                0x9E9B: 0x6926,\n                0x9E9C: 0x68E1,\n                0x9E9D: 0x690C,\n                0x9E9E: 0x68CD,\n                0x9E9F: 0x68D4,\n                0x9EA0: 0x68E7,\n                0x9EA1: 0x68D5,\n                0x9EA2: 0x6936,\n                0x9EA3: 0x6912,\n                0x9EA4: 0x6904,\n                0x9EA5: 0x68D7,\n                0x9EA6: 0x68E3,\n                0x9EA7: 0x6925,\n                0x9EA8: 0x68F9,\n                0x9EA9: 0x68E0,\n                0x9EAA: 0x68EF,\n                0x9EAB: 0x6928,\n                0x9EAC: 0x692A,\n                0x9EAD: 0x691A,\n                0x9EAE: 0x6923,\n                0x9EAF: 0x6921,\n                0x9EB0: 0x68C6,\n                0x9EB1: 0x6979,\n                0x9EB2: 0x6977,\n                0x9EB3: 0x695C,\n                0x9EB4: 0x6978,\n                0x9EB5: 0x696B,\n                0x9EB6: 0x6954,\n                0x9EB7: 0x697E,\n                0x9EB8: 0x696E,\n                0x9EB9: 0x6939,\n                0x9EBA: 0x6974,\n                0x9EBB: 0x693D,\n                0x9EBC: 0x6959,\n                0x9EBD: 0x6930,\n                0x9EBE: 0x6961,\n                0x9EBF: 0x695E,\n                0x9EC0: 0x695D,\n                0x9EC1: 0x6981,\n                0x9EC2: 0x696A,\n                0x9EC3: 0x69B2,\n                0x9EC4: 0x69AE,\n                0x9EC5: 0x69D0,\n                0x9EC6: 0x69BF,\n                0x9EC7: 0x69C1,\n                0x9EC8: 0x69D3,\n                0x9EC9: 0x69BE,\n                0x9ECA: 0x69CE,\n                0x9ECB: 0x5BE8,\n                0x9ECC: 0x69CA,\n                0x9ECD: 0x69DD,\n                0x9ECE: 0x69BB,\n                0x9ECF: 0x69C3,\n                0x9ED0: 0x69A7,\n                0x9ED1: 0x6A2E,\n                0x9ED2: 0x6991,\n                0x9ED3: 0x69A0,\n                0x9ED4: 0x699C,\n                0x9ED5: 0x6995,\n                0x9ED6: 0x69B4,\n                0x9ED7: 0x69DE,\n                0x9ED8: 0x69E8,\n                0x9ED9: 0x6A02,\n                0x9EDA: 0x6A1B,\n                0x9EDB: 0x69FF,\n                0x9EDC: 0x6B0A,\n                0x9EDD: 0x69F9,\n                0x9EDE: 0x69F2,\n                0x9EDF: 0x69E7,\n                0x9EE0: 0x6A05,\n                0x9EE1: 0x69B1,\n                0x9EE2: 0x6A1E,\n                0x9EE3: 0x69ED,\n                0x9EE4: 0x6A14,\n                0x9EE5: 0x69EB,\n                0x9EE6: 0x6A0A,\n                0x9EE7: 0x6A12,\n                0x9EE8: 0x6AC1,\n                0x9EE9: 0x6A23,\n                0x9EEA: 0x6A13,\n                0x9EEB: 0x6A44,\n                0x9EEC: 0x6A0C,\n                0x9EED: 0x6A72,\n                0x9EEE: 0x6A36,\n                0x9EEF: 0x6A78,\n                0x9EF0: 0x6A47,\n                0x9EF1: 0x6A62,\n                0x9EF2: 0x6A59,\n                0x9EF3: 0x6A66,\n                0x9EF4: 0x6A48,\n                0x9EF5: 0x6A38,\n                0x9EF6: 0x6A22,\n                0x9EF7: 0x6A90,\n                0x9EF8: 0x6A8D,\n                0x9EF9: 0x6AA0,\n                0x9EFA: 0x6A84,\n                0x9EFB: 0x6AA2,\n                0x9EFC: 0x6AA3,\n                0x9F40: 0x6A97,\n                0x9F41: 0x8617,\n                0x9F42: 0x6ABB,\n                0x9F43: 0x6AC3,\n                0x9F44: 0x6AC2,\n                0x9F45: 0x6AB8,\n                0x9F46: 0x6AB3,\n                0x9F47: 0x6AAC,\n                0x9F48: 0x6ADE,\n                0x9F49: 0x6AD1,\n                0x9F4A: 0x6ADF,\n                0x9F4B: 0x6AAA,\n                0x9F4C: 0x6ADA,\n                0x9F4D: 0x6AEA,\n                0x9F4E: 0x6AFB,\n                0x9F4F: 0x6B05,\n                0x9F50: 0x8616,\n                0x9F51: 0x6AFA,\n                0x9F52: 0x6B12,\n                0x9F53: 0x6B16,\n                0x9F54: 0x9B31,\n                0x9F55: 0x6B1F,\n                0x9F56: 0x6B38,\n                0x9F57: 0x6B37,\n                0x9F58: 0x76DC,\n                0x9F59: 0x6B39,\n                0x9F5A: 0x98EE,\n                0x9F5B: 0x6B47,\n                0x9F5C: 0x6B43,\n                0x9F5D: 0x6B49,\n                0x9F5E: 0x6B50,\n                0x9F5F: 0x6B59,\n                0x9F60: 0x6B54,\n                0x9F61: 0x6B5B,\n                0x9F62: 0x6B5F,\n                0x9F63: 0x6B61,\n                0x9F64: 0x6B78,\n                0x9F65: 0x6B79,\n                0x9F66: 0x6B7F,\n                0x9F67: 0x6B80,\n                0x9F68: 0x6B84,\n                0x9F69: 0x6B83,\n                0x9F6A: 0x6B8D,\n                0x9F6B: 0x6B98,\n                0x9F6C: 0x6B95,\n                0x9F6D: 0x6B9E,\n                0x9F6E: 0x6BA4,\n                0x9F6F: 0x6BAA,\n                0x9F70: 0x6BAB,\n                0x9F71: 0x6BAF,\n                0x9F72: 0x6BB2,\n                0x9F73: 0x6BB1,\n                0x9F74: 0x6BB3,\n                0x9F75: 0x6BB7,\n                0x9F76: 0x6BBC,\n                0x9F77: 0x6BC6,\n                0x9F78: 0x6BCB,\n                0x9F79: 0x6BD3,\n                0x9F7A: 0x6BDF,\n                0x9F7B: 0x6BEC,\n                0x9F7C: 0x6BEB,\n                0x9F7D: 0x6BF3,\n                0x9F7E: 0x6BEF,\n                0x9F80: 0x9EBE,\n                0x9F81: 0x6C08,\n                0x9F82: 0x6C13,\n                0x9F83: 0x6C14,\n                0x9F84: 0x6C1B,\n                0x9F85: 0x6C24,\n                0x9F86: 0x6C23,\n                0x9F87: 0x6C5E,\n                0x9F88: 0x6C55,\n                0x9F89: 0x6C62,\n                0x9F8A: 0x6C6A,\n                0x9F8B: 0x6C82,\n                0x9F8C: 0x6C8D,\n                0x9F8D: 0x6C9A,\n                0x9F8E: 0x6C81,\n                0x9F8F: 0x6C9B,\n                0x9F90: 0x6C7E,\n                0x9F91: 0x6C68,\n                0x9F92: 0x6C73,\n                0x9F93: 0x6C92,\n                0x9F94: 0x6C90,\n                0x9F95: 0x6CC4,\n                0x9F96: 0x6CF1,\n                0x9F97: 0x6CD3,\n                0x9F98: 0x6CBD,\n                0x9F99: 0x6CD7,\n                0x9F9A: 0x6CC5,\n                0x9F9B: 0x6CDD,\n                0x9F9C: 0x6CAE,\n                0x9F9D: 0x6CB1,\n                0x9F9E: 0x6CBE,\n                0x9F9F: 0x6CBA,\n                0x9FA0: 0x6CDB,\n                0x9FA1: 0x6CEF,\n                0x9FA2: 0x6CD9,\n                0x9FA3: 0x6CEA,\n                0x9FA4: 0x6D1F,\n                0x9FA5: 0x884D,\n                0x9FA6: 0x6D36,\n                0x9FA7: 0x6D2B,\n                0x9FA8: 0x6D3D,\n                0x9FA9: 0x6D38,\n                0x9FAA: 0x6D19,\n                0x9FAB: 0x6D35,\n                0x9FAC: 0x6D33,\n                0x9FAD: 0x6D12,\n                0x9FAE: 0x6D0C,\n                0x9FAF: 0x6D63,\n                0x9FB0: 0x6D93,\n                0x9FB1: 0x6D64,\n                0x9FB2: 0x6D5A,\n                0x9FB3: 0x6D79,\n                0x9FB4: 0x6D59,\n                0x9FB5: 0x6D8E,\n                0x9FB6: 0x6D95,\n                0x9FB7: 0x6FE4,\n                0x9FB8: 0x6D85,\n                0x9FB9: 0x6DF9,\n                0x9FBA: 0x6E15,\n                0x9FBB: 0x6E0A,\n                0x9FBC: 0x6DB5,\n                0x9FBD: 0x6DC7,\n                0x9FBE: 0x6DE6,\n                0x9FBF: 0x6DB8,\n                0x9FC0: 0x6DC6,\n                0x9FC1: 0x6DEC,\n                0x9FC2: 0x6DDE,\n                0x9FC3: 0x6DCC,\n                0x9FC4: 0x6DE8,\n                0x9FC5: 0x6DD2,\n                0x9FC6: 0x6DC5,\n                0x9FC7: 0x6DFA,\n                0x9FC8: 0x6DD9,\n                0x9FC9: 0x6DE4,\n                0x9FCA: 0x6DD5,\n                0x9FCB: 0x6DEA,\n                0x9FCC: 0x6DEE,\n                0x9FCD: 0x6E2D,\n                0x9FCE: 0x6E6E,\n                0x9FCF: 0x6E2E,\n                0x9FD0: 0x6E19,\n                0x9FD1: 0x6E72,\n                0x9FD2: 0x6E5F,\n                0x9FD3: 0x6E3E,\n                0x9FD4: 0x6E23,\n                0x9FD5: 0x6E6B,\n                0x9FD6: 0x6E2B,\n                0x9FD7: 0x6E76,\n                0x9FD8: 0x6E4D,\n                0x9FD9: 0x6E1F,\n                0x9FDA: 0x6E43,\n                0x9FDB: 0x6E3A,\n                0x9FDC: 0x6E4E,\n                0x9FDD: 0x6E24,\n                0x9FDE: 0x6EFF,\n                0x9FDF: 0x6E1D,\n                0x9FE0: 0x6E38,\n                0x9FE1: 0x6E82,\n                0x9FE2: 0x6EAA,\n                0x9FE3: 0x6E98,\n                0x9FE4: 0x6EC9,\n                0x9FE5: 0x6EB7,\n                0x9FE6: 0x6ED3,\n                0x9FE7: 0x6EBD,\n                0x9FE8: 0x6EAF,\n                0x9FE9: 0x6EC4,\n                0x9FEA: 0x6EB2,\n                0x9FEB: 0x6ED4,\n                0x9FEC: 0x6ED5,\n                0x9FED: 0x6E8F,\n                0x9FEE: 0x6EA5,\n                0x9FEF: 0x6EC2,\n                0x9FF0: 0x6E9F,\n                0x9FF1: 0x6F41,\n                0x9FF2: 0x6F11,\n                0x9FF3: 0x704C,\n                0x9FF4: 0x6EEC,\n                0x9FF5: 0x6EF8,\n                0x9FF6: 0x6EFE,\n                0x9FF7: 0x6F3F,\n                0x9FF8: 0x6EF2,\n                0x9FF9: 0x6F31,\n                0x9FFA: 0x6EEF,\n                0x9FFB: 0x6F32,\n                0x9FFC: 0x6ECC,\n                0xA1: 0xFF61,\n                0xA2: 0xFF62,\n                0xA3: 0xFF63,\n                0xA4: 0xFF64,\n                0xA5: 0xFF65,\n                0xA6: 0xFF66,\n                0xA7: 0xFF67,\n                0xA8: 0xFF68,\n                0xA9: 0xFF69,\n                0xAA: 0xFF6A,\n                0xAB: 0xFF6B,\n                0xAC: 0xFF6C,\n                0xAD: 0xFF6D,\n                0xAE: 0xFF6E,\n                0xAF: 0xFF6F,\n                0xB0: 0xFF70,\n                0xB1: 0xFF71,\n                0xB2: 0xFF72,\n                0xB3: 0xFF73,\n                0xB4: 0xFF74,\n                0xB5: 0xFF75,\n                0xB6: 0xFF76,\n                0xB7: 0xFF77,\n                0xB8: 0xFF78,\n                0xB9: 0xFF79,\n                0xBA: 0xFF7A,\n                0xBB: 0xFF7B,\n                0xBC: 0xFF7C,\n                0xBD: 0xFF7D,\n                0xBE: 0xFF7E,\n                0xBF: 0xFF7F,\n                0xC0: 0xFF80,\n                0xC1: 0xFF81,\n                0xC2: 0xFF82,\n                0xC3: 0xFF83,\n                0xC4: 0xFF84,\n                0xC5: 0xFF85,\n                0xC6: 0xFF86,\n                0xC7: 0xFF87,\n                0xC8: 0xFF88,\n                0xC9: 0xFF89,\n                0xCA: 0xFF8A,\n                0xCB: 0xFF8B,\n                0xCC: 0xFF8C,\n                0xCD: 0xFF8D,\n                0xCE: 0xFF8E,\n                0xCF: 0xFF8F,\n                0xD0: 0xFF90,\n                0xD1: 0xFF91,\n                0xD2: 0xFF92,\n                0xD3: 0xFF93,\n                0xD4: 0xFF94,\n                0xD5: 0xFF95,\n                0xD6: 0xFF96,\n                0xD7: 0xFF97,\n                0xD8: 0xFF98,\n                0xD9: 0xFF99,\n                0xDA: 0xFF9A,\n                0xDB: 0xFF9B,\n                0xDC: 0xFF9C,\n                0xDD: 0xFF9D,\n                0xDE: 0xFF9E,\n                0xDF: 0xFF9F,\n                0xE040: 0x6F3E,\n                0xE041: 0x6F13,\n                0xE042: 0x6EF7,\n                0xE043: 0x6F86,\n                0xE044: 0x6F7A,\n                0xE045: 0x6F78,\n                0xE046: 0x6F81,\n                0xE047: 0x6F80,\n                0xE048: 0x6F6F,\n                0xE049: 0x6F5B,\n                0xE04A: 0x6FF3,\n                0xE04B: 0x6F6D,\n                0xE04C: 0x6F82,\n                0xE04D: 0x6F7C,\n                0xE04E: 0x6F58,\n                0xE04F: 0x6F8E,\n                0xE050: 0x6F91,\n                0xE051: 0x6FC2,\n                0xE052: 0x6F66,\n                0xE053: 0x6FB3,\n                0xE054: 0x6FA3,\n                0xE055: 0x6FA1,\n                0xE056: 0x6FA4,\n                0xE057: 0x6FB9,\n                0xE058: 0x6FC6,\n                0xE059: 0x6FAA,\n                0xE05A: 0x6FDF,\n                0xE05B: 0x6FD5,\n                0xE05C: 0x6FEC,\n                0xE05D: 0x6FD4,\n                0xE05E: 0x6FD8,\n                0xE05F: 0x6FF1,\n                0xE060: 0x6FEE,\n                0xE061: 0x6FDB,\n                0xE062: 0x7009,\n                0xE063: 0x700B,\n                0xE064: 0x6FFA,\n                0xE065: 0x7011,\n                0xE066: 0x7001,\n                0xE067: 0x700F,\n                0xE068: 0x6FFE,\n                0xE069: 0x701B,\n                0xE06A: 0x701A,\n                0xE06B: 0x6F74,\n                0xE06C: 0x701D,\n                0xE06D: 0x7018,\n                0xE06E: 0x701F,\n                0xE06F: 0x7030,\n                0xE070: 0x703E,\n                0xE071: 0x7032,\n                0xE072: 0x7051,\n                0xE073: 0x7063,\n                0xE074: 0x7099,\n                0xE075: 0x7092,\n                0xE076: 0x70AF,\n                0xE077: 0x70F1,\n                0xE078: 0x70AC,\n                0xE079: 0x70B8,\n                0xE07A: 0x70B3,\n                0xE07B: 0x70AE,\n                0xE07C: 0x70DF,\n                0xE07D: 0x70CB,\n                0xE07E: 0x70DD,\n                0xE080: 0x70D9,\n                0xE081: 0x7109,\n                0xE082: 0x70FD,\n                0xE083: 0x711C,\n                0xE084: 0x7119,\n                0xE085: 0x7165,\n                0xE086: 0x7155,\n                0xE087: 0x7188,\n                0xE088: 0x7166,\n                0xE089: 0x7162,\n                0xE08A: 0x714C,\n                0xE08B: 0x7156,\n                0xE08C: 0x716C,\n                0xE08D: 0x718F,\n                0xE08E: 0x71FB,\n                0xE08F: 0x7184,\n                0xE090: 0x7195,\n                0xE091: 0x71A8,\n                0xE092: 0x71AC,\n                0xE093: 0x71D7,\n                0xE094: 0x71B9,\n                0xE095: 0x71BE,\n                0xE096: 0x71D2,\n                0xE097: 0x71C9,\n                0xE098: 0x71D4,\n                0xE099: 0x71CE,\n                0xE09A: 0x71E0,\n                0xE09B: 0x71EC,\n                0xE09C: 0x71E7,\n                0xE09D: 0x71F5,\n                0xE09E: 0x71FC,\n                0xE09F: 0x71F9,\n                0xE0A0: 0x71FF,\n                0xE0A1: 0x720D,\n                0xE0A2: 0x7210,\n                0xE0A3: 0x721B,\n                0xE0A4: 0x7228,\n                0xE0A5: 0x722D,\n                0xE0A6: 0x722C,\n                0xE0A7: 0x7230,\n                0xE0A8: 0x7232,\n                0xE0A9: 0x723B,\n                0xE0AA: 0x723C,\n                0xE0AB: 0x723F,\n                0xE0AC: 0x7240,\n                0xE0AD: 0x7246,\n                0xE0AE: 0x724B,\n                0xE0AF: 0x7258,\n                0xE0B0: 0x7274,\n                0xE0B1: 0x727E,\n                0xE0B2: 0x7282,\n                0xE0B3: 0x7281,\n                0xE0B4: 0x7287,\n                0xE0B5: 0x7292,\n                0xE0B6: 0x7296,\n                0xE0B7: 0x72A2,\n                0xE0B8: 0x72A7,\n                0xE0B9: 0x72B9,\n                0xE0BA: 0x72B2,\n                0xE0BB: 0x72C3,\n                0xE0BC: 0x72C6,\n                0xE0BD: 0x72C4,\n                0xE0BE: 0x72CE,\n                0xE0BF: 0x72D2,\n                0xE0C0: 0x72E2,\n                0xE0C1: 0x72E0,\n                0xE0C2: 0x72E1,\n                0xE0C3: 0x72F9,\n                0xE0C4: 0x72F7,\n                0xE0C5: 0x500F,\n                0xE0C6: 0x7317,\n                0xE0C7: 0x730A,\n                0xE0C8: 0x731C,\n                0xE0C9: 0x7316,\n                0xE0CA: 0x731D,\n                0xE0CB: 0x7334,\n                0xE0CC: 0x732F,\n                0xE0CD: 0x7329,\n                0xE0CE: 0x7325,\n                0xE0CF: 0x733E,\n                0xE0D0: 0x734E,\n                0xE0D1: 0x734F,\n                0xE0D2: 0x9ED8,\n                0xE0D3: 0x7357,\n                0xE0D4: 0x736A,\n                0xE0D5: 0x7368,\n                0xE0D6: 0x7370,\n                0xE0D7: 0x7378,\n                0xE0D8: 0x7375,\n                0xE0D9: 0x737B,\n                0xE0DA: 0x737A,\n                0xE0DB: 0x73C8,\n                0xE0DC: 0x73B3,\n                0xE0DD: 0x73CE,\n                0xE0DE: 0x73BB,\n                0xE0DF: 0x73C0,\n                0xE0E0: 0x73E5,\n                0xE0E1: 0x73EE,\n                0xE0E2: 0x73DE,\n                0xE0E3: 0x74A2,\n                0xE0E4: 0x7405,\n                0xE0E5: 0x746F,\n                0xE0E6: 0x7425,\n                0xE0E7: 0x73F8,\n                0xE0E8: 0x7432,\n                0xE0E9: 0x743A,\n                0xE0EA: 0x7455,\n                0xE0EB: 0x743F,\n                0xE0EC: 0x745F,\n                0xE0ED: 0x7459,\n                0xE0EE: 0x7441,\n                0xE0EF: 0x745C,\n                0xE0F0: 0x7469,\n                0xE0F1: 0x7470,\n                0xE0F2: 0x7463,\n                0xE0F3: 0x746A,\n                0xE0F4: 0x7476,\n                0xE0F5: 0x747E,\n                0xE0F6: 0x748B,\n                0xE0F7: 0x749E,\n                0xE0F8: 0x74A7,\n                0xE0F9: 0x74CA,\n                0xE0FA: 0x74CF,\n                0xE0FB: 0x74D4,\n                0xE0FC: 0x73F1,\n                0xE140: 0x74E0,\n                0xE141: 0x74E3,\n                0xE142: 0x74E7,\n                0xE143: 0x74E9,\n                0xE144: 0x74EE,\n                0xE145: 0x74F2,\n                0xE146: 0x74F0,\n                0xE147: 0x74F1,\n                0xE148: 0x74F8,\n                0xE149: 0x74F7,\n                0xE14A: 0x7504,\n                0xE14B: 0x7503,\n                0xE14C: 0x7505,\n                0xE14D: 0x750C,\n                0xE14E: 0x750E,\n                0xE14F: 0x750D,\n                0xE150: 0x7515,\n                0xE151: 0x7513,\n                0xE152: 0x751E,\n                0xE153: 0x7526,\n                0xE154: 0x752C,\n                0xE155: 0x753C,\n                0xE156: 0x7544,\n                0xE157: 0x754D,\n                0xE158: 0x754A,\n                0xE159: 0x7549,\n                0xE15A: 0x755B,\n                0xE15B: 0x7546,\n                0xE15C: 0x755A,\n                0xE15D: 0x7569,\n                0xE15E: 0x7564,\n                0xE15F: 0x7567,\n                0xE160: 0x756B,\n                0xE161: 0x756D,\n                0xE162: 0x7578,\n                0xE163: 0x7576,\n                0xE164: 0x7586,\n                0xE165: 0x7587,\n                0xE166: 0x7574,\n                0xE167: 0x758A,\n                0xE168: 0x7589,\n                0xE169: 0x7582,\n                0xE16A: 0x7594,\n                0xE16B: 0x759A,\n                0xE16C: 0x759D,\n                0xE16D: 0x75A5,\n                0xE16E: 0x75A3,\n                0xE16F: 0x75C2,\n                0xE170: 0x75B3,\n                0xE171: 0x75C3,\n                0xE172: 0x75B5,\n                0xE173: 0x75BD,\n                0xE174: 0x75B8,\n                0xE175: 0x75BC,\n                0xE176: 0x75B1,\n                0xE177: 0x75CD,\n                0xE178: 0x75CA,\n                0xE179: 0x75D2,\n                0xE17A: 0x75D9,\n                0xE17B: 0x75E3,\n                0xE17C: 0x75DE,\n                0xE17D: 0x75FE,\n                0xE17E: 0x75FF,\n                0xE180: 0x75FC,\n                0xE181: 0x7601,\n                0xE182: 0x75F0,\n                0xE183: 0x75FA,\n                0xE184: 0x75F2,\n                0xE185: 0x75F3,\n                0xE186: 0x760B,\n                0xE187: 0x760D,\n                0xE188: 0x7609,\n                0xE189: 0x761F,\n                0xE18A: 0x7627,\n                0xE18B: 0x7620,\n                0xE18C: 0x7621,\n                0xE18D: 0x7622,\n                0xE18E: 0x7624,\n                0xE18F: 0x7634,\n                0xE190: 0x7630,\n                0xE191: 0x763B,\n                0xE192: 0x7647,\n                0xE193: 0x7648,\n                0xE194: 0x7646,\n                0xE195: 0x765C,\n                0xE196: 0x7658,\n                0xE197: 0x7661,\n                0xE198: 0x7662,\n                0xE199: 0x7668,\n                0xE19A: 0x7669,\n                0xE19B: 0x766A,\n                0xE19C: 0x7667,\n                0xE19D: 0x766C,\n                0xE19E: 0x7670,\n                0xE19F: 0x7672,\n                0xE1A0: 0x7676,\n                0xE1A1: 0x7678,\n                0xE1A2: 0x767C,\n                0xE1A3: 0x7680,\n                0xE1A4: 0x7683,\n                0xE1A5: 0x7688,\n                0xE1A6: 0x768B,\n                0xE1A7: 0x768E,\n                0xE1A8: 0x7696,\n                0xE1A9: 0x7693,\n                0xE1AA: 0x7699,\n                0xE1AB: 0x769A,\n                0xE1AC: 0x76B0,\n                0xE1AD: 0x76B4,\n                0xE1AE: 0x76B8,\n                0xE1AF: 0x76B9,\n                0xE1B0: 0x76BA,\n                0xE1B1: 0x76C2,\n                0xE1B2: 0x76CD,\n                0xE1B3: 0x76D6,\n                0xE1B4: 0x76D2,\n                0xE1B5: 0x76DE,\n                0xE1B6: 0x76E1,\n                0xE1B7: 0x76E5,\n                0xE1B8: 0x76E7,\n                0xE1B9: 0x76EA,\n                0xE1BA: 0x862F,\n                0xE1BB: 0x76FB,\n                0xE1BC: 0x7708,\n                0xE1BD: 0x7707,\n                0xE1BE: 0x7704,\n                0xE1BF: 0x7729,\n                0xE1C0: 0x7724,\n                0xE1C1: 0x771E,\n                0xE1C2: 0x7725,\n                0xE1C3: 0x7726,\n                0xE1C4: 0x771B,\n                0xE1C5: 0x7737,\n                0xE1C6: 0x7738,\n                0xE1C7: 0x7747,\n                0xE1C8: 0x775A,\n                0xE1C9: 0x7768,\n                0xE1CA: 0x776B,\n                0xE1CB: 0x775B,\n                0xE1CC: 0x7765,\n                0xE1CD: 0x777F,\n                0xE1CE: 0x777E,\n                0xE1CF: 0x7779,\n                0xE1D0: 0x778E,\n                0xE1D1: 0x778B,\n                0xE1D2: 0x7791,\n                0xE1D3: 0x77A0,\n                0xE1D4: 0x779E,\n                0xE1D5: 0x77B0,\n                0xE1D6: 0x77B6,\n                0xE1D7: 0x77B9,\n                0xE1D8: 0x77BF,\n                0xE1D9: 0x77BC,\n                0xE1DA: 0x77BD,\n                0xE1DB: 0x77BB,\n                0xE1DC: 0x77C7,\n                0xE1DD: 0x77CD,\n                0xE1DE: 0x77D7,\n                0xE1DF: 0x77DA,\n                0xE1E0: 0x77DC,\n                0xE1E1: 0x77E3,\n                0xE1E2: 0x77EE,\n                0xE1E3: 0x77FC,\n                0xE1E4: 0x780C,\n                0xE1E5: 0x7812,\n                0xE1E6: 0x7926,\n                0xE1E7: 0x7820,\n                0xE1E8: 0x792A,\n                0xE1E9: 0x7845,\n                0xE1EA: 0x788E,\n                0xE1EB: 0x7874,\n                0xE1EC: 0x7886,\n                0xE1ED: 0x787C,\n                0xE1EE: 0x789A,\n                0xE1EF: 0x788C,\n                0xE1F0: 0x78A3,\n                0xE1F1: 0x78B5,\n                0xE1F2: 0x78AA,\n                0xE1F3: 0x78AF,\n                0xE1F4: 0x78D1,\n                0xE1F5: 0x78C6,\n                0xE1F6: 0x78CB,\n                0xE1F7: 0x78D4,\n                0xE1F8: 0x78BE,\n                0xE1F9: 0x78BC,\n                0xE1FA: 0x78C5,\n                0xE1FB: 0x78CA,\n                0xE1FC: 0x78EC,\n                0xE240: 0x78E7,\n                0xE241: 0x78DA,\n                0xE242: 0x78FD,\n                0xE243: 0x78F4,\n                0xE244: 0x7907,\n                0xE245: 0x7912,\n                0xE246: 0x7911,\n                0xE247: 0x7919,\n                0xE248: 0x792C,\n                0xE249: 0x792B,\n                0xE24A: 0x7940,\n                0xE24B: 0x7960,\n                0xE24C: 0x7957,\n                0xE24D: 0x795F,\n                0xE24E: 0x795A,\n                0xE24F: 0x7955,\n                0xE250: 0x7953,\n                0xE251: 0x797A,\n                0xE252: 0x797F,\n                0xE253: 0x798A,\n                0xE254: 0x799D,\n                0xE255: 0x79A7,\n                0xE256: 0x9F4B,\n                0xE257: 0x79AA,\n                0xE258: 0x79AE,\n                0xE259: 0x79B3,\n                0xE25A: 0x79B9,\n                0xE25B: 0x79BA,\n                0xE25C: 0x79C9,\n                0xE25D: 0x79D5,\n                0xE25E: 0x79E7,\n                0xE25F: 0x79EC,\n                0xE260: 0x79E1,\n                0xE261: 0x79E3,\n                0xE262: 0x7A08,\n                0xE263: 0x7A0D,\n                0xE264: 0x7A18,\n                0xE265: 0x7A19,\n                0xE266: 0x7A20,\n                0xE267: 0x7A1F,\n                0xE268: 0x7980,\n                0xE269: 0x7A31,\n                0xE26A: 0x7A3B,\n                0xE26B: 0x7A3E,\n                0xE26C: 0x7A37,\n                0xE26D: 0x7A43,\n                0xE26E: 0x7A57,\n                0xE26F: 0x7A49,\n                0xE270: 0x7A61,\n                0xE271: 0x7A62,\n                0xE272: 0x7A69,\n                0xE273: 0x9F9D,\n                0xE274: 0x7A70,\n                0xE275: 0x7A79,\n                0xE276: 0x7A7D,\n                0xE277: 0x7A88,\n                0xE278: 0x7A97,\n                0xE279: 0x7A95,\n                0xE27A: 0x7A98,\n                0xE27B: 0x7A96,\n                0xE27C: 0x7AA9,\n                0xE27D: 0x7AC8,\n                0xE27E: 0x7AB0,\n                0xE280: 0x7AB6,\n                0xE281: 0x7AC5,\n                0xE282: 0x7AC4,\n                0xE283: 0x7ABF,\n                0xE284: 0x9083,\n                0xE285: 0x7AC7,\n                0xE286: 0x7ACA,\n                0xE287: 0x7ACD,\n                0xE288: 0x7ACF,\n                0xE289: 0x7AD5,\n                0xE28A: 0x7AD3,\n                0xE28B: 0x7AD9,\n                0xE28C: 0x7ADA,\n                0xE28D: 0x7ADD,\n                0xE28E: 0x7AE1,\n                0xE28F: 0x7AE2,\n                0xE290: 0x7AE6,\n                0xE291: 0x7AED,\n                0xE292: 0x7AF0,\n                0xE293: 0x7B02,\n                0xE294: 0x7B0F,\n                0xE295: 0x7B0A,\n                0xE296: 0x7B06,\n                0xE297: 0x7B33,\n                0xE298: 0x7B18,\n                0xE299: 0x7B19,\n                0xE29A: 0x7B1E,\n                0xE29B: 0x7B35,\n                0xE29C: 0x7B28,\n                0xE29D: 0x7B36,\n                0xE29E: 0x7B50,\n                0xE29F: 0x7B7A,\n                0xE2A0: 0x7B04,\n                0xE2A1: 0x7B4D,\n                0xE2A2: 0x7B0B,\n                0xE2A3: 0x7B4C,\n                0xE2A4: 0x7B45,\n                0xE2A5: 0x7B75,\n                0xE2A6: 0x7B65,\n                0xE2A7: 0x7B74,\n                0xE2A8: 0x7B67,\n                0xE2A9: 0x7B70,\n                0xE2AA: 0x7B71,\n                0xE2AB: 0x7B6C,\n                0xE2AC: 0x7B6E,\n                0xE2AD: 0x7B9D,\n                0xE2AE: 0x7B98,\n                0xE2AF: 0x7B9F,\n                0xE2B0: 0x7B8D,\n                0xE2B1: 0x7B9C,\n                0xE2B2: 0x7B9A,\n                0xE2B3: 0x7B8B,\n                0xE2B4: 0x7B92,\n                0xE2B5: 0x7B8F,\n                0xE2B6: 0x7B5D,\n                0xE2B7: 0x7B99,\n                0xE2B8: 0x7BCB,\n                0xE2B9: 0x7BC1,\n                0xE2BA: 0x7BCC,\n                0xE2BB: 0x7BCF,\n                0xE2BC: 0x7BB4,\n                0xE2BD: 0x7BC6,\n                0xE2BE: 0x7BDD,\n                0xE2BF: 0x7BE9,\n                0xE2C0: 0x7C11,\n                0xE2C1: 0x7C14,\n                0xE2C2: 0x7BE6,\n                0xE2C3: 0x7BE5,\n                0xE2C4: 0x7C60,\n                0xE2C5: 0x7C00,\n                0xE2C6: 0x7C07,\n                0xE2C7: 0x7C13,\n                0xE2C8: 0x7BF3,\n                0xE2C9: 0x7BF7,\n                0xE2CA: 0x7C17,\n                0xE2CB: 0x7C0D,\n                0xE2CC: 0x7BF6,\n                0xE2CD: 0x7C23,\n                0xE2CE: 0x7C27,\n                0xE2CF: 0x7C2A,\n                0xE2D0: 0x7C1F,\n                0xE2D1: 0x7C37,\n                0xE2D2: 0x7C2B,\n                0xE2D3: 0x7C3D,\n                0xE2D4: 0x7C4C,\n                0xE2D5: 0x7C43,\n                0xE2D6: 0x7C54,\n                0xE2D7: 0x7C4F,\n                0xE2D8: 0x7C40,\n                0xE2D9: 0x7C50,\n                0xE2DA: 0x7C58,\n                0xE2DB: 0x7C5F,\n                0xE2DC: 0x7C64,\n                0xE2DD: 0x7C56,\n                0xE2DE: 0x7C65,\n                0xE2DF: 0x7C6C,\n                0xE2E0: 0x7C75,\n                0xE2E1: 0x7C83,\n                0xE2E2: 0x7C90,\n                0xE2E3: 0x7CA4,\n                0xE2E4: 0x7CAD,\n                0xE2E5: 0x7CA2,\n                0xE2E6: 0x7CAB,\n                0xE2E7: 0x7CA1,\n                0xE2E8: 0x7CA8,\n                0xE2E9: 0x7CB3,\n                0xE2EA: 0x7CB2,\n                0xE2EB: 0x7CB1,\n                0xE2EC: 0x7CAE,\n                0xE2ED: 0x7CB9,\n                0xE2EE: 0x7CBD,\n                0xE2EF: 0x7CC0,\n                0xE2F0: 0x7CC5,\n                0xE2F1: 0x7CC2,\n                0xE2F2: 0x7CD8,\n                0xE2F3: 0x7CD2,\n                0xE2F4: 0x7CDC,\n                0xE2F5: 0x7CE2,\n                0xE2F6: 0x9B3B,\n                0xE2F7: 0x7CEF,\n                0xE2F8: 0x7CF2,\n                0xE2F9: 0x7CF4,\n                0xE2FA: 0x7CF6,\n                0xE2FB: 0x7CFA,\n                0xE2FC: 0x7D06,\n                0xE340: 0x7D02,\n                0xE341: 0x7D1C,\n                0xE342: 0x7D15,\n                0xE343: 0x7D0A,\n                0xE344: 0x7D45,\n                0xE345: 0x7D4B,\n                0xE346: 0x7D2E,\n                0xE347: 0x7D32,\n                0xE348: 0x7D3F,\n                0xE349: 0x7D35,\n                0xE34A: 0x7D46,\n                0xE34B: 0x7D73,\n                0xE34C: 0x7D56,\n                0xE34D: 0x7D4E,\n                0xE34E: 0x7D72,\n                0xE34F: 0x7D68,\n                0xE350: 0x7D6E,\n                0xE351: 0x7D4F,\n                0xE352: 0x7D63,\n                0xE353: 0x7D93,\n                0xE354: 0x7D89,\n                0xE355: 0x7D5B,\n                0xE356: 0x7D8F,\n                0xE357: 0x7D7D,\n                0xE358: 0x7D9B,\n                0xE359: 0x7DBA,\n                0xE35A: 0x7DAE,\n                0xE35B: 0x7DA3,\n                0xE35C: 0x7DB5,\n                0xE35D: 0x7DC7,\n                0xE35E: 0x7DBD,\n                0xE35F: 0x7DAB,\n                0xE360: 0x7E3D,\n                0xE361: 0x7DA2,\n                0xE362: 0x7DAF,\n                0xE363: 0x7DDC,\n                0xE364: 0x7DB8,\n                0xE365: 0x7D9F,\n                0xE366: 0x7DB0,\n                0xE367: 0x7DD8,\n                0xE368: 0x7DDD,\n                0xE369: 0x7DE4,\n                0xE36A: 0x7DDE,\n                0xE36B: 0x7DFB,\n                0xE36C: 0x7DF2,\n                0xE36D: 0x7DE1,\n                0xE36E: 0x7E05,\n                0xE36F: 0x7E0A,\n                0xE370: 0x7E23,\n                0xE371: 0x7E21,\n                0xE372: 0x7E12,\n                0xE373: 0x7E31,\n                0xE374: 0x7E1F,\n                0xE375: 0x7E09,\n                0xE376: 0x7E0B,\n                0xE377: 0x7E22,\n                0xE378: 0x7E46,\n                0xE379: 0x7E66,\n                0xE37A: 0x7E3B,\n                0xE37B: 0x7E35,\n                0xE37C: 0x7E39,\n                0xE37D: 0x7E43,\n                0xE37E: 0x7E37,\n                0xE380: 0x7E32,\n                0xE381: 0x7E3A,\n                0xE382: 0x7E67,\n                0xE383: 0x7E5D,\n                0xE384: 0x7E56,\n                0xE385: 0x7E5E,\n                0xE386: 0x7E59,\n                0xE387: 0x7E5A,\n                0xE388: 0x7E79,\n                0xE389: 0x7E6A,\n                0xE38A: 0x7E69,\n                0xE38B: 0x7E7C,\n                0xE38C: 0x7E7B,\n                0xE38D: 0x7E83,\n                0xE38E: 0x7DD5,\n                0xE38F: 0x7E7D,\n                0xE390: 0x8FAE,\n                0xE391: 0x7E7F,\n                0xE392: 0x7E88,\n                0xE393: 0x7E89,\n                0xE394: 0x7E8C,\n                0xE395: 0x7E92,\n                0xE396: 0x7E90,\n                0xE397: 0x7E93,\n                0xE398: 0x7E94,\n                0xE399: 0x7E96,\n                0xE39A: 0x7E8E,\n                0xE39B: 0x7E9B,\n                0xE39C: 0x7E9C,\n                0xE39D: 0x7F38,\n                0xE39E: 0x7F3A,\n                0xE39F: 0x7F45,\n                0xE3A0: 0x7F4C,\n                0xE3A1: 0x7F4D,\n                0xE3A2: 0x7F4E,\n                0xE3A3: 0x7F50,\n                0xE3A4: 0x7F51,\n                0xE3A5: 0x7F55,\n                0xE3A6: 0x7F54,\n                0xE3A7: 0x7F58,\n                0xE3A8: 0x7F5F,\n                0xE3A9: 0x7F60,\n                0xE3AA: 0x7F68,\n                0xE3AB: 0x7F69,\n                0xE3AC: 0x7F67,\n                0xE3AD: 0x7F78,\n                0xE3AE: 0x7F82,\n                0xE3AF: 0x7F86,\n                0xE3B0: 0x7F83,\n                0xE3B1: 0x7F88,\n                0xE3B2: 0x7F87,\n                0xE3B3: 0x7F8C,\n                0xE3B4: 0x7F94,\n                0xE3B5: 0x7F9E,\n                0xE3B6: 0x7F9D,\n                0xE3B7: 0x7F9A,\n                0xE3B8: 0x7FA3,\n                0xE3B9: 0x7FAF,\n                0xE3BA: 0x7FB2,\n                0xE3BB: 0x7FB9,\n                0xE3BC: 0x7FAE,\n                0xE3BD: 0x7FB6,\n                0xE3BE: 0x7FB8,\n                0xE3BF: 0x8B71,\n                0xE3C0: 0x7FC5,\n                0xE3C1: 0x7FC6,\n                0xE3C2: 0x7FCA,\n                0xE3C3: 0x7FD5,\n                0xE3C4: 0x7FD4,\n                0xE3C5: 0x7FE1,\n                0xE3C6: 0x7FE6,\n                0xE3C7: 0x7FE9,\n                0xE3C8: 0x7FF3,\n                0xE3C9: 0x7FF9,\n                0xE3CA: 0x98DC,\n                0xE3CB: 0x8006,\n                0xE3CC: 0x8004,\n                0xE3CD: 0x800B,\n                0xE3CE: 0x8012,\n                0xE3CF: 0x8018,\n                0xE3D0: 0x8019,\n                0xE3D1: 0x801C,\n                0xE3D2: 0x8021,\n                0xE3D3: 0x8028,\n                0xE3D4: 0x803F,\n                0xE3D5: 0x803B,\n                0xE3D6: 0x804A,\n                0xE3D7: 0x8046,\n                0xE3D8: 0x8052,\n                0xE3D9: 0x8058,\n                0xE3DA: 0x805A,\n                0xE3DB: 0x805F,\n                0xE3DC: 0x8062,\n                0xE3DD: 0x8068,\n                0xE3DE: 0x8073,\n                0xE3DF: 0x8072,\n                0xE3E0: 0x8070,\n                0xE3E1: 0x8076,\n                0xE3E2: 0x8079,\n                0xE3E3: 0x807D,\n                0xE3E4: 0x807F,\n                0xE3E5: 0x8084,\n                0xE3E6: 0x8086,\n                0xE3E7: 0x8085,\n                0xE3E8: 0x809B,\n                0xE3E9: 0x8093,\n                0xE3EA: 0x809A,\n                0xE3EB: 0x80AD,\n                0xE3EC: 0x5190,\n                0xE3ED: 0x80AC,\n                0xE3EE: 0x80DB,\n                0xE3EF: 0x80E5,\n                0xE3F0: 0x80D9,\n                0xE3F1: 0x80DD,\n                0xE3F2: 0x80C4,\n                0xE3F3: 0x80DA,\n                0xE3F4: 0x80D6,\n                0xE3F5: 0x8109,\n                0xE3F6: 0x80EF,\n                0xE3F7: 0x80F1,\n                0xE3F8: 0x811B,\n                0xE3F9: 0x8129,\n                0xE3FA: 0x8123,\n                0xE3FB: 0x812F,\n                0xE3FC: 0x814B,\n                0xE440: 0x968B,\n                0xE441: 0x8146,\n                0xE442: 0x813E,\n                0xE443: 0x8153,\n                0xE444: 0x8151,\n                0xE445: 0x80FC,\n                0xE446: 0x8171,\n                0xE447: 0x816E,\n                0xE448: 0x8165,\n                0xE449: 0x8166,\n                0xE44A: 0x8174,\n                0xE44B: 0x8183,\n                0xE44C: 0x8188,\n                0xE44D: 0x818A,\n                0xE44E: 0x8180,\n                0xE44F: 0x8182,\n                0xE450: 0x81A0,\n                0xE451: 0x8195,\n                0xE452: 0x81A4,\n                0xE453: 0x81A3,\n                0xE454: 0x815F,\n                0xE455: 0x8193,\n                0xE456: 0x81A9,\n                0xE457: 0x81B0,\n                0xE458: 0x81B5,\n                0xE459: 0x81BE,\n                0xE45A: 0x81B8,\n                0xE45B: 0x81BD,\n                0xE45C: 0x81C0,\n                0xE45D: 0x81C2,\n                0xE45E: 0x81BA,\n                0xE45F: 0x81C9,\n                0xE460: 0x81CD,\n                0xE461: 0x81D1,\n                0xE462: 0x81D9,\n                0xE463: 0x81D8,\n                0xE464: 0x81C8,\n                0xE465: 0x81DA,\n                0xE466: 0x81DF,\n                0xE467: 0x81E0,\n                0xE468: 0x81E7,\n                0xE469: 0x81FA,\n                0xE46A: 0x81FB,\n                0xE46B: 0x81FE,\n                0xE46C: 0x8201,\n                0xE46D: 0x8202,\n                0xE46E: 0x8205,\n                0xE46F: 0x8207,\n                0xE470: 0x820A,\n                0xE471: 0x820D,\n                0xE472: 0x8210,\n                0xE473: 0x8216,\n                0xE474: 0x8229,\n                0xE475: 0x822B,\n                0xE476: 0x8238,\n                0xE477: 0x8233,\n                0xE478: 0x8240,\n                0xE479: 0x8259,\n                0xE47A: 0x8258,\n                0xE47B: 0x825D,\n                0xE47C: 0x825A,\n                0xE47D: 0x825F,\n                0xE47E: 0x8264,\n                0xE480: 0x8262,\n                0xE481: 0x8268,\n                0xE482: 0x826A,\n                0xE483: 0x826B,\n                0xE484: 0x822E,\n                0xE485: 0x8271,\n                0xE486: 0x8277,\n                0xE487: 0x8278,\n                0xE488: 0x827E,\n                0xE489: 0x828D,\n                0xE48A: 0x8292,\n                0xE48B: 0x82AB,\n                0xE48C: 0x829F,\n                0xE48D: 0x82BB,\n                0xE48E: 0x82AC,\n                0xE48F: 0x82E1,\n                0xE490: 0x82E3,\n                0xE491: 0x82DF,\n                0xE492: 0x82D2,\n                0xE493: 0x82F4,\n                0xE494: 0x82F3,\n                0xE495: 0x82FA,\n                0xE496: 0x8393,\n                0xE497: 0x8303,\n                0xE498: 0x82FB,\n                0xE499: 0x82F9,\n                0xE49A: 0x82DE,\n                0xE49B: 0x8306,\n                0xE49C: 0x82DC,\n                0xE49D: 0x8309,\n                0xE49E: 0x82D9,\n                0xE49F: 0x8335,\n                0xE4A0: 0x8334,\n                0xE4A1: 0x8316,\n                0xE4A2: 0x8332,\n                0xE4A3: 0x8331,\n                0xE4A4: 0x8340,\n                0xE4A5: 0x8339,\n                0xE4A6: 0x8350,\n                0xE4A7: 0x8345,\n                0xE4A8: 0x832F,\n                0xE4A9: 0x832B,\n                0xE4AA: 0x8317,\n                0xE4AB: 0x8318,\n                0xE4AC: 0x8385,\n                0xE4AD: 0x839A,\n                0xE4AE: 0x83AA,\n                0xE4AF: 0x839F,\n                0xE4B0: 0x83A2,\n                0xE4B1: 0x8396,\n                0xE4B2: 0x8323,\n                0xE4B3: 0x838E,\n                0xE4B4: 0x8387,\n                0xE4B5: 0x838A,\n                0xE4B6: 0x837C,\n                0xE4B7: 0x83B5,\n                0xE4B8: 0x8373,\n                0xE4B9: 0x8375,\n                0xE4BA: 0x83A0,\n                0xE4BB: 0x8389,\n                0xE4BC: 0x83A8,\n                0xE4BD: 0x83F4,\n                0xE4BE: 0x8413,\n                0xE4BF: 0x83EB,\n                0xE4C0: 0x83CE,\n                0xE4C1: 0x83FD,\n                0xE4C2: 0x8403,\n                0xE4C3: 0x83D8,\n                0xE4C4: 0x840B,\n                0xE4C5: 0x83C1,\n                0xE4C6: 0x83F7,\n                0xE4C7: 0x8407,\n                0xE4C8: 0x83E0,\n                0xE4C9: 0x83F2,\n                0xE4CA: 0x840D,\n                0xE4CB: 0x8422,\n                0xE4CC: 0x8420,\n                0xE4CD: 0x83BD,\n                0xE4CE: 0x8438,\n                0xE4CF: 0x8506,\n                0xE4D0: 0x83FB,\n                0xE4D1: 0x846D,\n                0xE4D2: 0x842A,\n                0xE4D3: 0x843C,\n                0xE4D4: 0x855A,\n                0xE4D5: 0x8484,\n                0xE4D6: 0x8477,\n                0xE4D7: 0x846B,\n                0xE4D8: 0x84AD,\n                0xE4D9: 0x846E,\n                0xE4DA: 0x8482,\n                0xE4DB: 0x8469,\n                0xE4DC: 0x8446,\n                0xE4DD: 0x842C,\n                0xE4DE: 0x846F,\n                0xE4DF: 0x8479,\n                0xE4E0: 0x8435,\n                0xE4E1: 0x84CA,\n                0xE4E2: 0x8462,\n                0xE4E3: 0x84B9,\n                0xE4E4: 0x84BF,\n                0xE4E5: 0x849F,\n                0xE4E6: 0x84D9,\n                0xE4E7: 0x84CD,\n                0xE4E8: 0x84BB,\n                0xE4E9: 0x84DA,\n                0xE4EA: 0x84D0,\n                0xE4EB: 0x84C1,\n                0xE4EC: 0x84C6,\n                0xE4ED: 0x84D6,\n                0xE4EE: 0x84A1,\n                0xE4EF: 0x8521,\n                0xE4F0: 0x84FF,\n                0xE4F1: 0x84F4,\n                0xE4F2: 0x8517,\n                0xE4F3: 0x8518,\n                0xE4F4: 0x852C,\n                0xE4F5: 0x851F,\n                0xE4F6: 0x8515,\n                0xE4F7: 0x8514,\n                0xE4F8: 0x84FC,\n                0xE4F9: 0x8540,\n                0xE4FA: 0x8563,\n                0xE4FB: 0x8558,\n                0xE4FC: 0x8548,\n                0xE540: 0x8541,\n                0xE541: 0x8602,\n                0xE542: 0x854B,\n                0xE543: 0x8555,\n                0xE544: 0x8580,\n                0xE545: 0x85A4,\n                0xE546: 0x8588,\n                0xE547: 0x8591,\n                0xE548: 0x858A,\n                0xE549: 0x85A8,\n                0xE54A: 0x856D,\n                0xE54B: 0x8594,\n                0xE54C: 0x859B,\n                0xE54D: 0x85EA,\n                0xE54E: 0x8587,\n                0xE54F: 0x859C,\n                0xE550: 0x8577,\n                0xE551: 0x857E,\n                0xE552: 0x8590,\n                0xE553: 0x85C9,\n                0xE554: 0x85BA,\n                0xE555: 0x85CF,\n                0xE556: 0x85B9,\n                0xE557: 0x85D0,\n                0xE558: 0x85D5,\n                0xE559: 0x85DD,\n                0xE55A: 0x85E5,\n                0xE55B: 0x85DC,\n                0xE55C: 0x85F9,\n                0xE55D: 0x860A,\n                0xE55E: 0x8613,\n                0xE55F: 0x860B,\n                0xE560: 0x85FE,\n                0xE561: 0x85FA,\n                0xE562: 0x8606,\n                0xE563: 0x8622,\n                0xE564: 0x861A,\n                0xE565: 0x8630,\n                0xE566: 0x863F,\n                0xE567: 0x864D,\n                0xE568: 0x4E55,\n                0xE569: 0x8654,\n                0xE56A: 0x865F,\n                0xE56B: 0x8667,\n                0xE56C: 0x8671,\n                0xE56D: 0x8693,\n                0xE56E: 0x86A3,\n                0xE56F: 0x86A9,\n                0xE570: 0x86AA,\n                0xE571: 0x868B,\n                0xE572: 0x868C,\n                0xE573: 0x86B6,\n                0xE574: 0x86AF,\n                0xE575: 0x86C4,\n                0xE576: 0x86C6,\n                0xE577: 0x86B0,\n                0xE578: 0x86C9,\n                0xE579: 0x8823,\n                0xE57A: 0x86AB,\n                0xE57B: 0x86D4,\n                0xE57C: 0x86DE,\n                0xE57D: 0x86E9,\n                0xE57E: 0x86EC,\n                0xE580: 0x86DF,\n                0xE581: 0x86DB,\n                0xE582: 0x86EF,\n                0xE583: 0x8712,\n                0xE584: 0x8706,\n                0xE585: 0x8708,\n                0xE586: 0x8700,\n                0xE587: 0x8703,\n                0xE588: 0x86FB,\n                0xE589: 0x8711,\n                0xE58A: 0x8709,\n                0xE58B: 0x870D,\n                0xE58C: 0x86F9,\n                0xE58D: 0x870A,\n                0xE58E: 0x8734,\n                0xE58F: 0x873F,\n                0xE590: 0x8737,\n                0xE591: 0x873B,\n                0xE592: 0x8725,\n                0xE593: 0x8729,\n                0xE594: 0x871A,\n                0xE595: 0x8760,\n                0xE596: 0x875F,\n                0xE597: 0x8778,\n                0xE598: 0x874C,\n                0xE599: 0x874E,\n                0xE59A: 0x8774,\n                0xE59B: 0x8757,\n                0xE59C: 0x8768,\n                0xE59D: 0x876E,\n                0xE59E: 0x8759,\n                0xE59F: 0x8753,\n                0xE5A0: 0x8763,\n                0xE5A1: 0x876A,\n                0xE5A2: 0x8805,\n                0xE5A3: 0x87A2,\n                0xE5A4: 0x879F,\n                0xE5A5: 0x8782,\n                0xE5A6: 0x87AF,\n                0xE5A7: 0x87CB,\n                0xE5A8: 0x87BD,\n                0xE5A9: 0x87C0,\n                0xE5AA: 0x87D0,\n                0xE5AB: 0x96D6,\n                0xE5AC: 0x87AB,\n                0xE5AD: 0x87C4,\n                0xE5AE: 0x87B3,\n                0xE5AF: 0x87C7,\n                0xE5B0: 0x87C6,\n                0xE5B1: 0x87BB,\n                0xE5B2: 0x87EF,\n                0xE5B3: 0x87F2,\n                0xE5B4: 0x87E0,\n                0xE5B5: 0x880F,\n                0xE5B6: 0x880D,\n                0xE5B7: 0x87FE,\n                0xE5B8: 0x87F6,\n                0xE5B9: 0x87F7,\n                0xE5BA: 0x880E,\n                0xE5BB: 0x87D2,\n                0xE5BC: 0x8811,\n                0xE5BD: 0x8816,\n                0xE5BE: 0x8815,\n                0xE5BF: 0x8822,\n                0xE5C0: 0x8821,\n                0xE5C1: 0x8831,\n                0xE5C2: 0x8836,\n                0xE5C3: 0x8839,\n                0xE5C4: 0x8827,\n                0xE5C5: 0x883B,\n                0xE5C6: 0x8844,\n                0xE5C7: 0x8842,\n                0xE5C8: 0x8852,\n                0xE5C9: 0x8859,\n                0xE5CA: 0x885E,\n                0xE5CB: 0x8862,\n                0xE5CC: 0x886B,\n                0xE5CD: 0x8881,\n                0xE5CE: 0x887E,\n                0xE5CF: 0x889E,\n                0xE5D0: 0x8875,\n                0xE5D1: 0x887D,\n                0xE5D2: 0x88B5,\n                0xE5D3: 0x8872,\n                0xE5D4: 0x8882,\n                0xE5D5: 0x8897,\n                0xE5D6: 0x8892,\n                0xE5D7: 0x88AE,\n                0xE5D8: 0x8899,\n                0xE5D9: 0x88A2,\n                0xE5DA: 0x888D,\n                0xE5DB: 0x88A4,\n                0xE5DC: 0x88B0,\n                0xE5DD: 0x88BF,\n                0xE5DE: 0x88B1,\n                0xE5DF: 0x88C3,\n                0xE5E0: 0x88C4,\n                0xE5E1: 0x88D4,\n                0xE5E2: 0x88D8,\n                0xE5E3: 0x88D9,\n                0xE5E4: 0x88DD,\n                0xE5E5: 0x88F9,\n                0xE5E6: 0x8902,\n                0xE5E7: 0x88FC,\n                0xE5E8: 0x88F4,\n                0xE5E9: 0x88E8,\n                0xE5EA: 0x88F2,\n                0xE5EB: 0x8904,\n                0xE5EC: 0x890C,\n                0xE5ED: 0x890A,\n                0xE5EE: 0x8913,\n                0xE5EF: 0x8943,\n                0xE5F0: 0x891E,\n                0xE5F1: 0x8925,\n                0xE5F2: 0x892A,\n                0xE5F3: 0x892B,\n                0xE5F4: 0x8941,\n                0xE5F5: 0x8944,\n                0xE5F6: 0x893B,\n                0xE5F7: 0x8936,\n                0xE5F8: 0x8938,\n                0xE5F9: 0x894C,\n                0xE5FA: 0x891D,\n                0xE5FB: 0x8960,\n                0xE5FC: 0x895E,\n                0xE640: 0x8966,\n                0xE641: 0x8964,\n                0xE642: 0x896D,\n                0xE643: 0x896A,\n                0xE644: 0x896F,\n                0xE645: 0x8974,\n                0xE646: 0x8977,\n                0xE647: 0x897E,\n                0xE648: 0x8983,\n                0xE649: 0x8988,\n                0xE64A: 0x898A,\n                0xE64B: 0x8993,\n                0xE64C: 0x8998,\n                0xE64D: 0x89A1,\n                0xE64E: 0x89A9,\n                0xE64F: 0x89A6,\n                0xE650: 0x89AC,\n                0xE651: 0x89AF,\n                0xE652: 0x89B2,\n                0xE653: 0x89BA,\n                0xE654: 0x89BD,\n                0xE655: 0x89BF,\n                0xE656: 0x89C0,\n                0xE657: 0x89DA,\n                0xE658: 0x89DC,\n                0xE659: 0x89DD,\n                0xE65A: 0x89E7,\n                0xE65B: 0x89F4,\n                0xE65C: 0x89F8,\n                0xE65D: 0x8A03,\n                0xE65E: 0x8A16,\n                0xE65F: 0x8A10,\n                0xE660: 0x8A0C,\n                0xE661: 0x8A1B,\n                0xE662: 0x8A1D,\n                0xE663: 0x8A25,\n                0xE664: 0x8A36,\n                0xE665: 0x8A41,\n                0xE666: 0x8A5B,\n                0xE667: 0x8A52,\n                0xE668: 0x8A46,\n                0xE669: 0x8A48,\n                0xE66A: 0x8A7C,\n                0xE66B: 0x8A6D,\n                0xE66C: 0x8A6C,\n                0xE66D: 0x8A62,\n                0xE66E: 0x8A85,\n                0xE66F: 0x8A82,\n                0xE670: 0x8A84,\n                0xE671: 0x8AA8,\n                0xE672: 0x8AA1,\n                0xE673: 0x8A91,\n                0xE674: 0x8AA5,\n                0xE675: 0x8AA6,\n                0xE676: 0x8A9A,\n                0xE677: 0x8AA3,\n                0xE678: 0x8AC4,\n                0xE679: 0x8ACD,\n                0xE67A: 0x8AC2,\n                0xE67B: 0x8ADA,\n                0xE67C: 0x8AEB,\n                0xE67D: 0x8AF3,\n                0xE67E: 0x8AE7,\n                0xE680: 0x8AE4,\n                0xE681: 0x8AF1,\n                0xE682: 0x8B14,\n                0xE683: 0x8AE0,\n                0xE684: 0x8AE2,\n                0xE685: 0x8AF7,\n                0xE686: 0x8ADE,\n                0xE687: 0x8ADB,\n                0xE688: 0x8B0C,\n                0xE689: 0x8B07,\n                0xE68A: 0x8B1A,\n                0xE68B: 0x8AE1,\n                0xE68C: 0x8B16,\n                0xE68D: 0x8B10,\n                0xE68E: 0x8B17,\n                0xE68F: 0x8B20,\n                0xE690: 0x8B33,\n                0xE691: 0x97AB,\n                0xE692: 0x8B26,\n                0xE693: 0x8B2B,\n                0xE694: 0x8B3E,\n                0xE695: 0x8B28,\n                0xE696: 0x8B41,\n                0xE697: 0x8B4C,\n                0xE698: 0x8B4F,\n                0xE699: 0x8B4E,\n                0xE69A: 0x8B49,\n                0xE69B: 0x8B56,\n                0xE69C: 0x8B5B,\n                0xE69D: 0x8B5A,\n                0xE69E: 0x8B6B,\n                0xE69F: 0x8B5F,\n                0xE6A0: 0x8B6C,\n                0xE6A1: 0x8B6F,\n                0xE6A2: 0x8B74,\n                0xE6A3: 0x8B7D,\n                0xE6A4: 0x8B80,\n                0xE6A5: 0x8B8C,\n                0xE6A6: 0x8B8E,\n                0xE6A7: 0x8B92,\n                0xE6A8: 0x8B93,\n                0xE6A9: 0x8B96,\n                0xE6AA: 0x8B99,\n                0xE6AB: 0x8B9A,\n                0xE6AC: 0x8C3A,\n                0xE6AD: 0x8C41,\n                0xE6AE: 0x8C3F,\n                0xE6AF: 0x8C48,\n                0xE6B0: 0x8C4C,\n                0xE6B1: 0x8C4E,\n                0xE6B2: 0x8C50,\n                0xE6B3: 0x8C55,\n                0xE6B4: 0x8C62,\n                0xE6B5: 0x8C6C,\n                0xE6B6: 0x8C78,\n                0xE6B7: 0x8C7A,\n                0xE6B8: 0x8C82,\n                0xE6B9: 0x8C89,\n                0xE6BA: 0x8C85,\n                0xE6BB: 0x8C8A,\n                0xE6BC: 0x8C8D,\n                0xE6BD: 0x8C8E,\n                0xE6BE: 0x8C94,\n                0xE6BF: 0x8C7C,\n                0xE6C0: 0x8C98,\n                0xE6C1: 0x621D,\n                0xE6C2: 0x8CAD,\n                0xE6C3: 0x8CAA,\n                0xE6C4: 0x8CBD,\n                0xE6C5: 0x8CB2,\n                0xE6C6: 0x8CB3,\n                0xE6C7: 0x8CAE,\n                0xE6C8: 0x8CB6,\n                0xE6C9: 0x8CC8,\n                0xE6CA: 0x8CC1,\n                0xE6CB: 0x8CE4,\n                0xE6CC: 0x8CE3,\n                0xE6CD: 0x8CDA,\n                0xE6CE: 0x8CFD,\n                0xE6CF: 0x8CFA,\n                0xE6D0: 0x8CFB,\n                0xE6D1: 0x8D04,\n                0xE6D2: 0x8D05,\n                0xE6D3: 0x8D0A,\n                0xE6D4: 0x8D07,\n                0xE6D5: 0x8D0F,\n                0xE6D6: 0x8D0D,\n                0xE6D7: 0x8D10,\n                0xE6D8: 0x9F4E,\n                0xE6D9: 0x8D13,\n                0xE6DA: 0x8CCD,\n                0xE6DB: 0x8D14,\n                0xE6DC: 0x8D16,\n                0xE6DD: 0x8D67,\n                0xE6DE: 0x8D6D,\n                0xE6DF: 0x8D71,\n                0xE6E0: 0x8D73,\n                0xE6E1: 0x8D81,\n                0xE6E2: 0x8D99,\n                0xE6E3: 0x8DC2,\n                0xE6E4: 0x8DBE,\n                0xE6E5: 0x8DBA,\n                0xE6E6: 0x8DCF,\n                0xE6E7: 0x8DDA,\n                0xE6E8: 0x8DD6,\n                0xE6E9: 0x8DCC,\n                0xE6EA: 0x8DDB,\n                0xE6EB: 0x8DCB,\n                0xE6EC: 0x8DEA,\n                0xE6ED: 0x8DEB,\n                0xE6EE: 0x8DDF,\n                0xE6EF: 0x8DE3,\n                0xE6F0: 0x8DFC,\n                0xE6F1: 0x8E08,\n                0xE6F2: 0x8E09,\n                0xE6F3: 0x8DFF,\n                0xE6F4: 0x8E1D,\n                0xE6F5: 0x8E1E,\n                0xE6F6: 0x8E10,\n                0xE6F7: 0x8E1F,\n                0xE6F8: 0x8E42,\n                0xE6F9: 0x8E35,\n                0xE6FA: 0x8E30,\n                0xE6FB: 0x8E34,\n                0xE6FC: 0x8E4A,\n                0xE740: 0x8E47,\n                0xE741: 0x8E49,\n                0xE742: 0x8E4C,\n                0xE743: 0x8E50,\n                0xE744: 0x8E48,\n                0xE745: 0x8E59,\n                0xE746: 0x8E64,\n                0xE747: 0x8E60,\n                0xE748: 0x8E2A,\n                0xE749: 0x8E63,\n                0xE74A: 0x8E55,\n                0xE74B: 0x8E76,\n                0xE74C: 0x8E72,\n                0xE74D: 0x8E7C,\n                0xE74E: 0x8E81,\n                0xE74F: 0x8E87,\n                0xE750: 0x8E85,\n                0xE751: 0x8E84,\n                0xE752: 0x8E8B,\n                0xE753: 0x8E8A,\n                0xE754: 0x8E93,\n                0xE755: 0x8E91,\n                0xE756: 0x8E94,\n                0xE757: 0x8E99,\n                0xE758: 0x8EAA,\n                0xE759: 0x8EA1,\n                0xE75A: 0x8EAC,\n                0xE75B: 0x8EB0,\n                0xE75C: 0x8EC6,\n                0xE75D: 0x8EB1,\n                0xE75E: 0x8EBE,\n                0xE75F: 0x8EC5,\n                0xE760: 0x8EC8,\n                0xE761: 0x8ECB,\n                0xE762: 0x8EDB,\n                0xE763: 0x8EE3,\n                0xE764: 0x8EFC,\n                0xE765: 0x8EFB,\n                0xE766: 0x8EEB,\n                0xE767: 0x8EFE,\n                0xE768: 0x8F0A,\n                0xE769: 0x8F05,\n                0xE76A: 0x8F15,\n                0xE76B: 0x8F12,\n                0xE76C: 0x8F19,\n                0xE76D: 0x8F13,\n                0xE76E: 0x8F1C,\n                0xE76F: 0x8F1F,\n                0xE770: 0x8F1B,\n                0xE771: 0x8F0C,\n                0xE772: 0x8F26,\n                0xE773: 0x8F33,\n                0xE774: 0x8F3B,\n                0xE775: 0x8F39,\n                0xE776: 0x8F45,\n                0xE777: 0x8F42,\n                0xE778: 0x8F3E,\n                0xE779: 0x8F4C,\n                0xE77A: 0x8F49,\n                0xE77B: 0x8F46,\n                0xE77C: 0x8F4E,\n                0xE77D: 0x8F57,\n                0xE77E: 0x8F5C,\n                0xE780: 0x8F62,\n                0xE781: 0x8F63,\n                0xE782: 0x8F64,\n                0xE783: 0x8F9C,\n                0xE784: 0x8F9F,\n                0xE785: 0x8FA3,\n                0xE786: 0x8FAD,\n                0xE787: 0x8FAF,\n                0xE788: 0x8FB7,\n                0xE789: 0x8FDA,\n                0xE78A: 0x8FE5,\n                0xE78B: 0x8FE2,\n                0xE78C: 0x8FEA,\n                0xE78D: 0x8FEF,\n                0xE78E: 0x9087,\n                0xE78F: 0x8FF4,\n                0xE790: 0x9005,\n                0xE791: 0x8FF9,\n                0xE792: 0x8FFA,\n                0xE793: 0x9011,\n                0xE794: 0x9015,\n                0xE795: 0x9021,\n                0xE796: 0x900D,\n                0xE797: 0x901E,\n                0xE798: 0x9016,\n                0xE799: 0x900B,\n                0xE79A: 0x9027,\n                0xE79B: 0x9036,\n                0xE79C: 0x9035,\n                0xE79D: 0x9039,\n                0xE79E: 0x8FF8,\n                0xE79F: 0x904F,\n                0xE7A0: 0x9050,\n                0xE7A1: 0x9051,\n                0xE7A2: 0x9052,\n                0xE7A3: 0x900E,\n                0xE7A4: 0x9049,\n                0xE7A5: 0x903E,\n                0xE7A6: 0x9056,\n                0xE7A7: 0x9058,\n                0xE7A8: 0x905E,\n                0xE7A9: 0x9068,\n                0xE7AA: 0x906F,\n                0xE7AB: 0x9076,\n                0xE7AC: 0x96A8,\n                0xE7AD: 0x9072,\n                0xE7AE: 0x9082,\n                0xE7AF: 0x907D,\n                0xE7B0: 0x9081,\n                0xE7B1: 0x9080,\n                0xE7B2: 0x908A,\n                0xE7B3: 0x9089,\n                0xE7B4: 0x908F,\n                0xE7B5: 0x90A8,\n                0xE7B6: 0x90AF,\n                0xE7B7: 0x90B1,\n                0xE7B8: 0x90B5,\n                0xE7B9: 0x90E2,\n                0xE7BA: 0x90E4,\n                0xE7BB: 0x6248,\n                0xE7BC: 0x90DB,\n                0xE7BD: 0x9102,\n                0xE7BE: 0x9112,\n                0xE7BF: 0x9119,\n                0xE7C0: 0x9132,\n                0xE7C1: 0x9130,\n                0xE7C2: 0x914A,\n                0xE7C3: 0x9156,\n                0xE7C4: 0x9158,\n                0xE7C5: 0x9163,\n                0xE7C6: 0x9165,\n                0xE7C7: 0x9169,\n                0xE7C8: 0x9173,\n                0xE7C9: 0x9172,\n                0xE7CA: 0x918B,\n                0xE7CB: 0x9189,\n                0xE7CC: 0x9182,\n                0xE7CD: 0x91A2,\n                0xE7CE: 0x91AB,\n                0xE7CF: 0x91AF,\n                0xE7D0: 0x91AA,\n                0xE7D1: 0x91B5,\n                0xE7D2: 0x91B4,\n                0xE7D3: 0x91BA,\n                0xE7D4: 0x91C0,\n                0xE7D5: 0x91C1,\n                0xE7D6: 0x91C9,\n                0xE7D7: 0x91CB,\n                0xE7D8: 0x91D0,\n                0xE7D9: 0x91D6,\n                0xE7DA: 0x91DF,\n                0xE7DB: 0x91E1,\n                0xE7DC: 0x91DB,\n                0xE7DD: 0x91FC,\n                0xE7DE: 0x91F5,\n                0xE7DF: 0x91F6,\n                0xE7E0: 0x921E,\n                0xE7E1: 0x91FF,\n                0xE7E2: 0x9214,\n                0xE7E3: 0x922C,\n                0xE7E4: 0x9215,\n                0xE7E5: 0x9211,\n                0xE7E6: 0x925E,\n                0xE7E7: 0x9257,\n                0xE7E8: 0x9245,\n                0xE7E9: 0x9249,\n                0xE7EA: 0x9264,\n                0xE7EB: 0x9248,\n                0xE7EC: 0x9295,\n                0xE7ED: 0x923F,\n                0xE7EE: 0x924B,\n                0xE7EF: 0x9250,\n                0xE7F0: 0x929C,\n                0xE7F1: 0x9296,\n                0xE7F2: 0x9293,\n                0xE7F3: 0x929B,\n                0xE7F4: 0x925A,\n                0xE7F5: 0x92CF,\n                0xE7F6: 0x92B9,\n                0xE7F7: 0x92B7,\n                0xE7F8: 0x92E9,\n                0xE7F9: 0x930F,\n                0xE7FA: 0x92FA,\n                0xE7FB: 0x9344,\n                0xE7FC: 0x932E,\n                0xE840: 0x9319,\n                0xE841: 0x9322,\n                0xE842: 0x931A,\n                0xE843: 0x9323,\n                0xE844: 0x933A,\n                0xE845: 0x9335,\n                0xE846: 0x933B,\n                0xE847: 0x935C,\n                0xE848: 0x9360,\n                0xE849: 0x937C,\n                0xE84A: 0x936E,\n                0xE84B: 0x9356,\n                0xE84C: 0x93B0,\n                0xE84D: 0x93AC,\n                0xE84E: 0x93AD,\n                0xE84F: 0x9394,\n                0xE850: 0x93B9,\n                0xE851: 0x93D6,\n                0xE852: 0x93D7,\n                0xE853: 0x93E8,\n                0xE854: 0x93E5,\n                0xE855: 0x93D8,\n                0xE856: 0x93C3,\n                0xE857: 0x93DD,\n                0xE858: 0x93D0,\n                0xE859: 0x93C8,\n                0xE85A: 0x93E4,\n                0xE85B: 0x941A,\n                0xE85C: 0x9414,\n                0xE85D: 0x9413,\n                0xE85E: 0x9403,\n                0xE85F: 0x9407,\n                0xE860: 0x9410,\n                0xE861: 0x9436,\n                0xE862: 0x942B,\n                0xE863: 0x9435,\n                0xE864: 0x9421,\n                0xE865: 0x943A,\n                0xE866: 0x9441,\n                0xE867: 0x9452,\n                0xE868: 0x9444,\n                0xE869: 0x945B,\n                0xE86A: 0x9460,\n                0xE86B: 0x9462,\n                0xE86C: 0x945E,\n                0xE86D: 0x946A,\n                0xE86E: 0x9229,\n                0xE86F: 0x9470,\n                0xE870: 0x9475,\n                0xE871: 0x9477,\n                0xE872: 0x947D,\n                0xE873: 0x945A,\n                0xE874: 0x947C,\n                0xE875: 0x947E,\n                0xE876: 0x9481,\n                0xE877: 0x947F,\n                0xE878: 0x9582,\n                0xE879: 0x9587,\n                0xE87A: 0x958A,\n                0xE87B: 0x9594,\n                0xE87C: 0x9596,\n                0xE87D: 0x9598,\n                0xE87E: 0x9599,\n                0xE880: 0x95A0,\n                0xE881: 0x95A8,\n                0xE882: 0x95A7,\n                0xE883: 0x95AD,\n                0xE884: 0x95BC,\n                0xE885: 0x95BB,\n                0xE886: 0x95B9,\n                0xE887: 0x95BE,\n                0xE888: 0x95CA,\n                0xE889: 0x6FF6,\n                0xE88A: 0x95C3,\n                0xE88B: 0x95CD,\n                0xE88C: 0x95CC,\n                0xE88D: 0x95D5,\n                0xE88E: 0x95D4,\n                0xE88F: 0x95D6,\n                0xE890: 0x95DC,\n                0xE891: 0x95E1,\n                0xE892: 0x95E5,\n                0xE893: 0x95E2,\n                0xE894: 0x9621,\n                0xE895: 0x9628,\n                0xE896: 0x962E,\n                0xE897: 0x962F,\n                0xE898: 0x9642,\n                0xE899: 0x964C,\n                0xE89A: 0x964F,\n                0xE89B: 0x964B,\n                0xE89C: 0x9677,\n                0xE89D: 0x965C,\n                0xE89E: 0x965E,\n                0xE89F: 0x965D,\n                0xE8A0: 0x965F,\n                0xE8A1: 0x9666,\n                0xE8A2: 0x9672,\n                0xE8A3: 0x966C,\n                0xE8A4: 0x968D,\n                0xE8A5: 0x9698,\n                0xE8A6: 0x9695,\n                0xE8A7: 0x9697,\n                0xE8A8: 0x96AA,\n                0xE8A9: 0x96A7,\n                0xE8AA: 0x96B1,\n                0xE8AB: 0x96B2,\n                0xE8AC: 0x96B0,\n                0xE8AD: 0x96B4,\n                0xE8AE: 0x96B6,\n                0xE8AF: 0x96B8,\n                0xE8B0: 0x96B9,\n                0xE8B1: 0x96CE,\n                0xE8B2: 0x96CB,\n                0xE8B3: 0x96C9,\n                0xE8B4: 0x96CD,\n                0xE8B5: 0x894D,\n                0xE8B6: 0x96DC,\n                0xE8B7: 0x970D,\n                0xE8B8: 0x96D5,\n                0xE8B9: 0x96F9,\n                0xE8BA: 0x9704,\n                0xE8BB: 0x9706,\n                0xE8BC: 0x9708,\n                0xE8BD: 0x9713,\n                0xE8BE: 0x970E,\n                0xE8BF: 0x9711,\n                0xE8C0: 0x970F,\n                0xE8C1: 0x9716,\n                0xE8C2: 0x9719,\n                0xE8C3: 0x9724,\n                0xE8C4: 0x972A,\n                0xE8C5: 0x9730,\n                0xE8C6: 0x9739,\n                0xE8C7: 0x973D,\n                0xE8C8: 0x973E,\n                0xE8C9: 0x9744,\n                0xE8CA: 0x9746,\n                0xE8CB: 0x9748,\n                0xE8CC: 0x9742,\n                0xE8CD: 0x9749,\n                0xE8CE: 0x975C,\n                0xE8CF: 0x9760,\n                0xE8D0: 0x9764,\n                0xE8D1: 0x9766,\n                0xE8D2: 0x9768,\n                0xE8D3: 0x52D2,\n                0xE8D4: 0x976B,\n                0xE8D5: 0x9771,\n                0xE8D6: 0x9779,\n                0xE8D7: 0x9785,\n                0xE8D8: 0x977C,\n                0xE8D9: 0x9781,\n                0xE8DA: 0x977A,\n                0xE8DB: 0x9786,\n                0xE8DC: 0x978B,\n                0xE8DD: 0x978F,\n                0xE8DE: 0x9790,\n                0xE8DF: 0x979C,\n                0xE8E0: 0x97A8,\n                0xE8E1: 0x97A6,\n                0xE8E2: 0x97A3,\n                0xE8E3: 0x97B3,\n                0xE8E4: 0x97B4,\n                0xE8E5: 0x97C3,\n                0xE8E6: 0x97C6,\n                0xE8E7: 0x97C8,\n                0xE8E8: 0x97CB,\n                0xE8E9: 0x97DC,\n                0xE8EA: 0x97ED,\n                0xE8EB: 0x9F4F,\n                0xE8EC: 0x97F2,\n                0xE8ED: 0x7ADF,\n                0xE8EE: 0x97F6,\n                0xE8EF: 0x97F5,\n                0xE8F0: 0x980F,\n                0xE8F1: 0x980C,\n                0xE8F2: 0x9838,\n                0xE8F3: 0x9824,\n                0xE8F4: 0x9821,\n                0xE8F5: 0x9837,\n                0xE8F6: 0x983D,\n                0xE8F7: 0x9846,\n                0xE8F8: 0x984F,\n                0xE8F9: 0x984B,\n                0xE8FA: 0x986B,\n                0xE8FB: 0x986F,\n                0xE8FC: 0x9870,\n                0xE940: 0x9871,\n                0xE941: 0x9874,\n                0xE942: 0x9873,\n                0xE943: 0x98AA,\n                0xE944: 0x98AF,\n                0xE945: 0x98B1,\n                0xE946: 0x98B6,\n                0xE947: 0x98C4,\n                0xE948: 0x98C3,\n                0xE949: 0x98C6,\n                0xE94A: 0x98E9,\n                0xE94B: 0x98EB,\n                0xE94C: 0x9903,\n                0xE94D: 0x9909,\n                0xE94E: 0x9912,\n                0xE94F: 0x9914,\n                0xE950: 0x9918,\n                0xE951: 0x9921,\n                0xE952: 0x991D,\n                0xE953: 0x991E,\n                0xE954: 0x9924,\n                0xE955: 0x9920,\n                0xE956: 0x992C,\n                0xE957: 0x992E,\n                0xE958: 0x993D,\n                0xE959: 0x993E,\n                0xE95A: 0x9942,\n                0xE95B: 0x9949,\n                0xE95C: 0x9945,\n                0xE95D: 0x9950,\n                0xE95E: 0x994B,\n                0xE95F: 0x9951,\n                0xE960: 0x9952,\n                0xE961: 0x994C,\n                0xE962: 0x9955,\n                0xE963: 0x9997,\n                0xE964: 0x9998,\n                0xE965: 0x99A5,\n                0xE966: 0x99AD,\n                0xE967: 0x99AE,\n                0xE968: 0x99BC,\n                0xE969: 0x99DF,\n                0xE96A: 0x99DB,\n                0xE96B: 0x99DD,\n                0xE96C: 0x99D8,\n                0xE96D: 0x99D1,\n                0xE96E: 0x99ED,\n                0xE96F: 0x99EE,\n                0xE970: 0x99F1,\n                0xE971: 0x99F2,\n                0xE972: 0x99FB,\n                0xE973: 0x99F8,\n                0xE974: 0x9A01,\n                0xE975: 0x9A0F,\n                0xE976: 0x9A05,\n                0xE977: 0x99E2,\n                0xE978: 0x9A19,\n                0xE979: 0x9A2B,\n                0xE97A: 0x9A37,\n                0xE97B: 0x9A45,\n                0xE97C: 0x9A42,\n                0xE97D: 0x9A40,\n                0xE97E: 0x9A43,\n                0xE980: 0x9A3E,\n                0xE981: 0x9A55,\n                0xE982: 0x9A4D,\n                0xE983: 0x9A5B,\n                0xE984: 0x9A57,\n                0xE985: 0x9A5F,\n                0xE986: 0x9A62,\n                0xE987: 0x9A65,\n                0xE988: 0x9A64,\n                0xE989: 0x9A69,\n                0xE98A: 0x9A6B,\n                0xE98B: 0x9A6A,\n                0xE98C: 0x9AAD,\n                0xE98D: 0x9AB0,\n                0xE98E: 0x9ABC,\n                0xE98F: 0x9AC0,\n                0xE990: 0x9ACF,\n                0xE991: 0x9AD1,\n                0xE992: 0x9AD3,\n                0xE993: 0x9AD4,\n                0xE994: 0x9ADE,\n                0xE995: 0x9ADF,\n                0xE996: 0x9AE2,\n                0xE997: 0x9AE3,\n                0xE998: 0x9AE6,\n                0xE999: 0x9AEF,\n                0xE99A: 0x9AEB,\n                0xE99B: 0x9AEE,\n                0xE99C: 0x9AF4,\n                0xE99D: 0x9AF1,\n                0xE99E: 0x9AF7,\n                0xE99F: 0x9AFB,\n                0xE9A0: 0x9B06,\n                0xE9A1: 0x9B18,\n                0xE9A2: 0x9B1A,\n                0xE9A3: 0x9B1F,\n                0xE9A4: 0x9B22,\n                0xE9A5: 0x9B23,\n                0xE9A6: 0x9B25,\n                0xE9A7: 0x9B27,\n                0xE9A8: 0x9B28,\n                0xE9A9: 0x9B29,\n                0xE9AA: 0x9B2A,\n                0xE9AB: 0x9B2E,\n                0xE9AC: 0x9B2F,\n                0xE9AD: 0x9B32,\n                0xE9AE: 0x9B44,\n                0xE9AF: 0x9B43,\n                0xE9B0: 0x9B4F,\n                0xE9B1: 0x9B4D,\n                0xE9B2: 0x9B4E,\n                0xE9B3: 0x9B51,\n                0xE9B4: 0x9B58,\n                0xE9B5: 0x9B74,\n                0xE9B6: 0x9B93,\n                0xE9B7: 0x9B83,\n                0xE9B8: 0x9B91,\n                0xE9B9: 0x9B96,\n                0xE9BA: 0x9B97,\n                0xE9BB: 0x9B9F,\n                0xE9BC: 0x9BA0,\n                0xE9BD: 0x9BA8,\n                0xE9BE: 0x9BB4,\n                0xE9BF: 0x9BC0,\n                0xE9C0: 0x9BCA,\n                0xE9C1: 0x9BB9,\n                0xE9C2: 0x9BC6,\n                0xE9C3: 0x9BCF,\n                0xE9C4: 0x9BD1,\n                0xE9C5: 0x9BD2,\n                0xE9C6: 0x9BE3,\n                0xE9C7: 0x9BE2,\n                0xE9C8: 0x9BE4,\n                0xE9C9: 0x9BD4,\n                0xE9CA: 0x9BE1,\n                0xE9CB: 0x9C3A,\n                0xE9CC: 0x9BF2,\n                0xE9CD: 0x9BF1,\n                0xE9CE: 0x9BF0,\n                0xE9CF: 0x9C15,\n                0xE9D0: 0x9C14,\n                0xE9D1: 0x9C09,\n                0xE9D2: 0x9C13,\n                0xE9D3: 0x9C0C,\n                0xE9D4: 0x9C06,\n                0xE9D5: 0x9C08,\n                0xE9D6: 0x9C12,\n                0xE9D7: 0x9C0A,\n                0xE9D8: 0x9C04,\n                0xE9D9: 0x9C2E,\n                0xE9DA: 0x9C1B,\n                0xE9DB: 0x9C25,\n                0xE9DC: 0x9C24,\n                0xE9DD: 0x9C21,\n                0xE9DE: 0x9C30,\n                0xE9DF: 0x9C47,\n                0xE9E0: 0x9C32,\n                0xE9E1: 0x9C46,\n                0xE9E2: 0x9C3E,\n                0xE9E3: 0x9C5A,\n                0xE9E4: 0x9C60,\n                0xE9E5: 0x9C67,\n                0xE9E6: 0x9C76,\n                0xE9E7: 0x9C78,\n                0xE9E8: 0x9CE7,\n                0xE9E9: 0x9CEC,\n                0xE9EA: 0x9CF0,\n                0xE9EB: 0x9D09,\n                0xE9EC: 0x9D08,\n                0xE9ED: 0x9CEB,\n                0xE9EE: 0x9D03,\n                0xE9EF: 0x9D06,\n                0xE9F0: 0x9D2A,\n                0xE9F1: 0x9D26,\n                0xE9F2: 0x9DAF,\n                0xE9F3: 0x9D23,\n                0xE9F4: 0x9D1F,\n                0xE9F5: 0x9D44,\n                0xE9F6: 0x9D15,\n                0xE9F7: 0x9D12,\n                0xE9F8: 0x9D41,\n                0xE9F9: 0x9D3F,\n                0xE9FA: 0x9D3E,\n                0xE9FB: 0x9D46,\n                0xE9FC: 0x9D48,\n                0xEA40: 0x9D5D,\n                0xEA41: 0x9D5E,\n                0xEA42: 0x9D64,\n                0xEA43: 0x9D51,\n                0xEA44: 0x9D50,\n                0xEA45: 0x9D59,\n                0xEA46: 0x9D72,\n                0xEA47: 0x9D89,\n                0xEA48: 0x9D87,\n                0xEA49: 0x9DAB,\n                0xEA4A: 0x9D6F,\n                0xEA4B: 0x9D7A,\n                0xEA4C: 0x9D9A,\n                0xEA4D: 0x9DA4,\n                0xEA4E: 0x9DA9,\n                0xEA4F: 0x9DB2,\n                0xEA50: 0x9DC4,\n                0xEA51: 0x9DC1,\n                0xEA52: 0x9DBB,\n                0xEA53: 0x9DB8,\n                0xEA54: 0x9DBA,\n                0xEA55: 0x9DC6,\n                0xEA56: 0x9DCF,\n                0xEA57: 0x9DC2,\n                0xEA58: 0x9DD9,\n                0xEA59: 0x9DD3,\n                0xEA5A: 0x9DF8,\n                0xEA5B: 0x9DE6,\n                0xEA5C: 0x9DED,\n                0xEA5D: 0x9DEF,\n                0xEA5E: 0x9DFD,\n                0xEA5F: 0x9E1A,\n                0xEA60: 0x9E1B,\n                0xEA61: 0x9E1E,\n                0xEA62: 0x9E75,\n                0xEA63: 0x9E79,\n                0xEA64: 0x9E7D,\n                0xEA65: 0x9E81,\n                0xEA66: 0x9E88,\n                0xEA67: 0x9E8B,\n                0xEA68: 0x9E8C,\n                0xEA69: 0x9E92,\n                0xEA6A: 0x9E95,\n                0xEA6B: 0x9E91,\n                0xEA6C: 0x9E9D,\n                0xEA6D: 0x9EA5,\n                0xEA6E: 0x9EA9,\n                0xEA6F: 0x9EB8,\n                0xEA70: 0x9EAA,\n                0xEA71: 0x9EAD,\n                0xEA72: 0x9761,\n                0xEA73: 0x9ECC,\n                0xEA74: 0x9ECE,\n                0xEA75: 0x9ECF,\n                0xEA76: 0x9ED0,\n                0xEA77: 0x9ED4,\n                0xEA78: 0x9EDC,\n                0xEA79: 0x9EDE,\n                0xEA7A: 0x9EDD,\n                0xEA7B: 0x9EE0,\n                0xEA7C: 0x9EE5,\n                0xEA7D: 0x9EE8,\n                0xEA7E: 0x9EEF,\n                0xEA80: 0x9EF4,\n                0xEA81: 0x9EF6,\n                0xEA82: 0x9EF7,\n                0xEA83: 0x9EF9,\n                0xEA84: 0x9EFB,\n                0xEA85: 0x9EFC,\n                0xEA86: 0x9EFD,\n                0xEA87: 0x9F07,\n                0xEA88: 0x9F08,\n                0xEA89: 0x76B7,\n                0xEA8A: 0x9F15,\n                0xEA8B: 0x9F21,\n                0xEA8C: 0x9F2C,\n                0xEA8D: 0x9F3E,\n                0xEA8E: 0x9F4A,\n                0xEA8F: 0x9F52,\n                0xEA90: 0x9F54,\n                0xEA91: 0x9F63,\n                0xEA92: 0x9F5F,\n                0xEA93: 0x9F60,\n                0xEA94: 0x9F61,\n                0xEA95: 0x9F66,\n                0xEA96: 0x9F67,\n                0xEA97: 0x9F6C,\n                0xEA98: 0x9F6A,\n                0xEA99: 0x9F77,\n                0xEA9A: 0x9F72,\n                0xEA9B: 0x9F76,\n                0xEA9C: 0x9F95,\n                0xEA9D: 0x9F9C,\n                0xEA9E: 0x9FA0,\n                0xEA9F: 0x582F,\n                0xEAA0: 0x69C7,\n                0xEAA1: 0x9059,\n                0xEAA2: 0x7464,\n                0xEAA3: 0x51DC,\n                0xEAA4: 0x7199,\n            };\n\n\n            /***/\n}),\n/* 9 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var GenericGF_1 = __webpack_require__(1);\n            var GenericGFPoly_1 = __webpack_require__(2);\n            function runEuclideanAlgorithm(field, a, b, R) {\n                var _a;\n                // Assume a's degree is >= b's\n                if (a.degree() < b.degree()) {\n                    _a = [b, a], a = _a[0], b = _a[1];\n                }\n                var rLast = a;\n                var r = b;\n                var tLast = field.zero;\n                var t = field.one;\n                // Run Euclidean algorithm until r's degree is less than R/2\n                while (r.degree() >= R / 2) {\n                    var rLastLast = rLast;\n                    var tLastLast = tLast;\n                    rLast = r;\n                    tLast = t;\n                    // Divide rLastLast by rLast, with quotient in q and remainder in r\n                    if (rLast.isZero()) {\n                        // Euclidean algorithm already terminated?\n                        return null;\n                    }\n                    r = rLastLast;\n                    var q = field.zero;\n                    var denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n                    var dltInverse = field.inverse(denominatorLeadingTerm);\n                    while (r.degree() >= rLast.degree() && !r.isZero()) {\n                        var degreeDiff = r.degree() - rLast.degree();\n                        var scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n                        q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n                        r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                    }\n                    t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n                    if (r.degree() >= rLast.degree()) {\n                        return null;\n                    }\n                }\n                var sigmaTildeAtZero = t.getCoefficient(0);\n                if (sigmaTildeAtZero === 0) {\n                    return null;\n                }\n                var inverse = field.inverse(sigmaTildeAtZero);\n                return [t.multiply(inverse), r.multiply(inverse)];\n            }\n            function findErrorLocations(field, errorLocator) {\n                // This is a direct application of Chien's search\n                var numErrors = errorLocator.degree();\n                if (numErrors === 1) {\n                    return [errorLocator.getCoefficient(1)];\n                }\n                var result = new Array(numErrors);\n                var errorCount = 0;\n                for (var i = 1; i < field.size && errorCount < numErrors; i++) {\n                    if (errorLocator.evaluateAt(i) === 0) {\n                        result[errorCount] = field.inverse(i);\n                        errorCount++;\n                    }\n                }\n                if (errorCount !== numErrors) {\n                    return null;\n                }\n                return result;\n            }\n            function findErrorMagnitudes(field, errorEvaluator, errorLocations) {\n                // This is directly applying Forney's Formula\n                var s = errorLocations.length;\n                var result = new Array(s);\n                for (var i = 0; i < s; i++) {\n                    var xiInverse = field.inverse(errorLocations[i]);\n                    var denominator = 1;\n                    for (var j = 0; j < s; j++) {\n                        if (i !== j) {\n                            denominator = field.multiply(denominator, GenericGF_1.addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n                        }\n                    }\n                    result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n                    if (field.generatorBase !== 0) {\n                        result[i] = field.multiply(result[i], xiInverse);\n                    }\n                }\n                return result;\n            }\n            function decode(bytes, twoS) {\n                var outputBytes = new Uint8ClampedArray(bytes.length);\n                outputBytes.set(bytes);\n                var field = new GenericGF_1.default(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n                var poly = new GenericGFPoly_1.default(field, outputBytes);\n                var syndromeCoefficients = new Uint8ClampedArray(twoS);\n                var error = false;\n                for (var s = 0; s < twoS; s++) {\n                    var evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n                    syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n                    if (evaluation !== 0) {\n                        error = true;\n                    }\n                }\n                if (!error) {\n                    return outputBytes;\n                }\n                var syndrome = new GenericGFPoly_1.default(field, syndromeCoefficients);\n                var sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n                if (sigmaOmega === null) {\n                    return null;\n                }\n                var errorLocations = findErrorLocations(field, sigmaOmega[0]);\n                if (errorLocations == null) {\n                    return null;\n                }\n                var errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n                for (var i = 0; i < errorLocations.length; i++) {\n                    var position = outputBytes.length - 1 - field.log(errorLocations[i]);\n                    if (position < 0) {\n                        return null;\n                    }\n                    outputBytes[position] = GenericGF_1.addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n                }\n                return outputBytes;\n            }\n            exports.decode = decode;\n\n\n            /***/\n}),\n/* 10 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            exports.VERSIONS = [\n                {\n                    infoBits: null,\n                    versionNumber: 1,\n                    alignmentPatternCenters: [],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 7,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 10,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 13,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 17,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: null,\n                    versionNumber: 2,\n                    alignmentPatternCenters: [6, 18],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 10,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 16,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: null,\n                    versionNumber: 3,\n                    alignmentPatternCenters: [6, 22],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 15,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: null,\n                    versionNumber: 4,\n                    alignmentPatternCenters: [6, 26],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 20,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 16,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: null,\n                    versionNumber: 5,\n                    alignmentPatternCenters: [6, 30],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 11 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 12 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: null,\n                    versionNumber: 6,\n                    alignmentPatternCenters: [6, 34],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 16,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x07C94,\n                    versionNumber: 7,\n                    alignmentPatternCenters: [6, 22, 38],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 20,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 14 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x085BC,\n                    versionNumber: 8,\n                    alignmentPatternCenters: [6, 24, 42],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 38 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 39 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 18 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 19 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 14 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x09A99,\n                    versionNumber: 9,\n                    alignmentPatternCenters: [6, 26, 46],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 36 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 20,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0A4D3,\n                    versionNumber: 10,\n                    alignmentPatternCenters: [6, 28, 50],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 18,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 68 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 69 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 43 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 44 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 19 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0BBF6,\n                    versionNumber: 11,\n                    alignmentPatternCenters: [6, 30, 54],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 20,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 1, dataCodewordsPerBlock: 50 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 51 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 23 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 12 },\n                                { numBlocks: 8, dataCodewordsPerBlock: 13 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0C762,\n                    versionNumber: 12,\n                    alignmentPatternCenters: [6, 32, 58],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 92 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 93 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 36 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 20 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 21 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 7, dataCodewordsPerBlock: 14 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0D847,\n                    versionNumber: 13,\n                    alignmentPatternCenters: [6, 34, 62],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 37 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 38 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 20 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 21 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 12, dataCodewordsPerBlock: 11 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0E60D,\n                    versionNumber: 14,\n                    alignmentPatternCenters: [6, 26, 46, 66],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 115 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 40 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 20,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 13 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x0F928,\n                    versionNumber: 15,\n                    alignmentPatternCenters: [6, 26, 48, 70],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 22,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 87 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 88 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 42 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 13 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x10B78,\n                    versionNumber: 16,\n                    alignmentPatternCenters: [6, 26, 50, 74],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 98 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 99 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 7, dataCodewordsPerBlock: 45 },\n                                { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [\n                                { numBlocks: 15, dataCodewordsPerBlock: 19 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1145D,\n                    versionNumber: 17,\n                    alignmentPatternCenters: [6, 30, 54, 78],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 1, dataCodewordsPerBlock: 107 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 1, dataCodewordsPerBlock: 22 },\n                                { numBlocks: 15, dataCodewordsPerBlock: 23 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                                { numBlocks: 17, dataCodewordsPerBlock: 15 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x12A17,\n                    versionNumber: 18,\n                    alignmentPatternCenters: [6, 30, 56, 82],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 120 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 121 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 9, dataCodewordsPerBlock: 43 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 44 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                                { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x13532,\n                    versionNumber: 19,\n                    alignmentPatternCenters: [6, 30, 58, 86],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 113 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 114 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 44 },\n                                { numBlocks: 11, dataCodewordsPerBlock: 45 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 17, dataCodewordsPerBlock: 21 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 9, dataCodewordsPerBlock: 13 },\n                                { numBlocks: 16, dataCodewordsPerBlock: 14 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x149A6,\n                    versionNumber: 20,\n                    alignmentPatternCenters: [6, 34, 62, 90],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 107 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 41 },\n                                { numBlocks: 13, dataCodewordsPerBlock: 42 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 15, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x15683,\n                    versionNumber: 21,\n                    alignmentPatternCenters: [6, 28, 50, 72, 94],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 116 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 117 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x168C9,\n                    versionNumber: 22,\n                    alignmentPatternCenters: [6, 26, 50, 74, 98],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 111 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 112 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 24,\n                            ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x177EC,\n                    versionNumber: 23,\n                    alignmentPatternCenters: [6, 30, 54, 74, 102],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 121 },\n                                { numBlocks: 5, dataCodewordsPerBlock: 122 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 16, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x18EC4,\n                    versionNumber: 24,\n                    alignmentPatternCenters: [6, 28, 54, 80, 106],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 117 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 45 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 30, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x191E1,\n                    versionNumber: 25,\n                    alignmentPatternCenters: [6, 32, 58, 84, 110],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 26,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 106 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 107 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 13, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1AFAB,\n                    versionNumber: 26,\n                    alignmentPatternCenters: [6, 30, 58, 86, 114],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 10, dataCodewordsPerBlock: 114 },\n                                { numBlocks: 2, dataCodewordsPerBlock: 115 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 28, dataCodewordsPerBlock: 22 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 33, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1B08E,\n                    versionNumber: 27,\n                    alignmentPatternCenters: [6, 34, 62, 90, 118],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 122 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 22, dataCodewordsPerBlock: 45 },\n                                { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 8, dataCodewordsPerBlock: 23 },\n                                { numBlocks: 26, dataCodewordsPerBlock: 24 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 12, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1CC1A,\n                    versionNumber: 28,\n                    alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 117 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 118 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 3, dataCodewordsPerBlock: 45 },\n                                { numBlocks: 23, dataCodewordsPerBlock: 46 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 31, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 31, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1D33F,\n                    versionNumber: 29,\n                    alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 7, dataCodewordsPerBlock: 116 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 117 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 21, dataCodewordsPerBlock: 45 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 46 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                                { numBlocks: 37, dataCodewordsPerBlock: 24 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 26, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1ED75,\n                    versionNumber: 30,\n                    alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 5, dataCodewordsPerBlock: 115 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 116 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 25, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 25, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x1F250,\n                    versionNumber: 31,\n                    alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                                { numBlocks: 3, dataCodewordsPerBlock: 116 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 29, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 42, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x209D5,\n                    versionNumber: 32,\n                    alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 10, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 35, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 35, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x216F0,\n                    versionNumber: 33,\n                    alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 17, dataCodewordsPerBlock: 115 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 21, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 29, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 19, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x228BA,\n                    versionNumber: 34,\n                    alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 116 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 44, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 59, dataCodewordsPerBlock: 16 },\n                                { numBlocks: 1, dataCodewordsPerBlock: 17 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x2379F,\n                    versionNumber: 35,\n                    alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 12, dataCodewordsPerBlock: 121 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 122 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 12, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 26, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 39, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 41, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x24B0B,\n                    versionNumber: 36,\n                    alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 121 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 122 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 6, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 34, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 46, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 64, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x2542E,\n                    versionNumber: 37,\n                    alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 17, dataCodewordsPerBlock: 122 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 29, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 49, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 24, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x26A64,\n                    versionNumber: 38,\n                    alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 4, dataCodewordsPerBlock: 122 },\n                                { numBlocks: 18, dataCodewordsPerBlock: 123 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 13, dataCodewordsPerBlock: 46 },\n                                { numBlocks: 32, dataCodewordsPerBlock: 47 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 48, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 42, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 32, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x27541,\n                    versionNumber: 39,\n                    alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 20, dataCodewordsPerBlock: 117 },\n                                { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 40, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 7, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 43, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 10, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 67, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    infoBits: 0x28C69,\n                    versionNumber: 40,\n                    alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\n                    errorCorrectionLevels: [\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 19, dataCodewordsPerBlock: 118 },\n                                { numBlocks: 6, dataCodewordsPerBlock: 119 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 28,\n                            ecBlocks: [\n                                { numBlocks: 18, dataCodewordsPerBlock: 47 },\n                                { numBlocks: 31, dataCodewordsPerBlock: 48 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 34, dataCodewordsPerBlock: 24 },\n                                { numBlocks: 34, dataCodewordsPerBlock: 25 },\n                            ],\n                        },\n                        {\n                            ecCodewordsPerBlock: 30,\n                            ecBlocks: [\n                                { numBlocks: 20, dataCodewordsPerBlock: 15 },\n                                { numBlocks: 61, dataCodewordsPerBlock: 16 },\n                            ],\n                        },\n                    ],\n                },\n            ];\n\n\n            /***/\n}),\n/* 11 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var BitMatrix_1 = __webpack_require__(0);\n            function squareToQuadrilateral(p1, p2, p3, p4) {\n                var dx3 = p1.x - p2.x + p3.x - p4.x;\n                var dy3 = p1.y - p2.y + p3.y - p4.y;\n                if (dx3 === 0 && dy3 === 0) { // Affine\n                    return {\n                        a11: p2.x - p1.x,\n                        a12: p2.y - p1.y,\n                        a13: 0,\n                        a21: p3.x - p2.x,\n                        a22: p3.y - p2.y,\n                        a23: 0,\n                        a31: p1.x,\n                        a32: p1.y,\n                        a33: 1,\n                    };\n                }\n                else {\n                    var dx1 = p2.x - p3.x;\n                    var dx2 = p4.x - p3.x;\n                    var dy1 = p2.y - p3.y;\n                    var dy2 = p4.y - p3.y;\n                    var denominator = dx1 * dy2 - dx2 * dy1;\n                    var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n                    var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n                    return {\n                        a11: p2.x - p1.x + a13 * p2.x,\n                        a12: p2.y - p1.y + a13 * p2.y,\n                        a13: a13,\n                        a21: p4.x - p1.x + a23 * p4.x,\n                        a22: p4.y - p1.y + a23 * p4.y,\n                        a23: a23,\n                        a31: p1.x,\n                        a32: p1.y,\n                        a33: 1,\n                    };\n                }\n            }\n            function quadrilateralToSquare(p1, p2, p3, p4) {\n                // Here, the adjoint serves as the inverse:\n                var sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n                return {\n                    a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n                    a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n                    a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n                    a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n                    a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n                    a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n                    a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n                    a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n                    a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n                };\n            }\n            function times(a, b) {\n                return {\n                    a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n                    a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n                    a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n                    a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n                    a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n                    a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n                    a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n                    a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n                    a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n                };\n            }\n            function extract(image, location) {\n                var qToS = quadrilateralToSquare({ x: 3.5, y: 3.5 }, { x: location.dimension - 3.5, y: 3.5 }, { x: location.dimension - 6.5, y: location.dimension - 6.5 }, { x: 3.5, y: location.dimension - 3.5 });\n                var sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n                var transform = times(sToQ, qToS);\n                var matrix = BitMatrix_1.BitMatrix.createEmpty(location.dimension, location.dimension);\n                var mappingFunction = function (x, y) {\n                    var denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n                    return {\n                        x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n                        y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n                    };\n                };\n                for (var y = 0; y < location.dimension; y++) {\n                    for (var x = 0; x < location.dimension; x++) {\n                        var xValue = x + 0.5;\n                        var yValue = y + 0.5;\n                        var sourcePixel = mappingFunction(xValue, yValue);\n                        matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n                    }\n                }\n                return {\n                    matrix: matrix,\n                    mappingFunction: mappingFunction,\n                };\n            }\n            exports.extract = extract;\n\n\n            /***/\n}),\n/* 12 */\n/***/ (function (module, exports, __webpack_require__) {\n\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", { value: true });\n            var MAX_FINDERPATTERNS_TO_SEARCH = 4;\n            var MIN_QUAD_RATIO = 0.5;\n            var MAX_QUAD_RATIO = 1.5;\n            var distance = function (a, b) { return Math.sqrt(Math.pow((b.x - a.x), 2) + Math.pow((b.y - a.y), 2)); };\n            function sum(values) {\n                return values.reduce(function (a, b) { return a + b; });\n            }\n            // Takes three finder patterns and organizes them into topLeft, topRight, etc\n            function reorderFinderPatterns(pattern1, pattern2, pattern3) {\n                var _a, _b, _c, _d;\n                // Find distances between pattern centers\n                var oneTwoDistance = distance(pattern1, pattern2);\n                var twoThreeDistance = distance(pattern2, pattern3);\n                var oneThreeDistance = distance(pattern1, pattern3);\n                var bottomLeft;\n                var topLeft;\n                var topRight;\n                // Assume one closest to other two is B; A and C will just be guesses at first\n                if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n                    _a = [pattern2, pattern1, pattern3], bottomLeft = _a[0], topLeft = _a[1], topRight = _a[2];\n                }\n                else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n                    _b = [pattern1, pattern2, pattern3], bottomLeft = _b[0], topLeft = _b[1], topRight = _b[2];\n                }\n                else {\n                    _c = [pattern1, pattern3, pattern2], bottomLeft = _c[0], topLeft = _c[1], topRight = _c[2];\n                }\n                // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n                // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n                // we've got it flipped around and should swap topRight and bottomLeft.\n                if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n                    _d = [topRight, bottomLeft], bottomLeft = _d[0], topRight = _d[1];\n                }\n                return { bottomLeft: bottomLeft, topLeft: topLeft, topRight: topRight };\n            }\n            // Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\n            function computeDimension(topLeft, topRight, bottomLeft, matrix) {\n                var moduleSize = (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n                    sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n                    sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n                    sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) / 4;\n                if (moduleSize < 1) {\n                    throw new Error(\"Invalid module size\");\n                }\n                var topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n                var sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n                var dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n                switch (dimension % 4) {\n                    case 0:\n                        dimension++;\n                        break;\n                    case 2:\n                        dimension--;\n                        break;\n                }\n                return { dimension: dimension, moduleSize: moduleSize };\n            }\n            // Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n            // Returns an array of elements, representing the pixel size of the black white run.\n            // Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n            function countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\n                var switchPoints = [{ x: Math.floor(origin.x), y: Math.floor(origin.y) }];\n                var steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n                var fromX;\n                var fromY;\n                var toX;\n                var toY;\n                if (steep) {\n                    fromX = Math.floor(origin.y);\n                    fromY = Math.floor(origin.x);\n                    toX = Math.floor(end.y);\n                    toY = Math.floor(end.x);\n                }\n                else {\n                    fromX = Math.floor(origin.x);\n                    fromY = Math.floor(origin.y);\n                    toX = Math.floor(end.x);\n                    toY = Math.floor(end.y);\n                }\n                var dx = Math.abs(toX - fromX);\n                var dy = Math.abs(toY - fromY);\n                var error = Math.floor(-dx / 2);\n                var xStep = fromX < toX ? 1 : -1;\n                var yStep = fromY < toY ? 1 : -1;\n                var currentPixel = true;\n                // Loop up until x == toX, but not beyond\n                for (var x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n                    // Does current pixel mean we have moved white to black or vice versa?\n                    // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n                    // color, advance to next state or end if we are in state 2 already\n                    var realX = steep ? y : x;\n                    var realY = steep ? x : y;\n                    if (matrix.get(realX, realY) !== currentPixel) {\n                        currentPixel = !currentPixel;\n                        switchPoints.push({ x: realX, y: realY });\n                        if (switchPoints.length === length + 1) {\n                            break;\n                        }\n                    }\n                    error += dy;\n                    if (error > 0) {\n                        if (y === toY) {\n                            break;\n                        }\n                        y += yStep;\n                        error -= dx;\n                    }\n                }\n                var distances = [];\n                for (var i = 0; i < length; i++) {\n                    if (switchPoints[i] && switchPoints[i + 1]) {\n                        distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n                    }\n                    else {\n                        distances.push(0);\n                    }\n                }\n                return distances;\n            }\n            // Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n            // along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n            // of the black white run. Takes a length which represents the number of switches from black to white to look for.\n            function countBlackWhiteRun(origin, end, matrix, length) {\n                var _a;\n                var rise = end.y - origin.y;\n                var run = end.x - origin.x;\n                var towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n                var awayFromEnd = countBlackWhiteRunTowardsPoint(origin, { x: origin.x - run, y: origin.y - rise }, matrix, Math.ceil(length / 2));\n                var middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n                return (_a = awayFromEnd.concat(middleValue)).concat.apply(_a, towardsEnd);\n            }\n            // Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n            // that is the amount the run diverges from the expected ratio\n            function scoreBlackWhiteRun(sequence, ratios) {\n                var averageSize = sum(sequence) / sum(ratios);\n                var error = 0;\n                ratios.forEach(function (ratio, i) {\n                    error += Math.pow((sequence[i] - ratio * averageSize), 2);\n                });\n                return { averageSize: averageSize, error: error };\n            }\n            // Takes an X,Y point and an array of sizes and scores the point against those ratios.\n            // For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n            // against that.\n            function scorePattern(point, ratios, matrix) {\n                try {\n                    var horizontalRun = countBlackWhiteRun(point, { x: -1, y: point.y }, matrix, ratios.length);\n                    var verticalRun = countBlackWhiteRun(point, { x: point.x, y: -1 }, matrix, ratios.length);\n                    var topLeftPoint = {\n                        x: Math.max(0, point.x - point.y) - 1,\n                        y: Math.max(0, point.y - point.x) - 1,\n                    };\n                    var topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n                    var bottomLeftPoint = {\n                        x: Math.min(matrix.width, point.x + point.y) + 1,\n                        y: Math.min(matrix.height, point.y + point.x) + 1,\n                    };\n                    var bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n                    var horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n                    var vertError = scoreBlackWhiteRun(verticalRun, ratios);\n                    var diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n                    var diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n                    var ratioError = Math.sqrt(horzError.error * horzError.error +\n                        vertError.error * vertError.error +\n                        diagDownError.error * diagDownError.error +\n                        diagUpError.error * diagUpError.error);\n                    var avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n                    var sizeError = (Math.pow((horzError.averageSize - avgSize), 2) +\n                        Math.pow((vertError.averageSize - avgSize), 2) +\n                        Math.pow((diagDownError.averageSize - avgSize), 2) +\n                        Math.pow((diagUpError.averageSize - avgSize), 2)) / avgSize;\n                    return ratioError + sizeError;\n                }\n                catch (_a) {\n                    return Infinity;\n                }\n            }\n            function recenterLocation(matrix, p) {\n                var leftX = Math.round(p.x);\n                while (matrix.get(leftX, Math.round(p.y))) {\n                    leftX--;\n                }\n                var rightX = Math.round(p.x);\n                while (matrix.get(rightX, Math.round(p.y))) {\n                    rightX++;\n                }\n                var x = (leftX + rightX) / 2;\n                var topY = Math.round(p.y);\n                while (matrix.get(Math.round(x), topY)) {\n                    topY--;\n                }\n                var bottomY = Math.round(p.y);\n                while (matrix.get(Math.round(x), bottomY)) {\n                    bottomY++;\n                }\n                var y = (topY + bottomY) / 2;\n                return { x: x, y: y };\n            }\n            function locate(matrix) {\n                var finderPatternQuads = [];\n                var activeFinderPatternQuads = [];\n                var alignmentPatternQuads = [];\n                var activeAlignmentPatternQuads = [];\n                var _loop_1 = function (y) {\n                    var length_1 = 0;\n                    var lastBit = false;\n                    var scans = [0, 0, 0, 0, 0];\n                    var _loop_2 = function (x) {\n                        var v = matrix.get(x, y);\n                        if (v === lastBit) {\n                            length_1++;\n                        }\n                        else {\n                            scans = [scans[1], scans[2], scans[3], scans[4], length_1];\n                            length_1 = 1;\n                            lastBit = v;\n                            // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n                            var averageFinderPatternBlocksize = sum(scans) / 7;\n                            var validFinderPattern = Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                                Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                                Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n                                Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                                Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                                !v; // And make sure the current pixel is white since finder patterns are bordered in white\n                            // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n                            var averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n                            var validAlignmentPattern = Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                                Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                                Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                                v; // Is the current pixel black since alignment patterns are bordered in black\n                            if (validFinderPattern) {\n                                // Compute the start and end x values of the large center black square\n                                var endX_1 = x - scans[3] - scans[4];\n                                var startX_1 = endX_1 - scans[2];\n                                var line = { startX: startX_1, endX: endX_1, y: y };\n                                // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                                // that line as the starting point.\n                                var matchingQuads = activeFinderPatternQuads.filter(function (q) {\n                                    return (startX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\n                                        (endX_1 >= q.bottom.startX && startX_1 <= q.bottom.endX) ||\n                                        (startX_1 <= q.bottom.startX && endX_1 >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO));\n                                });\n                                if (matchingQuads.length > 0) {\n                                    matchingQuads[0].bottom = line;\n                                }\n                                else {\n                                    activeFinderPatternQuads.push({ top: line, bottom: line });\n                                }\n                            }\n                            if (validAlignmentPattern) {\n                                // Compute the start and end x values of the center black square\n                                var endX_2 = x - scans[4];\n                                var startX_2 = endX_2 - scans[3];\n                                var line = { startX: startX_2, y: y, endX: endX_2 };\n                                // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                                // that line as the starting point.\n                                var matchingQuads = activeAlignmentPatternQuads.filter(function (q) {\n                                    return (startX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\n                                        (endX_2 >= q.bottom.startX && startX_2 <= q.bottom.endX) ||\n                                        (startX_2 <= q.bottom.startX && endX_2 >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO));\n                                });\n                                if (matchingQuads.length > 0) {\n                                    matchingQuads[0].bottom = line;\n                                }\n                                else {\n                                    activeAlignmentPatternQuads.push({ top: line, bottom: line });\n                                }\n                            }\n                        }\n                    };\n                    for (var x = -1; x <= matrix.width; x++) {\n                        _loop_2(x);\n                    }\n                    finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) { return q.bottom.y !== y && q.bottom.y - q.top.y >= 2; }));\n                    activeFinderPatternQuads = activeFinderPatternQuads.filter(function (q) { return q.bottom.y === y; });\n                    alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads.filter(function (q) { return q.bottom.y !== y; }));\n                    activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(function (q) { return q.bottom.y === y; });\n                };\n                for (var y = 0; y <= matrix.height; y++) {\n                    _loop_1(y);\n                }\n                finderPatternQuads.push.apply(finderPatternQuads, activeFinderPatternQuads.filter(function (q) { return q.bottom.y - q.top.y >= 2; }));\n                alignmentPatternQuads.push.apply(alignmentPatternQuads, activeAlignmentPatternQuads);\n                var finderPatternGroups = finderPatternQuads\n                    .filter(function (q) { return q.bottom.y - q.top.y >= 2; }) // All quads must be at least 2px tall since the center square is larger than a block\n                    .map(function (q) {\n                        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n                        var y = (q.top.y + q.bottom.y + 1) / 2;\n                        if (!matrix.get(Math.round(x), Math.round(y))) {\n                            return;\n                        }\n                        var lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\n                        var size = sum(lengths) / lengths.length;\n                        var score = scorePattern({ x: Math.round(x), y: Math.round(y) }, [1, 1, 3, 1, 1], matrix);\n                        return { score: score, x: x, y: y, size: size };\n                    })\n                    .filter(function (q) { return !!q; }) // Filter out any rejected quads from above\n                    .sort(function (a, b) { return a.score - b.score; })\n                    // Now take the top finder pattern options and try to find 2 other options with a similar size.\n                    .map(function (point, i, finderPatterns) {\n                        if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\n                            return null;\n                        }\n                        var otherPoints = finderPatterns\n                            .filter(function (p, ii) { return i !== ii; })\n                            .map(function (p) { return ({ x: p.x, y: p.y, score: p.score + (Math.pow((p.size - point.size), 2)) / point.size, size: p.size }); })\n                            .sort(function (a, b) { return a.score - b.score; });\n                        if (otherPoints.length < 2) {\n                            return null;\n                        }\n                        var score = point.score + otherPoints[0].score + otherPoints[1].score;\n                        return { points: [point].concat(otherPoints.slice(0, 2)), score: score };\n                    })\n                    .filter(function (q) { return !!q; }) // Filter out any rejected finder patterns from above\n                    .sort(function (a, b) { return a.score - b.score; });\n                if (finderPatternGroups.length === 0) {\n                    return null;\n                }\n                var _a = reorderFinderPatterns(finderPatternGroups[0].points[0], finderPatternGroups[0].points[1], finderPatternGroups[0].points[2]), topRight = _a.topRight, topLeft = _a.topLeft, bottomLeft = _a.bottomLeft;\n                var alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n                var result = [];\n                if (alignment) {\n                    result.push({\n                        alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\n                        bottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\n                        dimension: alignment.dimension,\n                        topLeft: { x: topLeft.x, y: topLeft.y },\n                        topRight: { x: topRight.x, y: topRight.y },\n                    });\n                }\n                // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n                // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n                // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n                // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n                // attempts at decoding harder images.\n                var midTopRight = recenterLocation(matrix, topRight);\n                var midTopLeft = recenterLocation(matrix, topLeft);\n                var midBottomLeft = recenterLocation(matrix, bottomLeft);\n                var centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n                if (centeredAlignment) {\n                    result.push({\n                        alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\n                        bottomLeft: { x: midBottomLeft.x, y: midBottomLeft.y },\n                        topLeft: { x: midTopLeft.x, y: midTopLeft.y },\n                        topRight: { x: midTopRight.x, y: midTopRight.y },\n                        dimension: centeredAlignment.dimension,\n                    });\n                }\n                if (result.length === 0) {\n                    return null;\n                }\n                return result;\n            }\n            exports.locate = locate;\n            function findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft) {\n                var _a;\n                // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n                // We'll use these to help find the alignment pattern but also later when we do the extraction.\n                var dimension;\n                var moduleSize;\n                try {\n                    (_a = computeDimension(topLeft, topRight, bottomLeft, matrix), dimension = _a.dimension, moduleSize = _a.moduleSize);\n                }\n                catch (e) {\n                    return null;\n                }\n                // Now find the alignment pattern\n                var bottomRightFinderPattern = {\n                    x: topRight.x - topLeft.x + bottomLeft.x,\n                    y: topRight.y - topLeft.y + bottomLeft.y,\n                };\n                var modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n                var correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n                var expectedAlignmentPattern = {\n                    x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n                    y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n                };\n                var alignmentPatterns = alignmentPatternQuads\n                    .map(function (q) {\n                        var x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n                        var y = (q.top.y + q.bottom.y + 1) / 2;\n                        if (!matrix.get(Math.floor(x), Math.floor(y))) {\n                            return;\n                        }\n                        var sizeScore = scorePattern({ x: Math.floor(x), y: Math.floor(y) }, [1, 1, 1], matrix);\n                        var score = sizeScore + distance({ x: x, y: y }, expectedAlignmentPattern);\n                        return { x: x, y: y, score: score };\n                    })\n                    .filter(function (v) { return !!v; })\n                    .sort(function (a, b) { return a.score - b.score; });\n                // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n                // so we can only use our best guess.\n                var alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n                return { alignmentPattern: alignmentPattern, dimension: dimension };\n            }\n\n\n            /***/\n})\n/******/])[\"default\"];\n});",
        "output": "str",
        "x": 330,
        "y": 600,
        "wires": [
            [
                "500e6e8762d03dc4"
            ]
        ]
    },
    {
        "id": "fba816866acc2a48",
        "type": "function",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "担当客先データを変数に保存",
        "func": "var targetCustomers = msg.payload[0].customer;\n\n// データを変数に保存\nflow.set('targetCustomers', targetCustomers);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 440,
        "wires": [
            [
                "c69985083cce9659"
            ]
        ]
    },
    {
        "id": "1f55f66d76e315e8",
        "type": "function",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "フィルター処理",
        "func": "var targetCustomers = flow.get('targetCustomers');\n\nmsg.targetCustomers = targetCustomers;\n\nif (targetCustomers === '全部'){\n\n    msg.filteredData = msg.payload;\n    \n}else{\n\n    var splitTargetCustomers = targetCustomers.split(',');\n    var hasOther = splitTargetCustomers.includes('その他');\n\n    if (hasOther) {\n\n        // 'その他' が含まれている場合の処理\n        splitTargetCustomers = splitTargetCustomers.filter(function (item) {\n            return item !== 'その他';\n        });\n\n        var maincustomers = [\n            'LIXIL（本社）',\n            'TOTOバスクリエイト',\n            'TOTOハイリビング',\n            'TOTO(株)トイレ空間',\n            'TOTO(株) 水栓事業部',\n            'TOTO(株)水電生産管理Ｇ',\n            'TOTO(株) 電温製造課',\n            'ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ(旧 高木工業)',\n            'YKK AP',\n            'コムラ',\n            '有光工業㈱',\n            '信和工業',\n            'アイチ',\n            '泰成興業',\n            '相互ネジ',\n            '大宝工業 関西カンパニー',\n            '㈱三栄商会',\n            '林口工業㈱'\n        ];\n\n        var filteredData1 = msg.payload.filter(item => splitTargetCustomers.includes(item.customer));\n        var filteredData2 = msg.payload.filter(item => !maincustomers.includes(item.customer));\n\n        msg.filteredData1 = filteredData1;\n        msg.filteredData2 = filteredData2;\n\n        var filteredData = filteredData1.concat(filteredData2);\n\n        filteredData.sort(function (a, b) {\n            // 顧客名で昇順にソート\n            return a.customer.localeCompare(b.customer);\n        });\n\n        msg.payload = filteredData;\n\n    }else{\n        var filteredData = msg.payload.filter(item => splitTargetCustomers.includes(item.customer));\n        msg.payload = filteredData;\n\n    }    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "8c4b6c9bf2ca4ee9"
            ]
        ]
    },
    {
        "id": "a4f5eacd9bfd42fa",
        "type": "json",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 380,
        "wires": [
            [
                "17c0dfe423a36f83"
            ]
        ]
    },
    {
        "id": "a505456fc11189c3",
        "type": "catch",
        "z": "2618fdb18c108f25",
        "g": "0ed35a95be191e09",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 720,
        "wires": [
            [
                "6770c6492157f206"
            ]
        ]
    },
    {
        "id": "6770c6492157f206",
        "type": "function",
        "z": "2618fdb18c108f25",
        "g": "0ed35a95be191e09",
        "name": "function 3",
        "func": "msg.payload.error = msg.error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 720,
        "wires": [
            [
                "fe2d5ccfa167a5ad"
            ]
        ]
    },
    {
        "id": "fe2d5ccfa167a5ad",
        "type": "file",
        "z": "2618fdb18c108f25",
        "g": "0ed35a95be191e09",
        "name": "",
        "filename": "/home/kuwata/ktrg/error_msglog.text",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 510,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c69985083cce9659",
        "type": "change",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "select*from shipping where delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, groupname, workername, COUNT(*) AS orderquantity FROM shipping WHERE status in ('0','1','2') GROUP BY shippingdate, customer, deliveryto, groupname, workingday, workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "a71cb13135052e44"
            ]
        ]
    },
    {
        "id": "38da9040bb23928d",
        "type": "comment",
        "z": "2618fdb18c108f25",
        "name": "errorLog",
        "info": "",
        "x": 100,
        "y": 680,
        "wires": []
    },
    {
        "id": "6a7ce4c44b2fa0bc",
        "type": "websocket in",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "server": "1c375d0f9e74dfe4",
        "client": "",
        "x": 260,
        "y": 480,
        "wires": [
            [
                "a9cfaae58d890233"
            ]
        ]
    },
    {
        "id": "a9cfaae58d890233",
        "type": "change",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM  request  WHERE status=0;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 480,
        "wires": [
            [
                "30591719828d70ee"
            ]
        ]
    },
    {
        "id": "30591719828d70ee",
        "type": "mysql",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 740,
        "y": 480,
        "wires": [
            [
                "cff357aeeaf2a1df"
            ]
        ]
    },
    {
        "id": "cff357aeeaf2a1df",
        "type": "websocket out",
        "z": "2618fdb18c108f25",
        "g": "dbfeb543461d5f6c",
        "name": "",
        "server": "1c375d0f9e74dfe4",
        "client": "",
        "x": 1120,
        "y": 480,
        "wires": []
    },
    {
        "id": "3d9fdbb2d5b1fbd4",
        "type": "http response",
        "z": "cc9e32934109e012",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "653578f24adf8462",
        "type": "template",
        "z": "cc9e32934109e012",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n  \n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">入庫<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <div class=\"col-5\">\n          <h1 class=\"mb-1\">入庫作業</h1>\n        </div>\n        <div class=\"col-4\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"stock-storage\" onclick=\"saveFormDataAndRedirect(this.id)\">ストック置場所を読込</button>\n        </div>\n        <div class=\"col-3\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"product-infor\" onclick=\"saveFormDataAndRedirect(this.id)\">製品情報を読込</button> \n        </div> \n      </div>\n\n      <form method=\"post\" name=\"myform\" id=\"myform\" onreset=\"clearForm()\">\n      \n        <div class=\"info my-4\">\n          <input type=\"hidden\" class=\"form-control form-control-lg col-form-label\" id=\"workingday\" name=\"workingday\">\n          <label for=\"location\"  class=\"col-4 col-form-label fs-5\">ストック置場所：</label>\n          <div class=\"col-12\">\n            <select id=\"location\" name=\"location\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n              <option value=\"\" disabled selected hidden></option> \n                {{#choices}}\n                <option>{{.}}</option>\n                {{/choices}}\n              </select>\n          </div>\n          <fieldset class=\"border p-2 mt-3\">\n            <legend class=\"col-form-label fs-5\">【 製品情報 】</legend>\n\n            <div class=\"col-10 mt-3\">\n              <legend class=\"col-form-label fs-5\">ものの区分：</legend>\n              <div class=\"btn-group\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice1\" name=\"category\" value=\"半製品\"><span class=\"radio-text-lg\">半製品</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice2\" name=\"category\" value=\"完成品（梱包前）\"><span class=\"radio-text-lg\">完成品（梱包前）</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice3\" name=\"category\" value=\"完成品（梱包済）\"><span class=\"radio-text-lg\">完成品（梱包済）</span>\n                </label>\n              </div>\n            </div>\n          \n            <div class=\"col-10 mt-3\">\n              <input type=\"text\" class=\"form-control form-control-lg col-form-label\" id=\"customer\" name=\"customer\" placeholder=\"得意先：\">\n            </div>  \n                      \n            <div class=\"col-10 mt-3\">\n              <input type=\"text\" class=\"form-control form-control-lg col-form-label\" id=\"product-number\" name=\"product-number\" placeholder=\"品番：\">\n            </div>\n\n            <div class=\"col-10 mt-3\">\n              <input type=\"number\" class=\"form-control form-control-lg col-form-label\" id=\"quantity\" name=\"quantity\" placeholder=\"数量：\">\n            </div> \n\n            <div class=\"col-10 mt-3\">\n              <input type=\"number\" class=\"form-control form-control-lg col-form-label\" id=\"serial-number\" name=\"serial-number\" placeholder=\"製造番号：\">\n            </div>  \n\n          </fieldset>\n\n          <!-- hidden フィールド -->\n          <input type=\"hidden\" id=\"storedStaffCode\" name=\"storedStaffCode\" value=\"\">\n          <input type=\"hidden\" id=\"storedStaffName\" name=\"storedStaffName\" value=\"\">\n\n          <div class=\"col-10 my-4\"> \n            <input type=\"button\" value=\"送信\" class=\"btn btn-primary btn-lg\" id=\"submitButton\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\"> \n          </div>\n          \n        </div>\n\n      </form>\n\n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>\n    \n  </body>\n</html>\n",
        "output": "str",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "3d9fdbb2d5b1fbd4"
            ]
        ]
    },
    {
        "id": "1c7ad6b885d2c8a0",
        "type": "template",
        "z": "cc9e32934109e012",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n}\n\n.table-container thead {\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n/* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n/* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n}\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "653578f24adf8462"
            ]
        ]
    },
    {
        "id": "d9eb0950a37aac5e",
        "type": "template",
        "z": "cc9e32934109e012",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n    // セッションストレージから名前を取得\n    let storedStaffName = sessionStorage.getItem('staffName');\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n    // スタッフコードとスタッフネームをセッションストレージから取得\n    document.getElementById('storedStaffCode').value = storedStaffCode;\n    document.getElementById('storedStaffName').value = storedStaffName;\n\n});\n\nfunction clearForm() {\n\n    sessionStorage.removeItem('formData');\n    sessionStorage.removeItem('selectedButton');\n    sessionStorage.removeItem('qrData');\n    sessionStorage.removeItem('currentPageURL');\n    \n    document.getElementById(\"customer\").value = \"\";\n    document.getElementById(\"product-number\").value = \"\";\n    document.getElementById(\"quantity\").value = \"\";\n    document.getElementById(\"serial-number\").value = \"\";\n    document.getElementById(\"location\").value = \"\";\n\n    let categoryChoices = document.querySelectorAll('input[name=\"category\"]');\n    categoryChoices.forEach(function (choice) {\n        choice.checked = false;\n    });\n\n    sessionStorage.removeItem('formData');\n    sessionStorage.removeItem('selectedButton');\n    sessionStorage.removeItem('qrData');\n    sessionStorage.removeItem('currentPageURL');\n}\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    let myForm = document.getElementById('myform');\n    // フォームの内容をオブジェクトとしてシリアライズ\n    let formData = {};\n    for (let element of myForm.elements) {\n        if (element.name) {\n            formData[element.name] = element.value;\n        }\n    }\n    sessionStorage.setItem('formData', JSON.stringify(formData));\n\n    // ラジオボタン要素を取得\n    let categoryChoice1 = document.getElementById(\"categoryChoice1\");\n    let categoryChoice2 = document.getElementById(\"categoryChoice2\");\n    let categoryChoice3 = document.getElementById(\"categoryChoice3\");\n\n    // ラジオボタン選択状態が変更されたときの処理\n    categoryChoice1.addEventListener(\"change\", function () {\n        if (categoryChoice1.checked) {\n            // ラジオボタン1が選択された場合の処理\n            sessionStorage.setItem(\"categoryChoice\", \"半製品\");\n        }\n    });\n\n    categoryChoice2.addEventListener(\"change\", function () {\n        if (categoryChoice2.checked) {\n            // ラジオボタン2が選択された場合の処理\n            sessionStorage.setItem(\"categoryChoice\", \"完成品（梱包前）\");\n        }\n    });\n\n    categoryChoice3.addEventListener(\"change\", function () {\n        if (categoryChoice3.checked) {\n            // ラジオボタン3が選択された場合の処理\n            sessionStorage.setItem(\"categoryChoice\", \"完成品（梱包済）\");\n        }\n    });\n\n    let customer = document.getElementById(\"customer\").value;\n    let productNumber = document.getElementById(\"product-number\").value;\n    let quantity = document.getElementById(\"quantity\").value;\n    let serialNumber = document.getElementById(\"serial-number\").value;\n\n    let location = document.getElementById(\"location\").value;\n    let selectedButton = buttonId;\n    let currentPageURL = window.location.pathname;\n    \n    sessionStorage.setItem('customer', customer);\n    sessionStorage.setItem('productNumber', productNumber);\n    sessionStorage.setItem('quantity', quantity);\n    sessionStorage.setItem('serialNumber', serialNumber);\n\n    sessionStorage.setItem('location', location);\n    sessionStorage.setItem('selectedButton', selectedButton);\n    sessionStorage.setItem('currentPageURL', currentPageURL);\n\n    window.location.href = '/qr-reader';\n}\n\nfunction getQueryParameter(name) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // クエリパラメータを取得\n    let workingContentsData = getQueryParameter(\"workingContentsData\");\n\n\n    // クエリパラメータが存在する場合の処理\n    if (workingContentsData) {\n\n        workingContentsData = JSON.parse(workingContentsData);\n\n        document.getElementById(\"customer\").value = workingContentsData.customer;\n        document.getElementById(\"product-number\").value = workingContentsData.productName;\n        document.getElementById(\"quantity\").value = workingContentsData.packingQuantity;\n        document.getElementById(\"serial-number\").value = workingContentsData.serialNumber;\n\n        if (workingContentsData.selectedCategory === \"半製品\") {\n            document.getElementById(\"categoryChoice1\").checked = true;\n        } else if (workingContentsData.selectedCategory === \"完成品（梱包前）\") {\n            document.getElementById(\"categoryChoice2\").checked = true;\n        } else if (workingContentsData.selectedCategory === \"完成品（梱包済）\") {\n            document.getElementById(\"categoryChoice3\").checked = true;\n        }\n\n    }\n    \n    document.getElementById('submitButton').addEventListener('click', function (event) {\n\n        // 現在の日付と時刻を取得\n        let currentDate = new Date();\n        let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n        let formattedTime = currentDate.getHours().toString().padStart(2, '0') + ':' + currentDate.getMinutes().toString().padStart(2, '0') + ':' + currentDate.getSeconds().toString().padStart(2, '0');\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        document.getElementById('workingday').value = datetimeValue;\n\n        let customer = document.getElementById(\"customer\").value;\n        let productNumber = document.getElementById(\"product-number\").value;\n        let convertedProductNumber = productNumber.toUpperCase();\n        let quantity = document.getElementById(\"quantity\").value;\n        let location = document.getElementById(\"location\").value;\n        let serialNumber = document.getElementById(\"serial-number\").value;\n        let category = document.querySelector('input[name=\"category\"]:checked').value;\n        let storedStaffCode = document.getElementById('storedStaffCode').value;\n        let storedStaffName = document.getElementById('storedStaffName').value;\n        \n        let categoryChoice1 = document.getElementById(\"categoryChoice1\");\n        let categoryChoice2 = document.getElementById(\"categoryChoice2\");\n        let categoryChoice3 = document.getElementById(\"categoryChoice3\");\n\n        // ラジオボタンがどちらも選択されていない場合、処理を中止\n        if (!categoryChoice1.checked && !categoryChoice2.checked && !categoryChoice3.checked) {\n            alert(\"ものの区分を選択してください。\");\n            event.preventDefault();\n            return;\n        }\n\n        if (location.trim() == \"出荷置場\") {\n            alert(\"出荷置場には出荷準備でしか処理できません。出荷指示書から出荷準備してください。\");\n            event.preventDefault();\n            return;\n        }   \n\n        if (productNumber.trim() == \"\" || quantity.trim() == \"\" || location.trim() == \"\") {\n            alert(\"ｽﾄｯｸ置場所、品番、数量のどれかが未入力です。入力してください。\");\n            event.preventDefault();\n            return;\n        }   \n        \n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/warehousing-data`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                workingday: datetimeValue,\n                category: category,\n                location: location,\n                customer: customer,\n                productNumber: convertedProductNumber,\n                quantity: quantity,\n                serialNumber: serialNumber,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onerror = function (event) {\n            console.error(\"WebSocketエラー:\", event);\n        };\n\n        socket.onmessage = function (event) {\n            alert(\"正常に送信されました。\"); \n            socket.close();\n            document.getElementById(\"customer\").value = \"\";\n            document.getElementById(\"product-number\").value = \"\";\n            document.getElementById(\"quantity\").value = \"\";\n            document.getElementById(\"serial-number\").value = \"\";\n            document.getElementById(\"location\").value = \"\";\n\n            let categoryChoices = document.querySelectorAll('input[name=\"category\"]');\n            categoryChoices.forEach(function (choice) {\n                choice.checked = false;\n            });\n\n            // セッションストレージからフォームデータを削除\n            sessionStorage.removeItem('formData');\n            sessionStorage.removeItem('selectedButton');\n            sessionStorage.removeItem('qrData');\n            sessionStorage.removeItem('currentPageURL');\n        };\n    });\n\n    // セッションストレージからQRコードの読み取り情報を取得\n    let qrData = sessionStorage.getItem('qrData');\n    let storedSelectedButton = sessionStorage.getItem('selectedButton')\n\n    if (qrData) {\n\n        if (storedSelectedButton === 'product-infor') {\n\n            let locationValue = sessionStorage.getItem('location')\n\n            if (locationValue.trim() !== '') {\n\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            // qrDataを元のページで処理\n            console.log('QRコードの読み取り情報:', qrData);\n            let array = qrData.split(\",\");\n            document.getElementById(\"customer\").value = array[4];\n            document.getElementById(\"product-number\").value = array[0];\n            document.getElementById(\"quantity\").value = array[6];\n            document.getElementById(\"serial-number\").value = array[5];\n\n        } else if (storedSelectedButton === 'stock-storage'){\n\n            let customerValue = sessionStorage.getItem('customer');\n\n            // セッションストレージにフォームデータがある場合\n            if (customerValue.trim( ) !== '') {\n\n                let categoryChoice1 = document.getElementById(\"categoryChoice1\");\n                let categoryChoice2 = document.getElementById(\"categoryChoice2\");\n                let categoryChoice3 = document.getElementById(\"categoryChoice3\");\n\n\n                let savedCategoryChoice = sessionStorage.getItem(\"categoryChoice\");\n                if (savedCategoryChoice === \"半製品\") {\n                    categoryChoice1.checked = true;\n                } else if (savedCategoryChoice === \"完成品（梱包前）\") {\n                    categoryChoice2.checked = true;\n                } else if (savedCategoryChoice === \"完成品（梱包済）\") {\n                    categoryChoice3.checked = true;\n                }\n\n                document.getElementById(\"customer\").value = sessionStorage.getItem(\"customer\");\n                document.getElementById(\"product-number\").value = sessionStorage.getItem(\"productNumber\");\n                document.getElementById(\"quantity\").value = sessionStorage.getItem(\"quantity\");\n                document.getElementById(\"serial-number\").value = sessionStorage.getItem(\"serialNumber\");\n\n                let array = qrData.split(\",\");\n                let locationValue = array[0];\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }else{\n                \n                let array = qrData.split(\",\");\n                let locationValue = array[0];\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n\n            }  \n        }\n    } else {\n        // セッションストレージにQRコードの読み取り情報がない場合の処理\n        console.log('セッションストレージにQRコードの読み取り情報がありません。');\n    }\n});      ",
        "output": "str",
        "x": 680,
        "y": 60,
        "wires": [
            [
                "1c7ad6b885d2c8a0"
            ]
        ]
    },
    {
        "id": "da95ea516033c824",
        "type": "function",
        "z": "cc9e32934109e012",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "d9eb0950a37aac5e"
            ]
        ]
    },
    {
        "id": "810196891dbb540b",
        "type": "file in",
        "z": "cc9e32934109e012",
        "name": "ストック置場所読込",
        "filename": "/home/kuwata/ktrg/棚番.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "da95ea516033c824"
            ]
        ]
    },
    {
        "id": "3fd9ec7029b9bdc9",
        "type": "http in",
        "z": "cc9e32934109e012",
        "name": "",
        "url": "/page1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "810196891dbb540b"
            ]
        ]
    },
    {
        "id": "a1d6e2fde318089b",
        "type": "websocket out",
        "z": "cc9e32934109e012",
        "name": "",
        "server": "68b3833b0e275a83",
        "client": "",
        "x": 1150,
        "y": 140,
        "wires": []
    },
    {
        "id": "a26e2ab567a7138b",
        "type": "mysql",
        "z": "cc9e32934109e012",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 940,
        "y": 140,
        "wires": [
            [
                "a1d6e2fde318089b"
            ]
        ]
    },
    {
        "id": "52a3280b06508106",
        "type": "change",
        "z": "cc9e32934109e012",
        "name": "insert-warehousing",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insert into warehousing (workingday,location,category,customer,productnumber,quantity,serialnumber,workercode,workername,ordernumber) values('Workingday','Location','Category','Customer','Productnumber','Quantity','Serialnumber','Workercode','Workername','Ordernumber');",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Category",
                "fromt": "str",
                "to": "payload.category",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantity",
                "fromt": "str",
                "to": "payload.quantity",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Serialnumber",
                "fromt": "str",
                "to": "payload.serialNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workercode",
                "fromt": "str",
                "to": "payload.storedStaffCode",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workername",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Ordernumber",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 120,
        "wires": [
            [
                "a26e2ab567a7138b"
            ]
        ]
    },
    {
        "id": "aa0a5c57463cd269",
        "type": "change",
        "z": "cc9e32934109e012",
        "name": "insert-stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insert into stock (workingday,location,category,customer,productnumber,quantity,serialnumber) values('Workingday','Location','Category','Customer','Productnumber','Quantity','Serialnumber');",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Category",
                "fromt": "str",
                "to": "payload.category",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantity",
                "fromt": "str",
                "to": "payload.quantity",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Serialnumber",
                "fromt": "str",
                "to": "payload.serialNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            [
                "a26e2ab567a7138b"
            ]
        ]
    },
    {
        "id": "1cb9f55111098685",
        "type": "function",
        "z": "cc9e32934109e012",
        "name": "製造番号空白の場合生成",
        "func": "var serialNumberValue = msg.payload.serialNumber;\nvar storedStaffCode = msg.payload.storedStaffCode;\n\nif (!serialNumberValue || serialNumberValue.trim() === '') {\n    const currentDate = new Date();\n    // タイムゾーンを日本標準時 (JST) に設定\n    //const jstOffset = 9 * 60; // 分単位のオフセット（UTC+9）\n    //currentDate.setMinutes(currentDate.getMinutes() + jstOffset);\n    currentDate.setMinutes(currentDate.getMinutes());\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); \n    const day = currentDate.getDate().toString().padStart(2, '0');\n    const hours = currentDate.getHours().toString().padStart(2, '0');\n    const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n    const seconds = currentDate.getSeconds().toString().padStart(2, '0');\n\n    const generatedValue = `${year}${month}${day}${hours}${minutes}${seconds}${storedStaffCode}`;\n\n    msg.payload.serialNumber = generatedValue;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "52a3280b06508106",
                "aa0a5c57463cd269"
            ]
        ]
    },
    {
        "id": "1dbec43008e0a1d6",
        "type": "json",
        "z": "cc9e32934109e012",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "1cb9f55111098685"
            ]
        ]
    },
    {
        "id": "4eb68746aa653d97",
        "type": "websocket in",
        "z": "cc9e32934109e012",
        "name": "",
        "server": "68b3833b0e275a83",
        "client": "",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "1dbec43008e0a1d6"
            ]
        ]
    },
    {
        "id": "30516d88dc350754",
        "type": "inject",
        "z": "fda19dfd2530881f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/1 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "84e78d12ac4b2be5"
            ]
        ]
    },
    {
        "id": "c60cd4de7afeeb26",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 540,
        "y": 1000,
        "wires": [
            [
                "0bbfd90807c3dad0"
            ]
        ]
    },
    {
        "id": "0bbfd90807c3dad0",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "DELETE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM stock  WHERE  quantity<=0 ;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "b71ee42a538734e8"
            ]
        ]
    },
    {
        "id": "05bafd4647c032b4",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "cae0c25701915e6b",
        "client": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "3d5a62c88ffce107"
            ]
        ]
    },
    {
        "id": "3d5a62c88ffce107",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "49e8dd9299b00d02"
            ]
        ]
    },
    {
        "id": "7bd96ad4699ac958",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "品番",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "22ec81e753f5d051"
            ],
            [
                "82997b7156121937"
            ]
        ]
    },
    {
        "id": "22ec81e753f5d051",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from stock where productnumber and location",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber FROM stock WHERE productnumber='Productnumber' and location='Location' and quantity>0 ORDER BY customer,productnumber ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 180,
        "wires": [
            [
                "68d4b1b21c5b8bfc"
            ]
        ]
    },
    {
        "id": "82997b7156121937",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from stock where location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where location='Location' and quantity>0 ORDER BY customer,productnumber ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 220,
        "wires": [
            [
                "68d4b1b21c5b8bfc"
            ]
        ]
    },
    {
        "id": "68d4b1b21c5b8bfc",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 260,
        "wires": [
            [
                "d39a12b7e61112ab"
            ]
        ]
    },
    {
        "id": "d39a12b7e61112ab",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 260,
        "wires": [
            [
                "77f13a555afe6947"
            ]
        ]
    },
    {
        "id": "77f13a555afe6947",
        "type": "websocket out",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "cae0c25701915e6b",
        "client": "",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "3f6fba4470cae227",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "4b49ddd65ffbe78d",
        "client": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "f405c1fc2408d132"
            ]
        ]
    },
    {
        "id": "084855475935c1fa",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 660,
        "y": 900,
        "wires": [
            [
                "7dc3b474fbe5dbbf"
            ]
        ]
    },
    {
        "id": "768c17949d4b2e1c",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "update shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = '2' WHERE productnumber = 'Productnumber' AND deliveryto = 'Deliveryto' AND ordernumber = 'Ordernumber' AND shippingdate = 'Shippingdate';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Ordernumber",
                "fromt": "str",
                "to": "payload.orderNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.newshippingDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 900,
        "wires": [
            [
                "084855475935c1fa"
            ]
        ]
    },
    {
        "id": "635aa7325973a124",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 900,
        "wires": [
            [
                "768c17949d4b2e1c"
            ]
        ]
    },
    {
        "id": "2b8165c7cb3d07f9",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "3de1a4c5fc90d71d",
        "client": "",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "635aa7325973a124"
            ]
        ]
    },
    {
        "id": "7dc3b474fbe5dbbf",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 940,
        "wires": [
            [
                "8aafe40909514cff"
            ]
        ]
    },
    {
        "id": "8aafe40909514cff",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 660,
        "y": 940,
        "wires": [
            [
                "ca1416a4e9b5026c"
            ]
        ]
    },
    {
        "id": "ca1416a4e9b5026c",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"' WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 940,
        "wires": [
            [
                "54156dea7d7efd8a"
            ]
        ]
    },
    {
        "id": "54156dea7d7efd8a",
        "type": "split",
        "z": "fda19dfd2530881f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "760fa39da8c3de1d"
            ]
        ]
    },
    {
        "id": "760fa39da8c3de1d",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 940,
        "wires": [
            [
                "3bcd868b132e4bfe"
            ]
        ]
    },
    {
        "id": "3bcd868b132e4bfe",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1360,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "f405c1fc2408d132",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "fa75b6dc2b3dc48b"
            ]
        ]
    },
    {
        "id": "de5c8a7ffe8b9d65",
        "type": "websocket out",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "4b49ddd65ffbe78d",
        "client": "",
        "x": 1250,
        "y": 620,
        "wires": []
    },
    {
        "id": "b6700f0d65b4d774",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build update stock",
        "func": "let workingday = msg.payload.workingday;\nlet updateQueries = [];\n\nmsg.payload.extractedDatas.forEach(function (record, index) {\n\n    var updateQuery = \"UPDATE stock SET quantity = quantity - \" + record.column2[0] + \" WHERE id = \" + record.column0 + \"\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 400,
        "wires": [
            [
                "de4791fa8bbc0ba2"
            ]
        ]
    },
    {
        "id": "fa75b6dc2b3dc48b",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "移動・出荷準備",
        "property": "payload.selectedOption",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "移動",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "出荷準備",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 460,
        "wires": [
            [
                "639907c800599ff6"
            ],
            [
                "faac82a5bdb686e3"
            ]
        ]
    },
    {
        "id": "639907c800599ff6",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "移動先",
        "property": "payload.goto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "梱包作業",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "梱包作業",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "b6700f0d65b4d774",
                "d3275053fa31dbf9"
            ],
            [
                "128d7bc5a0af9c73",
                "952f4b165f6138b9",
                "d6e69b1cf804a480",
                "dca7224073d3066d"
            ]
        ]
    },
    {
        "id": "49db341a495bd586",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "de4791fa8bbc0ba2",
        "type": "split",
        "z": "fda19dfd2530881f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 400,
        "wires": [
            [
                "49db341a495bd586"
            ]
        ]
    },
    {
        "id": "d3275053fa31dbf9",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert Issue",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO Issue (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername,goto,id) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        record.column4,//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        parseInt(msg.payload.storedStaffCode),\n        msg.payload.storedStaffName,\n        msg.payload.goto,//移動先\n        parseInt(record.column0),//id\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 440,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "778fd2f8261a0d4a",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "de5c8a7ffe8b9d65"
            ]
        ]
    },
    {
        "id": "952f4b165f6138b9",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert Issue",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO Issue (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername,goto,id) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        record.column4,//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        parseInt(msg.payload.storedStaffCode),\n        msg.payload.storedStaffName,\n        msg.payload.goto,//移動先\n        parseInt(record.column0),//id\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "d6e69b1cf804a480",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert warehousing",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO warehousing (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        msg.payload.goto,//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        parseInt(msg.payload.storedStaffCode),\n        msg.payload.storedStaffName,\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 560,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "dca7224073d3066d",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert stock",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO stock (workingday, location, category, customer, productnumber, quantity, serialnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        msg.payload.goto,//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 600,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "128d7bc5a0af9c73",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build update stock",
        "func": "let workingday = msg.payload.workingday;\nlet updateQueries = [];\n\nmsg.payload.extractedDatas.forEach(function (record, index) {\n\n    var updateQuery = \"UPDATE stock SET quantity = quantity - \" + record.column2[0] + \" WHERE id = \" + record.column0 + \"\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "8f7096411ddc357b"
            ]
        ]
    },
    {
        "id": "8f7096411ddc357b",
        "type": "split",
        "z": "fda19dfd2530881f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 480,
        "wires": [
            [
                "e2eb2401ca88ccb1"
            ]
        ]
    },
    {
        "id": "e2eb2401ca88ccb1",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 480,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "073ea322e0e7ea15",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert Issue",
        "func": "var records = msg.payload.extractedDatas;\nvar insertQuery = \"INSERT INTO Issue (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername, goto, shipdate, shipto, ordernumber, id, cipsnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        record.column4,//ストック置き場所\n        record.column5,//ものの区分\n        record.column6,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        parseInt(msg.payload.storedStaffCode),\n        msg.payload.storedStaffName,\n        msg.payload.goto,//移動先\n        msg.payload.shipDate,//出荷日\n        msg.payload.shipto,//納入先\n        msg.payload.orderNumber,//客先注文番号\n        parseInt(record.column0),//id\n        msg.payload.cipsNumber//cips発注番号\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 760,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "7c2ee650e0032a90",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert warehousing",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO warehousing (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername, ordernumber, cipsnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        '出荷置場',//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        parseInt(msg.payload.storedStaffCode),\n        msg.payload.storedStaffName,\n        msg.payload.orderNumber,//客先注文番号\n        msg.payload.cipsNumber//cips発注番号\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "8f526d760398b670",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert stock",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO stock (workingday, location, category, customer, productnumber, quantity, serialnumber, cipsnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        msg.payload.workingday,\n        '出荷置場',//ストック置き場所\n        record.column6,//ものの区分\n        record.column5,//客先\n        record.column7,//品番\n        record.column2[0],//移動数量\n        record.column9,//製造番号\n        msg.payload.cipsNumber\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 840,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "faac82a5bdb686e3",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "データの有無",
        "property": "payload.extractedDatas",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 600,
        "wires": [
            [
                "19c0410763868219",
                "e9c2b433d9b457a2"
            ],
            [
                "073ea322e0e7ea15",
                "7c2ee650e0032a90",
                "8f526d760398b670",
                "c0791fda7c57eb98"
            ]
        ]
    },
    {
        "id": "19c0410763868219",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert warehousing",
        "func": "\n\nvar insertQuery = \"INSERT INTO warehousing (workingday, location, category, customer, productnumber, quantity, workercode, workername, ordernumber, cipsnumber) VALUES \";\n\nvar valueStrings = [\n    msg.payload.workingday,\n    '出荷置場',//ストック置き場所\n    'データなし',//ものの区分\n    msg.payload.customer,\n    msg.payload.shipmentPartNumber,//品番\n    msg.payload.quantity,//移動数量\n    parseInt(msg.payload.storedStaffCode),\n    msg.payload.storedStaffName,\n    msg.payload.orderNumber,//客先注文番号\n    msg.payload.cipsNumber//cips発注番号\n\n    ];\n\nvar valueString = \"(\" + valueStrings.map(function (value) {\n    return typeof value === 'number' ? value : \"'\" + value + \"'\";\n}).join(\", \") + \")\";\n\n\ninsertQuery += valueString;\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 640,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "e9c2b433d9b457a2",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build Insert stock",
        "func": "\n\nvar insertQuery = \"INSERT INTO stock (workingday, location, category, customer, productnumber, quantity, cipsnumber) VALUES \";\n\nvar valueStrings = [\n    msg.payload.workingday,　\n    '出荷置場',//ストック置き場所\n    'データなし',//ものの区分\n    msg.payload.customer,\n    msg.payload.shipmentPartNumber,//品番\n    msg.payload.quantity,//移動数量\n    msg.payload.cipsNumber//cips発注番号\n\n];\n\nvar valueString = \"(\" + valueStrings.map(function (value) {\n    return typeof value === 'number' ? value : \"'\" + value + \"'\";\n}).join(\", \") + \")\";\n\ninsertQuery += valueString;\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 680,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "7c118092e5217f8b",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 720,
        "wires": [
            [
                "778fd2f8261a0d4a"
            ]
        ]
    },
    {
        "id": "efce2c67e6b3352c",
        "type": "split",
        "z": "fda19dfd2530881f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 720,
        "wires": [
            [
                "7c118092e5217f8b"
            ]
        ]
    },
    {
        "id": "c0791fda7c57eb98",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "Build update stock",
        "func": "let workingday = msg.payload.workingday;\nlet updateQueries = [];\n\nmsg.payload.extractedDatas.forEach(function (record, index) {\n\n    var updateQuery = \"UPDATE stock SET quantity = quantity - \" + record.column2[0] + \" WHERE id = \" + record.column0 + \"\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 720,
        "wires": [
            [
                "efce2c67e6b3352c"
            ]
        ]
    },
    {
        "id": "49e8dd9299b00d02",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "ストック置き場所",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "7bd96ad4699ac958"
            ],
            [
                "5b949e58a72da606"
            ]
        ]
    },
    {
        "id": "5b949e58a72da606",
        "type": "switch",
        "z": "fda19dfd2530881f",
        "name": "品番",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "6216459fa21d8d6f"
            ],
            [
                "fa36957960528e61"
            ]
        ]
    },
    {
        "id": "6216459fa21d8d6f",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from stock where productnumber",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where  productnumber='Productnumber'  and quantity>0 ORDER BY customer,productnumber ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "68d4b1b21c5b8bfc"
            ]
        ]
    },
    {
        "id": "fa36957960528e61",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where quantity>0 ORDER BY customer,productnumber ;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 300,
        "wires": [
            [
                "68d4b1b21c5b8bfc"
            ]
        ]
    },
    {
        "id": "84e78d12ac4b2be5",
        "type": "change",
        "z": "fda19dfd2530881f",
        "name": "select*from stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO stocklog select * from stock where quantity<=0 ;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "c60cd4de7afeeb26"
            ]
        ]
    },
    {
        "id": "b71ee42a538734e8",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 900,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "29b925ed12cc8566",
        "type": "http response",
        "z": "fda19dfd2530881f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "77971123a33cc360",
        "type": "template",
        "z": "fda19dfd2530881f",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">      \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">移動・出庫<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <div class=\"col-6\">\n        <h1 class=\"mb-1\">移動・出庫作業</h1>\n        </div>\n        <div class=\"col-4\">\n        <button class=\"btn btn-success ms-2 mb-1\" id=\"stock-storage\" onclick=\"saveFormDataAndRedirect(this.id)\">ストック置場所を読込</button>\n        </div>\n        <div class=\"col-2\">\n        <button class=\"btn btn-success ms-2 mb-1\" id=\"product-infor\" onclick=\"saveFormDataAndRedirect(this.id)\">品番を読込</button> \n        </div> \n      </div>\n      <form method=\"post\" class=\"my-4\">  \n        <div class=\"info\"> \n\n          <div class=\"row mt-3\">\n            <div class=\"col-10\">\n              <label for=\"location\" class=\"col-10 col-form-label fs-5\">ストック置場所：</label>\n              <select id=\"location\" name=\"location\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choices}}\n                <option>{{.}}</option>\n                {{/choices}}\n              </select>\n            </div>\n          </div>\n          <div class=\"row mt-2\">  \n            <div class=\"col-10\">\n              <label for=\"product-number\" class=\"col-10 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\">\n            </div>\n          </div>\n          <div class=\"row my-3\">    \n            <div class=\"col-12\"> \n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"検索条件クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n            </div>   \n          </div>\n          \n          \n          <fieldset class=\"border p-2 my-3\">\n            <legend>作業内容を選択してください。</legend>\n            <div class=\"btn-group mt-2\" data-toggle=\"buttons\">\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice1\" name=\"work\" value=\"移動\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">移動</span>\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice2\" name=\"work\" value=\"出荷準備\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">出荷準備</span>\n              </label>\n            </div>\n            <div class=\"col-10 mt-3\" id=\"shipping-date-group\" style=\"display: none;\">\n              \n              <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"shipping-date\" name=\"shipping-date\" placeholder=\"出荷日（YYYY-MM-DD):\">\n              <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"shipto\" name=\"shipto\" placeholder=\"納入先：\">\n              <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"Shipment-Part-Number\" name=\"Shipment-Part-Number\" placeholder=\"品番：\">\n              <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"quantity\" name=\"quantity\" placeholder=\"数量：\">\n              <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"order-number\" name=\"order-number\" placeholder=\"注文番号：\">\n              <input type=\"hidden\" class=\"form-control form-control-lg mb-3\" id=\"cips-number\" name=\"cips-number\" placeholder=\"受注番号：\">\n\n              <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                  <input type=\"button\" value=\"準備\" class=\"btn btn-success btn-lg\" id=\"readyingButton\">\n                </div>\n                <div class=\"col-6\">\n                  <a class=\"nav-link white-text\" href=\"javascript:void(0);\" onclick=\"goBack()\">出荷指示書に戻る</a>\n                </div>\n              </div>\n\n            </div>\n\n            <div class=\"col-10 mt-3\" id=\"destination-group\" style=\"display: none;\">  \n              <div class=\"form-floating my-3\">\n                <select id=\"destination-input\" name=\"destination-input\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\" onchange=\"hideLabel(this)\">\n                  <option value=\"\" disabled selected hidden></option>\n                  {{#choices}}\n                  <option>{{.}}</option>\n                  {{/choices}}\n                </select>\n                <label id=\"destination-input-label\" for=\"destination-input\" class=\"form-label fs-4\">移動先：</label>\n              </div>\n              <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                  <input type=\"button\" value=\"移動\" class=\"btn btn-success btn-lg\" id=\"moveButton\">\n                </div>\n                <div class=\"col-6\">\n                  <button type=\"button\" class=\"btn btn-lg btn-danger\" id=\"requiredQuantityButton\" data-bs-toggle=\"popover\" data-bs-content=\"梱包作業が開始されていないので不明です。\">梱包必要数</button>\n                </div>  \n              </div>  \n            </div>  \n          </fieldset> \n\n          \n        </div>  \n      </form>\n\n      <div class=\"table-container\">\n        <div class=\"table-scroll\">\n          <table id=\"mytable\" class=\"table table-hover my-4\">\n            <thead class=\"table-light\">\n              <tr>\n                <th scope=\"col\" class=\"fs-6 id-column\">id</th>\n                <th scope=\"col\" class=\"fs-6\">選択</th>\n                <th scope=\"col\" class=\"fs-6\">移動数量</th>\n                <th scope=\"col\" class=\"fs-6\">入庫日</th>\n                <th scope=\"col\" class=\"fs-6\">ｽﾄｯｸ置場所</th>\n                <th scope=\"col\" class=\"fs-6\">客先</th>\n                <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n                <th scope=\"col\" class=\"fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>\n                <th scope=\"col\" class=\"fs-6\">製造番号</th>\n              </tr> \n            </thead>  \n            <tbody id=\"table-body\"></tbody>\n          </table>\n        </div>\n      </div>  \n            \n    </div>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">QRコード認証</h5>\n            \n          </div>\n          <div class=\"modal-body\">\n            <input type=\"text\" class=\"form-control form-control-lg mb-3\" id=\"read-qrdate\" name=\"read-qrdate\" placeholder=\"蓋にあるQRを読み取ってください。\">\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" onclick=\"goBack()\">キャンセル</button>\n            <button type=\"button\" class=\"btn btn-primary\" id=\"Confirm-qrdate\" name=\"Confirm-qrdate\" >認証</button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>\n  </body>\n</html>\n       \n",
        "output": "str",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "29b925ed12cc8566"
            ]
        ]
    },
    {
        "id": "808a4ed25b01b2b9",
        "type": "template",
        "z": "fda19dfd2530881f",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#mytable thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "77971123a33cc360"
            ]
        ]
    },
    {
        "id": "b92f30ef8c13cf3b",
        "type": "template",
        "z": "fda19dfd2530881f",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function goBack() {\n    let refURL = document.referrer;\n    window.location.href = refURL;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction hideLabel(selectElement) {\n\n    let labelId = '';\n\n    if (selectElement.id === 'destination-input') {\n        labelId = 'destination-input-label';\n    } else if (selectElement.id === 'location') {\n        labelId = 'location-label';\n    }\n\n    let label = document.getElementById(labelId);\n    label.style.display = selectElement.value ? 'none' : 'block';\n}\n\nfunction onRadioChange(radio) {\n\n    let selectedOption = \"\";\n    \n    selectedOption = radio.value;\n    // 出荷日の入力フィールドを制御する\n    let shippingDateInput = document.getElementById(\"shipping-date-group\");\n    let destinationInput = document.getElementById(\"destination-group\");\n\n    if (selectedOption === \"出荷準備\") {\n        shippingDateInput.style.display = \"block\";\n        destinationInput.style.display = \"none\";\n    } else if (selectedOption === \"移動\") {\n        shippingDateInput.style.display = \"none\";\n        destinationInput.style.display = \"block\";\n    } else {\n        shippingDateInput.style.display = \"none\";\n        destinationInput.style.display = \"none\";\n    }  \n}\n\nfunction clearForm() {\n\n    document.getElementById(\"location\").selectedIndex = 0;\n    document.getElementById(\"product-number\").value = \"\";\n    document.getElementById(\"shipping-date\").value = \"\";\n    document.getElementById(\"shipto\").value = \"\";\n    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n    document.getElementById(\"order-number\").value = \"\";\n    document.getElementById(\"quanitity\").value = \"\";\n    document.getElementById(\"cips-number\").value = \"\";\n\n    document.getElementById(\"destination-input\").selectedIndex = 0;\n    \n    let label = document.getElementById(\"destination-input-label\");\n    label.classList.remove(\"visually-hidden\");\n    label.style.display = \"block\";\n\n    // 出荷日のフィールドを非表示にする\n    let shippingDateField = document.getElementById(\"shipping-date-group\");\n    shippingDateField.style.display = \"none\";\n\n    // 移動先のフィールドを非表示にする\n    let destinationField = document.getElementById(\"destination-group\");destinationField.style.display = \"none\";\n\n    // ラジオボタンの選択をリセットする\n    let radioButtons = document.getElementsByName(\"work\");\n    for (let i = 0; i < radioButtons.length; i++) {\n        radioButtons[i].checked = false;\n    }\n\n    let tableBody = document.getElementById(\"table-body\");\n    tableBody.innerHTML = \"\";\n  \n}\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    const productNumber = document.getElementById(\"product-number\").value;\n    const location = document.getElementById(\"location\").value;\n    const selectedButton = buttonId;\n    const currentPageURL = window.location.href;\n\n    sessionStorage.setItem('productNumber', productNumber);\n    sessionStorage.setItem('location', location);\n    sessionStorage.setItem('selectedButton', selectedButton);\n    sessionStorage.setItem('currentPageURL', currentPageURL);\n\n    window.location.href = '/qr-reader';\n}\n\nfunction sendDataToNodeRED(productNumber, location) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/stock-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: 'search',\n            productNumber: productNumber,\n            location: location,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n    let tableBody = document.getElementById(\"table-body\");\n\n    tableBody.innerHTML = \"\";\n\n    data.forEach(function (item) {\n\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);\n        let cell2 = row.insertCell(1);\n        let cell3 = row.insertCell(2);\n        let cell4 = row.insertCell(3);\n        let cell5 = row.insertCell(4);\n        let cell6 = row.insertCell(5);\n        let cell7 = row.insertCell(6);\n        let cell8 = row.insertCell(7);\n        let cell9 = row.insertCell(8);\n        let cell10 = row.insertCell(9);\n\n        cell9.style.textAlign = \"right\";\n\n        cell1.innerHTML = item.id;\n        cell1.style.display = \"none\";\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\"; \n\n        checkbox.addEventListener(\"click\", function () {\n\n            if (this.checked) {\n                // チェックが入っている場合、セル6およびセル7を編集可能にする\n                cell3.innerHTML = '<input type=\"number\" style=\"width: 100px;\" />';                \n            } else {\n                cell3.innerHTML = '';\n            }\n        });\n\n        cell2.appendChild(checkbox);\n        cell4.innerHTML = formatDateTime(item.workingday);\n        cell5.innerHTML = item.location;\n        cell6.innerHTML = item.customer;\n        cell7.innerHTML = item.category; \n        cell8.innerHTML = item.productnumber;\n        cell9.innerHTML = item.quantity;\n        cell10.innerHTML = item.serialnumber\n\n        if (item.location.trim() === '出荷置場') {\n            row.style.display = 'none'; // この行を非表示にする\n        }\n\n        // ストック置場所が「出荷置場」の場合、セルの背景色を赤に変更\n        //if (item.location.trim() === '出荷置場') {\n        //    for (let j = 0; j < row.cells.length; j++) {\n        //        row.cells[j].style.backgroundColor = 'red';\n        //    }\n        //}\n    });\n}\n\nfunction formatDateTime(dateTimeString) {\n    // データベースから取得した日時のフォーマットに合わせて変換を行う\n    let dbDateTime = new Date(dateTimeString);\n\n    // yyyy-mm-dd hh:mm:ss\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // セッションストレージからQRコードの読み取り情報を取得\n    const QR_DATA = sessionStorage.getItem('qrData');\n    const STORED_SELECTED_BUTTON = sessionStorage.getItem('selectedButton')\n    \n    if (QR_DATA) {\n        if (STORED_SELECTED_BUTTON === 'product-infor') {\n\n            let locationValue = sessionStorage.getItem('location')\n            if (locationValue.trim() !== '') {\n\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            // qrDataを元のページで処理\n            console.log('QRコードの読み取り情報:', QR_DATA);\n\n            let array = QR_DATA.split(\",\");\n            document.getElementById(\"product-number\").value = array[0];\n\n        } else if (STORED_SELECTED_BUTTON === 'stock-storage') {\n\n            let productValue = sessionStorage.getItem('productNumber')\n            if (productValue.trim() !== '') {\n                document.getElementById(\"product-number\").value = productValue;\n            }    \n\n            let array = QR_DATA.split(\",\");\n            let locationValue = array[0];\n\n            let locationSelect = document.getElementById(\"location\");\n            for (var i = 0; i < locationSelect.options.length; i++) {\n                if (locationSelect.options[i].value === locationValue) {\n                    locationSelect.selectedIndex = i;\n                    break;\n                }\n            }\n        }\n    } else {\n        // セッションストレージにQRコードの読み取り情報がない場合の処理\n        console.log('セッションストレージにQRコードの読み取り情報がありません。');\n    }\n\n    const SEARCH_BUTTON = document.getElementById('searchButton');\n    SEARCH_BUTTON.addEventListener('click', function () {\n\n        let productNumber = document.getElementById(\"product-number\").value;\n        let location = document.getElementById(\"location\").value;\n                  \n        sendDataToNodeRED(productNumber, location);\n    });\n\n});\n\nfunction extractCheckedRows() {\n    let table = document.getElementById(\"mytable\");\n    let rows = table.getElementsByTagName(\"tr\");\n    let selectedRows = [];\n    let tableData = [];\n\n    for (let i = 1; i < rows.length; i++) {\n        let checkbox = rows[i].querySelector(\"input[type='checkbox']\");\n        if (checkbox && checkbox.checked) {\n            // チェックが入っている行を抽出\n            selectedRows.push(rows[i]);\n        }\n    }\n\n    for (let i = 0; i < selectedRows.length; i++) {\n        let row = selectedRows[i];\n        let rowData = {};\n\n        // 各セルを処理\n        let cells = row.getElementsByTagName(\"td\");\n        for (let j = 0; j < cells.length; j++) {\n            let cell = cells[j];\n            let cellData = \"\";\n            let inputElements = cell.querySelectorAll(\"input[type='number']\");\n            if (inputElements.length > 0) {\n                // テキストボックスが存在する場合、各テキストボックスの値を取得\n                let values = [];\n                for (let k = 0; k < inputElements.length; k++) {\n                    values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                }\n                cellData = values;\n            } else {\n                cellData = cell.textContent.trim();\n            }\n            rowData[\"column\" + j] = cellData;\n        }\n        // 1つの行のデータを配列に追加\n        tableData.push(rowData);\n    }\n    return tableData;\n}\n\nfunction sendEventDataToServer(productNumber, orderNumber, newshippingDate, deliveryTo, cipsNumber, customer) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shipping-update`);\n\n    socket.onopen = function (event) {\n\n        let eventData = {\n            newshippingDate: newshippingDate,\n            productNumber: productNumber,\n            deliveryto: deliveryTo,\n            orderNumber: orderNumber,\n            cipsNumber: cipsNumber,\n            customer: customer\n        };\n\n        socket.send(JSON.stringify(eventData));\n        socket.close();\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    const MOVE_BUTTON = document.getElementById(\"moveButton\");\n\n    // \"移動\"ボタンをクリックしたときに抽出処理を実行\n    MOVE_BUTTON.addEventListener(\"click\", function () {\n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n        let selectedOption = \"移動\";\n\n        // セレクトボックス要素を取得\n        let selectBox = document.getElementById(\"destination-input\");\n        // 選択されたオプションのテキストを取得\n        let selectedText = selectBox.options[selectBox.selectedIndex].text;\n        let goto = selectedText;\n        let extractedDatas = extractCheckedRows();\n\n        if (selectedText.trim() === '') {\n            alert('移動先を入力してください。');\n            return;\n        }\n\n        if (selectedText.trim() === '出荷置場') {\n            alert('出荷置場には出荷準備でしか処理できません。出荷指示書から出荷準備してください。');\n            return;\n        }\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                selectedOption: selectedOption,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                workingday: workingday,\n                goto: goto,\n                extractedDatas: extractedDatas\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            alert('処理しました。')\n            clearForm()\n            socket.close();\n        };\n    });\n});    \n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // URLからクエリパラメータを取得\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // クエリパラメータを取得(出荷指示書から)\n    let productNumber = urlParams.get(\"product\");\n    let decodedProductNumber = decodeURIComponent(productNumber);\n    let orderNumber = urlParams.get(\"order\");\n    let shippingDate = urlParams.get(\"shipping\");\n    let decodedShippingDate = decodeURIComponent(shippingDate);\n    let quanitity = urlParams.get(\"quanitity\");\n    let cipsNumber = urlParams.get(\"cips\");\n\n    // スラッシュをダッシュに置き換える\n    let newshippingDate = decodedShippingDate.replace(/\\//g, '-');\n    let deliveryTo = urlParams.get(\"deliveryto\");\n    let customer = urlParams.get('customer');\n\n    \n    if (!orderNumber) {\n        return;\n    }else{\n        let location = \"\";\n        sendDataToNodeRED(productNumber, location);\n\n    }\n\n    document.getElementById(\"workChoice2\").checked = true;\n    let shippingDateInput = document.getElementById(\"shipping-date-group\");\n    shippingDateInput.style.display = \"block\";\n\n    document.getElementById(\"shipping-date\").value = newshippingDate;\n    document.getElementById(\"shipto\").value = deliveryTo;\n    document.getElementById(\"Shipment-Part-Number\").value = decodedProductNumber;\n    document.getElementById(\"order-number\").value = orderNumber;\n    document.getElementById(\"quanitity\").value = quanitity;\n    document.getElementById(\"cips-number\").value = cipsNumber;\n    \n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    const READYING_BUTTON = document.getElementById(\"readyingButton\");\n    // \"準備\"ボタンをクリックしたときに抽出処理を実行\n    READYING_BUTTON.addEventListener(\"click\", function () {\n\n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n        let shipDate = document.getElementById(\"shipping-date\").value;\n        let shipto = document.getElementById(\"shipto\").value;\n        let shipmentPartNumber = document.getElementById(\"Shipment-Part-Number\").value\n        let orderNumber = document.getElementById(\"order-number\").value;\n        let cipsNumber = document.getElementById(\"cips-number\").value;\n        let selectedOption = \"出荷準備\";\n\n        let extractedDatas = extractCheckedRows();\n\n        if (!shipDate || !shipmentPartNumber || !orderNumber || !cipsNumber) {\n            alert(\"出荷準備品番情報を入力してください。\");\n            return;\n        }\n\n        if (extractedDatas.length === 0) {\n            // extractedDatas にデータがない場合のアラート\n            const CONFIRMATION = window.confirm(\"ストック置き場所から品番を選択していません。処理を続けますか。\");\n\n            if (CONFIRMATION) {\n\n                let quanitity = document.getElementById(\"quanitity\").value;\n\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                socket.onopen = function (event) {\n                    let requestData = {\n                        selectedOption: selectedOption,\n                        storedStaffCode: storedStaffCode,\n                        storedStaffName: storedStaffName,\n                        workingday: workingday,\n                        goto: '出荷置場',\n                        shipDate: shipDate,\n                        shipto: shipto,\n                        orderNumber: orderNumber,\n                        cipsNumber: cipsNumber,\n                        quanitity: quanitity,\n                        shipmentPartNumber: shipmentPartNumber,\n                        customer: customer,\n                        extractedDatas: extractedDatas\n                    };\n                    socket.send(JSON.stringify(requestData));\n                };\n\n                socket.onmessage = function (event) {\n                    alert('処理しました。')\n                    document.getElementById(\"shipping-date\").value = \"\";\n                    document.getElementById(\"shipto\").value = \"\";\n                    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                    document.getElementById(\"order-number\").value = \"\";\n                    document.getElementById(\"quanitity\").value = \"\";\n                    document.getElementById(\"cips-number\").value = \"\";\n                    let tableBody = document.getElementById(\"table-body\");\n                    tableBody.innerHTML = \"\";\n                    socket.close();\n                };\n            }else{\n                // 処理を中止\n                return;\n            }    \n\n        } else {\n\n            let mismatchFound = false; // 品番の不一致を示すフラグ\n            for (let i = 0; i < extractedDatas.length; i++) {\n                let productNumber = extractedDatas[i].column7;\n\n                if (shipmentPartNumber !== productNumber) {\n                    mismatchFound = true;\n                    break; // 異なる品番が見つかったらループを中断\n                }\n            }\n            \n            if (mismatchFound) {\n                const CONFIRMATION = window.confirm(\"出荷準備品番と選択した品番に違いがあります。処理を続けますか。\");\n\n                if (CONFIRMATION) {\n\n                    const hostname = window.location.hostname;\n                    let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                    socket.onopen = function (event) {\n                        let requestData = {\n                            selectedOption: selectedOption,\n                            storedStaffCode: storedStaffCode,\n                            storedStaffName: storedStaffName,\n                            workingday: workingday,\n                            goto: '出荷置場',\n                            shipDate: shipDate,\n                            shipto: shipto,\n                            orderNumber: orderNumber,\n                            cipsNumber: cipsNumber,\n                            customer: customer,\n                            extractedDatas: extractedDatas\n                        };\n                        socket.send(JSON.stringify(requestData));\n                    };\n\n                    socket.onmessage = function (event) {\n                        alert('処理しました。')\n                        document.getElementById(\"shipping-date\").value = \"\";\n                        document.getElementById(\"shipto\").value = \"\";\n                        document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                        document.getElementById(\"order-number\").value = \"\";\n                        document.getElementById(\"quanitity\").value = \"\";\n                        document.getElementById(\"cips-number\").value = \"\";\n                        let tableBody = document.getElementById(\"table-body\");\n                        tableBody.innerHTML = \"\";\n                        socket.close();\n                    };\n\n                } else {\n                    // 処理を中止\n                    return;\n                }\n            } else {\n                // すべての品番が一致する場合の処理\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                socket.onopen = function (event) {\n                    let requestData = {\n                        selectedOption: selectedOption,\n                        storedStaffCode: storedStaffCode,\n                        storedStaffName: storedStaffName,\n                        workingday: workingday,\n                        goto: '出荷置場',\n                        shipDate: shipDate,\n                        shipto: shipto,\n                        orderNumber: orderNumber,\n                        cipsNumber: cipsNumber,\n                        customer: customer,\n                        extractedDatas: extractedDatas\n                    };\n                    socket.send(JSON.stringify(requestData));\n                };\n\n                socket.onmessage = function (event) {\n                    alert('処理しました。')\n                    document.getElementById(\"shipping-date\").value = \"\";\n                    document.getElementById(\"shipto\").value = \"\";\n                    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                    document.getElementById(\"order-number\").value = \"\";\n                    document.getElementById(\"quanitity\").value = \"\";\n                    document.getElementById(\"cips-number\").value = \"\";\n                    let tableBody = document.getElementById(\"table-body\");\n                    tableBody.innerHTML = \"\";\n                    socket.close();\n                };\n            }      \n        }\n        sendEventDataToServer(productNumber, orderNumber, newshippingDate, deliveryTo, cipsNumber, customer);\n    });        \n});\n\n\n\n\n",
        "output": "str",
        "x": 680,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1d4322fc80dd13b0",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "7d3c33fe61c42e27"
            ]
        ]
    },
    {
        "id": "641b1f1c93ff70e5",
        "type": "file in",
        "z": "fda19dfd2530881f",
        "name": "ストック置場所読込",
        "filename": "/home/kuwata/ktrg/棚番.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "1d4322fc80dd13b0"
            ]
        ]
    },
    {
        "id": "95425b28b964e77c",
        "type": "http in",
        "z": "fda19dfd2530881f",
        "name": "",
        "url": "/page2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "641b1f1c93ff70e5"
            ]
        ]
    },
    {
        "id": "7d3c33fe61c42e27",
        "type": "template",
        "z": "fda19dfd2530881f",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "const ERROR_AUDIO = new Audio('/警告音.mp3');\nconst SUCCESS_AUDIO = new Audio('/成功音.mp3');\nconst PASSED_AUDIO = new Audio('/合格音.mp3');\n\nconst hostname = window.location.hostname;\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction goBack() {\n    let refURL = document.referrer;\n    window.location.href = refURL;\n}\n\nfunction hideLabel(selectElement) {\n\n    let labelId = '';\n\n    if (selectElement.id === 'destination-input') {\n        labelId = 'destination-input-label';\n    } else if (selectElement.id === 'location') {\n        labelId = 'location-label';\n    }\n\n    let label = document.getElementById(labelId);\n    label.style.display = selectElement.value ? 'none' : 'block';\n}\n\nfunction onRadioChange(radio) {\n\n    let selectedOption = \"\";\n    \n    selectedOption = radio.value;\n    // 出荷日の入力フィールドを制御する\n    let shippingDateInput = document.getElementById(\"shipping-date-group\");\n    let destinationInput = document.getElementById(\"destination-group\");\n\n    if (selectedOption === \"出荷準備\") {\n        shippingDateInput.style.display = \"block\";\n        destinationInput.style.display = \"none\";\n    } else if (selectedOption === \"移動\") {\n        shippingDateInput.style.display = \"none\";\n        destinationInput.style.display = \"block\";\n    } else {\n        shippingDateInput.style.display = \"none\";\n        destinationInput.style.display = \"none\";\n    }  \n}\n\nfunction clearForm() {\n\n    document.getElementById(\"location\").selectedIndex = 0;\n    document.getElementById(\"product-number\").value = \"\";\n    document.getElementById(\"shipping-date\").value = \"\";\n    document.getElementById(\"shipto\").value = \"\";\n    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n    document.getElementById(\"order-number\").value = \"\";\n    document.getElementById(\"quantity\").value = \"\";\n    document.getElementById(\"cips-number\").value = \"\";\n\n    document.getElementById(\"destination-input\").selectedIndex = 0;\n    \n    let label = document.getElementById(\"destination-input-label\");\n    label.classList.remove(\"visually-hidden\");\n    label.style.display = \"block\";\n\n    // 出荷日のフィールドを非表示にする\n    let shippingDateField = document.getElementById(\"shipping-date-group\");\n    shippingDateField.style.display = \"none\";\n\n    // 移動先のフィールドを非表示にする\n    let destinationField = document.getElementById(\"destination-group\");destinationField.style.display = \"none\";\n\n    // ラジオボタンの選択をリセットする\n    let radioButtons = document.getElementsByName(\"work\");\n    for (let i = 0; i < radioButtons.length; i++) {\n        radioButtons[i].checked = false;\n    }\n\n    let tableBody = document.getElementById(\"table-body\");\n    tableBody.innerHTML = \"\";\n  \n}\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    const productNumber = document.getElementById(\"product-number\").value;\n    const location = document.getElementById(\"location\").value;\n    const selectedButton = buttonId;\n    const currentPageURL = window.location.href;\n\n    sessionStorage.setItem('productNumber', productNumber);\n    sessionStorage.setItem('location', location);\n    sessionStorage.setItem('selectedButton', selectedButton);\n    sessionStorage.setItem('currentPageURL', currentPageURL);\n\n    window.location.href = '/qr-reader';\n}\n\nfunction sendDataToNodeRED(productNumber, location) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/stock-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: 'search',\n            productNumber: productNumber,\n            location: location,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n    let tableBody = document.getElementById(\"table-body\");\n\n    tableBody.innerHTML = \"\";\n\n    data.forEach(function (item) {\n\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);\n        let cell2 = row.insertCell(1);\n        let cell3 = row.insertCell(2);\n        let cell4 = row.insertCell(3);\n        let cell5 = row.insertCell(4);\n        let cell6 = row.insertCell(5);\n        let cell7 = row.insertCell(6);\n        let cell8 = row.insertCell(7);\n        let cell9 = row.insertCell(8);\n        let cell10 = row.insertCell(9);\n\n        cell9.style.textAlign = \"right\";\n\n        cell1.innerHTML = item.id;\n        cell1.style.display = \"none\";\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\"; \n\n        checkbox.addEventListener(\"click\", function () {\n\n            if (this.checked) {\n                // チェックが入っている場合、セル6およびセル7を編集可能にする\n                cell3.innerHTML = '<input type=\"number\" style=\"width: 100px;\" />';                \n            } else {\n                cell3.innerHTML = '';\n            }\n        });\n\n        cell2.appendChild(checkbox);\n        cell4.innerHTML = formatDateTime(item.workingday);\n        cell5.innerHTML = item.location;\n        cell6.innerHTML = item.customer;\n        cell7.innerHTML = item.category; \n        cell8.innerHTML = item.productnumber;\n        cell9.innerHTML = item.quantity;\n        cell10.innerHTML = item.serialnumber\n\n        if (item.location.trim() === '出荷置場') {\n            row.style.display = 'none'; // この行を非表示にする\n        }\n\n    });\n}\n\nfunction formatDateTime(dateTimeString) {\n    // データベースから取得した日時のフォーマットに合わせて変換を行う\n    let dbDateTime = new Date(dateTimeString);\n\n    // yyyy-mm-dd hh:mm:ss\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\n// チェックが入っている行を抽出\nfunction extractCheckedRows() {\n    let table = document.getElementById(\"mytable\");\n    let rows = table.getElementsByTagName(\"tr\");\n    let selectedRows = [];\n    let tableData = [];\n\n    for (let i = 1; i < rows.length; i++) {\n        let checkbox = rows[i].querySelector(\"input[type='checkbox']\");\n        if (checkbox && checkbox.checked) {\n\n            selectedRows.push(rows[i]);\n        }\n    }\n\n    for (let i = 0; i < selectedRows.length; i++) {\n        let row = selectedRows[i];\n        let rowData = {};\n\n        // 各セルを処理\n        let cells = row.getElementsByTagName(\"td\");\n        for (let j = 0; j < cells.length; j++) {\n            let cell = cells[j];\n            let cellData = \"\";\n            let inputElements = cell.querySelectorAll(\"input[type='number']\");\n            if (inputElements.length > 0) {\n                // テキストボックスが存在する場合、各テキストボックスの値を取得\n                let values = [];\n                for (let k = 0; k < inputElements.length; k++) {\n                    values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                }\n                cellData = values;\n            } else {\n                cellData = cell.textContent.trim();\n            }\n            rowData[\"column\" + j] = cellData;\n        }\n        // 1つの行のデータを配列に追加\n        tableData.push(rowData);\n    }\n    return tableData;\n}\n\nfunction sendEventDataToServer(productNumber, orderNumber, newshippingDate, deliveryTo, cipsNumber, customer) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shipping-update`);\n\n    socket.onopen = function (event) {\n\n        let eventData = {\n            newshippingDate: newshippingDate,\n            productNumber: productNumber,\n            deliveryto: deliveryTo,\n            orderNumber: orderNumber,\n            cipsNumber: cipsNumber,\n            customer: customer\n        };\n\n        socket.send(JSON.stringify(eventData));\n        socket.close();\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    // URLからクエリパラメータを取得\n    const urlParams = new URLSearchParams(window.location.search);\n\n    let sourcePage = urlParams.get(\"sourcePage\");\n    let requiredQuantity = urlParams.get(\"requiredQuantity\");\n    let productNumber = urlParams.get(\"product\");\n    let decodedProductNumber = decodeURIComponent(productNumber);\n    let orderNumber = urlParams.get(\"order\");\n    let shippingDate = urlParams.get(\"shipping\");\n    let decodedShippingDate = decodeURIComponent(shippingDate);\n    let quantity = urlParams.get(\"quantity\");\n    let cipsNumber = urlParams.get(\"cips\");\n\n    // スラッシュをダッシュに置き換える\n    let newshippingDate = decodedShippingDate.replace(/\\//g, '-');\n    let deliveryTo = urlParams.get(\"deliveryto\");\n    let customer = urlParams.get('customer');\n\n    if (sourcePage){\n\n        let button = document.getElementById('requiredQuantityButton');\n        button.setAttribute('data-bs-content', requiredQuantity);\n\n        \n\n        let popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'))\n        let popoverList = popoverTriggerList.map(function (popoverTriggerEl) {\n            return new bootstrap.Popover(popoverTriggerEl)\n        })\n\n        let productID = urlParams.get(\"productID\");\n        let componentName = urlParams.get(\"componentName\");\n        let decodedComponentName = decodeURIComponent(componentName);\n        let componentCategory = urlParams.get(\"componentCategory\");\n\n        document.getElementById(\"workChoice1\").checked = true;\n        let destinationDateInput = document.getElementById(\"destination-group\");\n        destinationDateInput.style.display = \"block\";\n        document.getElementById(\"destination-input\").value = '梱包作業';\n        document.getElementById(\"destination-input\").disabled = true;\n        document.getElementById(\"destination-input-label\").style.display = 'none';\n        \n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/componentStock-search`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                productID: productID,\n                componentName: decodedComponentName,\n                componentCategory: componentCategory\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            let responseData = JSON.parse(event.data);\n            displayDataInTable(responseData);\n            socket.close();\n        };\n\n        if (sessionStorage.getItem('workingConditions')) {\n            new bootstrap.Modal(document.getElementById('staticBackdrop')).show();\n\n            document.getElementById('staticBackdrop').addEventListener('shown.bs.modal', function () {\n                // モーダル内のテキスト入力要素を取得\n                var inputElement = document.getElementById('read-qrdate');\n                // フォーカスを設定\n                if (inputElement) {\n                    inputElement.focus();\n                }\n\n                document.getElementById('Confirm-qrdate').addEventListener('click', function () {\n                    // テキスト入力フィールドから入力された値を取得\n                    var inputValue = document.getElementById('read-qrdate').value;\n\n                    if (inputValue === componentName){\n\n                        let socket = new WebSocket(`wss://${hostname}/QR-autentication`);\n\n                        socket.onopen = function (event) {\n\n                            let requestData = {\n                                workingID: sessionStorage.getItem(\"workingID\"),\n                                productName: inputValue\n\n                            };\n\n                            socket.send(JSON.stringify(requestData));\n                            socket.close();\n                        };\n\n                        PASSED_AUDIO.play();\n                        alert(\"認証合格\")\n                        var modalElement = document.getElementById('staticBackdrop');\n                        var modalInstance = bootstrap.Modal.getInstance(modalElement);\n                        modalInstance.hide();\n\n                    }else {\n                        ERROR_AUDIO.play();\n                        alert(\"認証不合格\")\n                        document.getElementById('read-qrdate').value = \"\"\n                        inputElement.focus();\n\n                    }\n\n            });\n\n\n            });\n\n\n        };\n        \n    }\n\n    if (orderNumber){\n\n        let location = \"\";\n        sendDataToNodeRED(productNumber, location);\n\n        document.getElementById(\"workChoice2\").checked = true;\n        let shippingDateInput = document.getElementById(\"shipping-date-group\");\n        shippingDateInput.style.display = \"block\";\n\n        document.getElementById(\"shipping-date\").value = newshippingDate;\n        document.getElementById(\"shipto\").value = deliveryTo;\n        document.getElementById(\"Shipment-Part-Number\").value = decodedProductNumber;\n        document.getElementById(\"order-number\").value = orderNumber;\n        document.getElementById(\"quantity\").value = quantity;\n        document.getElementById(\"cips-number\").value = cipsNumber;\n\n    }\n\n    // セッションストレージからQRコードの読み取り情報を取得\n    const QR_DATA = sessionStorage.getItem('qrData');\n    const STORED_SELECTED_BUTTON = sessionStorage.getItem('selectedButton')\n    \n    if (QR_DATA) {\n        if (STORED_SELECTED_BUTTON === 'product-infor') {\n\n            let locationValue = sessionStorage.getItem('location')\n            if (locationValue.trim() !== '') {\n\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            // qrDataを元のページで処理\n            console.log('QRコードの読み取り情報:', QR_DATA);\n\n            let array = QR_DATA.split(\",\");\n            document.getElementById(\"product-number\").value = array[0];\n\n        } else if (STORED_SELECTED_BUTTON === 'stock-storage') {\n\n            let productValue = sessionStorage.getItem('productNumber')\n            if (productValue.trim() !== '') {\n                document.getElementById(\"product-number\").value = productValue;\n            }    \n\n            let array = QR_DATA.split(\",\");\n            let locationValue = array[0];\n\n            let locationSelect = document.getElementById(\"location\");\n            for (var i = 0; i < locationSelect.options.length; i++) {\n                if (locationSelect.options[i].value === locationValue) {\n                    locationSelect.selectedIndex = i;\n                    break;\n                }\n            }\n        }\n    } else {\n        // セッションストレージにQRコードの読み取り情報がない場合の処理\n        console.log('セッションストレージにQRコードの読み取り情報がありません。');\n    }\n\n\n\n    //検索ボタンを押した時の処理\n    const SEARCH_BUTTON = document.getElementById('searchButton');\n    SEARCH_BUTTON.addEventListener('click', function () {\n\n        let productNumber = document.getElementById(\"product-number\").value;\n        let location = document.getElementById(\"location\").value;\n\n        sendDataToNodeRED(productNumber, location);\n    });\n\n    \n\n    // \"移動\"ボタンをクリックした時の処理\n    const MOVE_BUTTON = document.getElementById(\"moveButton\");\n    MOVE_BUTTON.addEventListener(\"click\", function () {\n        let currentDate = new Date();\n        let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n        let formattedTime = currentDate.getHours().toString().padStart(2, '0') + ':' + currentDate.getMinutes().toString().padStart(2, '0') + ':' + currentDate.getSeconds().toString().padStart(2, '0');\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n        let selectedOption = \"移動\";\n\n        // セレクトボックス要素を取得\n        let selectBox = document.getElementById(\"destination-input\");\n        // 選択されたオプションのテキストを取得\n        let selectedText = selectBox.options[selectBox.selectedIndex].text;\n        let goto = selectedText;\n        let extractedDatas = extractCheckedRows();\n\n        if (selectedText.trim() === '') {\n            alert('移動先を入力してください。');\n            return;\n        }\n\n        if (selectedText.trim() === '出荷置場') {\n            alert('出荷置場には出荷準備でしか処理できません。出荷指示書から出荷準備してください。');\n            return;\n        }\n\n        if (sessionStorage.getItem('workingConditions')) {\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/Working-result`);\n\n            socket.onopen = function (event) {\n                let requestData = {\n                    workingday: workingday,\n                    workingID: sessionStorage.getItem(\"workingID\"),\n                    extractedDatas: extractedDatas\n                };\n                socket.send(JSON.stringify(requestData));\n            };\n\n\n        }    \n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                selectedOption: selectedOption,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                workingday: workingday,\n                goto: goto,\n                extractedDatas: extractedDatas\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            alert('処理しました。')\n            if (sessionStorage.getItem('workingConditions')) {\n                goBack()\n            }else{\n                clearForm()\n            }\n            \n            socket.close();\n        };\n\n        \n    });\n\n    const READYING_BUTTON = document.getElementById(\"readyingButton\");\n    // \"準備\"ボタンをクリックしたときに抽出処理を実行\n    READYING_BUTTON.addEventListener(\"click\", function () {\n\n        let currentDate = new Date();\n        let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n        let formattedTime = currentDate.getHours().toString().padStart(2, '0') + ':' + currentDate.getMinutes().toString().padStart(2, '0') + ':' + currentDate.getSeconds().toString().padStart(2, '0');\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n        let shipDate = document.getElementById(\"shipping-date\").value;\n        let shipto = document.getElementById(\"shipto\").value;\n        let shipmentPartNumber = document.getElementById(\"Shipment-Part-Number\").value\n        let orderNumber = document.getElementById(\"order-number\").value;\n        let cipsNumber = document.getElementById(\"cips-number\").value;\n        let selectedOption = \"出荷準備\";\n\n        let extractedDatas = extractCheckedRows();\n\n        if (!shipDate || !shipmentPartNumber || !orderNumber || !cipsNumber) {\n            alert(\"出荷準備品番情報を入力してください。\");\n            return;\n        }\n\n        if (extractedDatas.length === 0) {\n            // extractedDatas にデータがない場合のアラート\n            const CONFIRMATION = window.confirm(\"ストック置き場所から品番を選択していません。処理を続けますか。\");\n\n            if (CONFIRMATION) {\n\n                let quantity = document.getElementById(\"quantity\").value;\n\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                socket.onopen = function (event) {\n                    let requestData = {\n                        selectedOption: selectedOption,\n                        storedStaffCode: storedStaffCode,\n                        storedStaffName: storedStaffName,\n                        workingday: workingday,\n                        goto: '出荷置場',\n                        shipDate: shipDate,\n                        shipto: shipto,\n                        orderNumber: orderNumber,\n                        cipsNumber: cipsNumber,\n                        quantity: quantity,\n                        shipmentPartNumber: shipmentPartNumber,\n                        customer: customer,\n                        extractedDatas: extractedDatas\n                    };\n                    socket.send(JSON.stringify(requestData));\n                };\n\n                socket.onmessage = function (event) {\n                    alert('処理しました。')\n                    document.getElementById(\"shipping-date\").value = \"\";\n                    document.getElementById(\"shipto\").value = \"\";\n                    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                    document.getElementById(\"order-number\").value = \"\";\n                    document.getElementById(\"quantity\").value = \"\";\n                    document.getElementById(\"cips-number\").value = \"\";\n                    let tableBody = document.getElementById(\"table-body\");\n                    tableBody.innerHTML = \"\";\n                    socket.close();\n                };\n            } else {\n                // 処理を中止\n                return;\n            }\n\n        } else {\n\n            let mismatchFound = false; // 品番の不一致を示すフラグ\n            for (let i = 0; i < extractedDatas.length; i++) {\n                let productNumber = extractedDatas[i].column7;\n\n                if (shipmentPartNumber !== productNumber) {\n                    mismatchFound = true;\n                    break; // 異なる品番が見つかったらループを中断\n                }\n            }\n\n            if (mismatchFound) {\n                const CONFIRMATION = window.confirm(\"出荷準備品番と選択した品番に違いがあります。処理を続けますか。\");\n\n                if (CONFIRMATION) {\n\n                    const hostname = window.location.hostname;\n                    let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                    socket.onopen = function (event) {\n                        let requestData = {\n                            selectedOption: selectedOption,\n                            storedStaffCode: storedStaffCode,\n                            storedStaffName: storedStaffName,\n                            workingday: workingday,\n                            goto: '出荷置場',\n                            shipDate: shipDate,\n                            shipto: shipto,\n                            orderNumber: orderNumber,\n                            cipsNumber: cipsNumber,\n                            customer: customer,\n                            extractedDatas: extractedDatas\n                        };\n                        socket.send(JSON.stringify(requestData));\n                    };\n\n                    socket.onmessage = function (event) {\n                        alert('処理しました。')\n                        document.getElementById(\"shipping-date\").value = \"\";\n                        document.getElementById(\"shipto\").value = \"\";\n                        document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                        document.getElementById(\"order-number\").value = \"\";\n                        document.getElementById(\"quantity\").value = \"\";\n                        document.getElementById(\"cips-number\").value = \"\";\n                        let tableBody = document.getElementById(\"table-body\");\n                        tableBody.innerHTML = \"\";\n                        socket.close();\n                    };\n\n                } else {\n                    // 処理を中止\n                    return;\n                }\n            } else {\n                // すべての品番が一致する場合の処理\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/stock-update`);\n\n                socket.onopen = function (event) {\n                    let requestData = {\n                        selectedOption: selectedOption,\n                        storedStaffCode: storedStaffCode,\n                        storedStaffName: storedStaffName,\n                        workingday: workingday,\n                        goto: '出荷置場',\n                        shipDate: shipDate,\n                        shipto: shipto,\n                        orderNumber: orderNumber,\n                        cipsNumber: cipsNumber,\n                        customer: customer,\n                        extractedDatas: extractedDatas\n                    };\n                    socket.send(JSON.stringify(requestData));\n                };\n\n                socket.onmessage = function (event) {\n                    alert('処理しました。')\n                    document.getElementById(\"shipping-date\").value = \"\";\n                    document.getElementById(\"shipto\").value = \"\";\n                    document.getElementById(\"Shipment-Part-Number\").value = \"\";\n                    document.getElementById(\"order-number\").value = \"\";\n                    document.getElementById(\"quantity\").value = \"\";\n                    document.getElementById(\"cips-number\").value = \"\";\n                    let tableBody = document.getElementById(\"table-body\");\n                    tableBody.innerHTML = \"\";\n                    socket.close();\n                };\n            }\n        }\n        sendEventDataToServer(productNumber, orderNumber, newshippingDate, deliveryTo, cipsNumber, customer);\n    });       \n});\n",
        "output": "str",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "808a4ed25b01b2b9"
            ]
        ]
    },
    {
        "id": "472ab18e9b8133b2",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "aad501ca3560744b",
        "client": "",
        "x": 180,
        "y": 1080,
        "wires": [
            [
                "ae5886339883063f"
            ]
        ]
    },
    {
        "id": "ae5886339883063f",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "126321b0baac7efe"
            ]
        ]
    },
    {
        "id": "93ec85b407b6a413",
        "type": "websocket out",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "aad501ca3560744b",
        "client": "",
        "x": 1130,
        "y": 1120,
        "wires": []
    },
    {
        "id": "04bb28bd66c58221",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "8235688e35bdba58",
        "client": "",
        "x": 160,
        "y": 1200,
        "wires": [
            [
                "f26bc5be16f428b3"
            ]
        ]
    },
    {
        "id": "f26bc5be16f428b3",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1200,
        "wires": [
            [
                "37cd8699dff97510"
            ]
        ]
    },
    {
        "id": "37cd8699dff97510",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "INSERT INTO WorkingReadQR",
        "func": "\nvar insertQuery = \"INSERT INTO WorkingReadQR (WorkingID, ProductName) VALUES (\" + parseInt(msg.payload.workingID) + \",'\" + msg.payload.productName + \"') \";\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1200,
        "wires": [
            [
                "6f5279f5e3cfca0e"
            ]
        ]
    },
    {
        "id": "6f5279f5e3cfca0e",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 900,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a49a24c83595c6fd",
        "type": "websocket in",
        "z": "fda19dfd2530881f",
        "name": "",
        "server": "19662ac09f30f8e7",
        "client": "",
        "x": 150,
        "y": 1260,
        "wires": [
            [
                "4bac8f0fd6cf542c"
            ]
        ]
    },
    {
        "id": "4bac8f0fd6cf542c",
        "type": "json",
        "z": "fda19dfd2530881f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1260,
        "wires": [
            [
                "aa50f45d819afdfe"
            ]
        ]
    },
    {
        "id": "aa50f45d819afdfe",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "INSERT INTO WorkingResult",
        "func": "var records = msg.payload.extractedDatas;\n\nvar insertQuery = \"INSERT INTO WorkingResult (WorkingID, ProductName, StockID, QuantityMoved, workingday) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record) {\n    var values = [\n        parseInt(msg.payload.workingID),\n        record.column7,//品番\n        parseInt(record.column0),//id\n        record.column2[0],//移動数量\n        msg.payload.workingday\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "0646604b2cf9c376"
            ]
        ]
    },
    {
        "id": "0646604b2cf9c376",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 900,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "126321b0baac7efe",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "select * from Products",
        "func": "flow.set('componentName', msg.payload.componentName);\nflow.set('componentCategory', msg.payload.componentCategory);\n\nvar selectQuery = \"select Location from Products where ProductID = \" + msg.payload.productID+ \"\" ;\n\nmsg.topic = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1080,
        "wires": [
            [
                "4581065b914d8ed1"
            ]
        ]
    },
    {
        "id": "4581065b914d8ed1",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 900,
        "y": 1080,
        "wires": [
            [
                "102d284dab98e1db"
            ]
        ]
    },
    {
        "id": "102d284dab98e1db",
        "type": "function",
        "z": "fda19dfd2530881f",
        "name": "select * from stock",
        "func": "var componentName = flow.get('componentName');\nvar componentCategory = flow.get('componentCategory');\n\n\n\n\nvar selectQuery = \"select * from stock where productnumber = '\" + componentName + \"' and category = '\" + componentCategory + \"' and location = '\" + msg.payload[0].Location+\"'and quantity > 0 ORDER BY customer, productnumber\";\n\nmsg.topic = selectQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "47d8ce6862f93cbb"
            ]
        ]
    },
    {
        "id": "47d8ce6862f93cbb",
        "type": "mysql",
        "z": "fda19dfd2530881f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 900,
        "y": 1120,
        "wires": [
            [
                "93ec85b407b6a413"
            ]
        ]
    },
    {
        "id": "8f799da2392909fd",
        "type": "http response",
        "z": "287dfb52075392a3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 60,
        "wires": []
    },
    {
        "id": "2b200807188bc34c",
        "type": "template",
        "z": "287dfb52075392a3",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n\n    <header>\n\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">梱包<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n\n      </nav>\n\n    </header>\n\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n\n        <h1 class=\"mb-1\">梱包作業</h1>\n\n        <!-- Button trigger modal -->\n        <button type=\"button\" class=\"btn btn-warning ms-2 mb-1\" id=\"n-point\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" disabled>N点照合</button>\n        <button type=\"button\" class=\"btn btn-success ms-2 mb-1\" id=\"inspection-image\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop2\">画像検査</button>\n\n        <!-- Modal -->\n\n        <div class=\"modal fade\" id=\"staticBackdrop2\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n          \n          <div class=\"modal-dialog\">\n\n            <div class=\"modal-content\">\n\n              <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">画像検査</h1>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n\n              <div class=\"modal-body\">\n\n                <div class=\"row\">\n\n                  <div class=\"col-5\">\n                    <label for=\"i-productNumber\" class=\"col-6 col-form-label fs-6\">親品番：</label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"i-productNumber\" name=\"i-productNumber\" disabled>\n                  </div>\n                  <div class=\"col-5\">\n                    <label for=\"i-packingQuantity\" class=\"col-6 col-form-label fs-6\">梱包数：</label>\n                    <input type=\"number\" class=\"form-control form-control-sm\" id=\"i-packingQuantity\" name=\"i-packingQuantity\" disabled>\n                  </div>    \n                      \n                </div>\n\n                <div class=\"n-table-container\">\n\n                  <table id=\"n-table\" class=\"table table-sm table-hover caption-top mt-4\">\n                    <caption class=\"fs-6\">検査進捗</caption>\n                    <thead class=\"table-light\">\n                      <tr>\n                        <th scope=\"col\" class=\"fs-6\">LOT</th>\n                        <th scope=\"col\" class=\"fs-6\">進捗</th>\n                      </tr> \n                    </thead>  \n                    <tbody id=\"i-table-body\"></tbody>\n                  </table>\n                    \n                </div>  \n\n              </div>\n\n            </div>\n              \n          </div>\n\n        </div>\n\n        <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n          \n          <div class=\"modal-dialog\">\n\n            <div class=\"modal-content\">\n\n              <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">N点照合</h1>\n              </div>\n\n              <div class=\"modal-body\">\n                  \n                <div class=\"row\">\n\n                  <div class=\"col-10\">\n                    <label for=\"read-productNumber\" class=\"col-10 col-form-label fs-5\">部品QRを読み込んでください。</label>\n                    <input type=\"text\" class=\"form-control form-control-lg\" id=\"read-productNumber\" name=\"read-productNumber\">\n                  </div>\n                  <div class=\"col-5\">\n                    <label for=\"n-productNumber\" class=\"col-6 col-form-label fs-6\">親品番：</label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"n-productNumber\" name=\"n-productNumber\" disabled>\n                  </div>\n                  <div class=\"col-5\">\n                    <label for=\"productionNumber\" class=\"col-6 col-form-label fs-6\">LOT：</label>\n                    <input type=\"number\" class=\"form-control form-control-sm\" id=\"productionNumber\" name=\"productionNumber\" disabled>\n                  </div>    \n                      \n                </div>\n\n                <div class=\"n-table-container\">\n                  <table id=\"n-table\" class=\"table table-sm table-hover caption-top mt-4\">\n                    <caption class=\"fs-6\">構成部品</caption>\n                    <thead class=\"table-light\">\n                      <tr>\n                        <th scope=\"col\" class=\"fs-6\">品番</th>\n                        <th scope=\"col\" class=\"fs-6\">単位数</th>\n                        <th scope=\"col\" class=\"fs-6\">判定</th>\n                        <th scope=\"col\" class=\"fs-6\">()</th>\n                      </tr> \n                    </thead>  \n                    <tbody id=\"n-table-body\"></tbody>\n                  </table>\n                </div>  \n\n              </div>\n\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" id=\"modal-close-button\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" id=\"next-button\" disabled>次へ</button>\n              </div>\n            </div>\n\n          </div>\n\n        </div> \n\n        <div class=\"modal fade\" id=\"staticBackdrop3\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n\n          <div class=\"modal-dialog\">\n\n            <div class=\"modal-content\">\n\n              <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">重量検査</h1>\n              </div>\n\n              <div class=\"modal-body\">\n                  \n                <div class=\"row\">\n\n                  <div class=\"col-10\">\n                    <label for=\"read-packingWeight\" class=\"col-10 col-form-label fs-5\">製品を秤に置いてください。</label>\n                    <input type=\"text\" class=\"form-control form-control-lg\" id=\"read-packingWeight\" name=\"read-packingWeight\">\n                  </div>\n                  <div class=\"col-5\">\n                    <label for=\"weight-upper\" class=\"col-6 col-form-label fs-6\">上限重量(kg)：</label>\n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"weight-upper\" name=\"weight-upper\" disabled>\n                  </div>\n                  <div class=\"col-5\">\n                    <label for=\"weight-lower\" class=\"col-6 col-form-label fs-6\">下限重量(kg)：</label>\n                    <input type=\"number\" class=\"form-control form-control-sm\" id=\"weight-lower\" name=\"weight-lower\" disabled>\n                  </div>    \n                      \n                </div>   \n\n              </div>\n\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" id=\"modal-close-button2\">Close</button>\n              </div>\n              \n            </div>\n\n          </div>\n\n        </div>\n\n      </div>  \n          \n      <form method=\"post\" class=\"my-4\" id=\"myForm\">\n\n        <div class=\"info\">\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"productName\" class=\"col-6 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"productName\" name=\"productName\">\n            </div>  \n\n            <div class=\"col-6\">\n              <legend class=\"col-form-label fs-5\">ものの区分：</legend>\n              <div class=\"btn-group\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice1\" name=\"category\" value=\"半製品\"><span class=\"radio-text-lg\">半製品</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice2\" name=\"category\" value=\"完成品（梱包前）\"><span class=\"radio-text-lg\">完成品（梱包前）</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice3\" name=\"category\" value=\"完成品（梱包済）\"><span class=\"radio-text-lg\">完成品（梱包済）</span>\n                </label>\n              </div>\n            </div> \n\n            <div class=\"col-2\">\n              <label for=\"packingQuantity\" class=\"col-6 col-form-label fs-5\">数量：</label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"packingQuantity\" name=\"packingQuantity\">\n            </div>     \n          </div>\n\n          <div class=\"col-10 my-4\"> \n            <input type=\"button\" value=\"構成部品検索\" class=\"btn btn-secondary btn-lg\" id=\"search\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\"> \n            <input type=\"button\" value=\"作業開始\" class=\"btn btn-success btn-lg\" id=\"start\" disabled>\n            <input type=\"button\" value=\"入庫\" class=\"btn btn-primary btn-lg\" id=\"add\" disabled>\n          </div>\n          \n        </div> \n\n      </form>\n\n      <div class=\"table-container\">\n\n        <table id=\"mytable\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">構成部品</caption>\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">単位数</th>\n              <th scope=\"col\" class=\"fs-6\">梱包必要数</th>\n              <th scope=\"col\" class=\"fs-6\">移動作業</th>\n            </tr> \n          </thead>  \n          <tbody id=\"table-body\"></tbody>\n        </table>\n        \n      </div>  \n      \n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script> \n\n  </body>\n\n</html>\n",
        "output": "str",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "8f799da2392909fd"
            ]
        ]
    },
    {
        "id": "6d59dfa6464c3c2e",
        "type": "template",
        "z": "287dfb52075392a3",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\n/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 600px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n\n/* スクロール時にヘッダーを固定 */\nthead tr {\n    white-space: nowrap;\n    width: 100%;\n    position: sticky;\n    top: 0;\n    background-color: white;\n    z-index: 1;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}",
        "output": "str",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "2b200807188bc34c"
            ]
        ]
    },
    {
        "id": "e99fb92ebfa9b0dd",
        "type": "template",
        "z": "287dfb52075392a3",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "const ERROR_AUDIO = new Audio('/警告音.mp3');\nconst SUCCESS_AUDIO = new Audio('/成功音.mp3');\nconst PASSED_AUDIO = new Audio('/合格音.mp3');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction convertFullwidthToHalfwidth(str) {\n    // 全角空白（全角スペース）を半角空白（半角スペース）に変換\n    return str.replace(/[０-９　]/g, function (match) {\n        if (match === '　') {\n            return ' ';\n        } else {\n            return String.fromCharCode(match.charCodeAt(0) - 0xfee0);\n        }\n    });\n}\n\nfunction sendDataToNodeRED(elementId) {\n\n    let customer = document.getElementById('customer').value;\n    let productName = document.getElementById('productName').value;\n    let selectedCategory = document.querySelector('input[name=\"category\"]:checked').value;\n    let packingQuantity = document.getElementById('packingQuantity').value;\n\n    sessionStorage.setItem('customer', customer);\n    sessionStorage.setItem('productName', productName);\n    sessionStorage.setItem('selectedCategory', selectedCategory);\n    sessionStorage.setItem('packingQuantity', packingQuantity);\n\n    customer = convertFullwidthToHalfwidth(customer);\n    productName = convertFullwidthToHalfwidth(productName);\n\n    let requestData = {\n        customer: customer,\n        productName: productName,\n        selectedCategory: selectedCategory\n    };\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Component-search`);\n\n    socket.onopen = function (event) {\n        \n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        if (elementId === \"search\"){\n            displayDataInTable(responseData);\n        }else{\n            displayDataInTable2(responseData);\n        }\n        \n        // WebSocketを閉じる\n        socket.close();\n    };\n    \n}\n\nfunction sendDataToNodeRED3(weightInput,result){\n\n    var productionNumberInput = document.getElementById('productionNumber');\n    var currentLOT = parseInt(productionNumberInput.value, 10);\n    \n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/WeightCheek-result`);\n\n    socket.onopen = function (event) {\n\n        let requestData = {\n            workingID: sessionStorage.getItem('workingID'),\n            currentLOT: currentLOT,\n            result: result,\n            weight: weightInput\n        \n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        closeStaticBackdrop3modal()\n\n        alert('「次へ」ボタンを押してください。');\n        document.getElementById(\"next-button\").disabled = false;\n\n        // `read-packingWeight` の値をリセット\n        document.getElementById('read-packingWeight').value = \"\";\n\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction sendDataToNodeRED2(errorCounter) {\n\n    var productionNumberInput = document.getElementById('productionNumber');\n    var currentLOT = parseInt(productionNumberInput.value, 10);\n    var packingQuantity = parseInt(document.getElementById('packingQuantity').value, 10);\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/NpointCheck-result`);\n\n    socket.onopen = function (event) {\n\n        let requestData = {\n            workingID: sessionStorage.getItem('workingID'),\n            currentLOT: currentLOT,\n            errorCounter: errorCounter\n\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction displayDataInTable2(data) {\n\n    let tableBody = document.getElementById(\"n-table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    data.forEach(function (item) {\n        if(item.Npoint === 1){\n           let row = tableBody.insertRow();\n\n           let cell1 = row.insertCell(0);//品番\n           let cell2 = row.insertCell(1);//単位数\n           let cell3 = row.insertCell(2);//判定\n           let cell4 = row.insertCell(3);//()\n        \n           cell1.innerHTML = item.ComponentName;\n           cell2.innerHTML = item.Quantity;\n           cell3.innerHTML = \"-\";\n        }                \n    });\n}\n\nfunction displayDataInTable(data) {\n    \n    let tableBody = document.getElementById(\"table-body\");\n\n    let packingQuantity = parseInt(document.getElementById('packingQuantity').value, 10);\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//ID\n        let cell2 = row.insertCell(1);//品番\n        let cell3 = row.insertCell(2);//ものの区分\n        let cell4 = row.insertCell(3);//単位数\n        let cell5 = row.insertCell(4);//梱包必要数\n        let linkCell = row.insertCell(5);//移動作業\n        \n        cell1.innerHTML = item.ProductID;\n        cell1.style.display = \"none\";\n\n        cell2.innerHTML = item.ComponentName;\n        cell3.innerHTML = item.ComponentCategory;\n        cell4.innerHTML = item.Quantity;\n        cell5.innerHTML = item.Quantity * packingQuantity;\n\n        let link = document.createElement(\"a\");\n        link.textContent = \"移動作業へ\";\n        link.style.color = \"#000000\"; // 黒色\n        link.style.cursor = \"pointer\";\n        link.style.textDecoration = \"underline\";\n        link.style.pointerEvents = \"none\";\n    \n        let encodedProductID = encodeURIComponent(item.ProductID);\n        let encodedComponentName = encodeURIComponent(item.ComponentName);\n        let encodedComponentCategory = encodeURIComponent(item.ComponentCategory);\n\n        // エンコードされた変数を使用してURLを構築\n        let destinationURL = \"/page2\" +\n            \"?productID=\" + encodedProductID +\n            \"&componentName=\" + encodedComponentName +\n            \"&sourcePage=\" + \"梱包\" +\n            \"&componentCategory=\" + encodedComponentCategory +\n            \"&requiredQuantity=\" + cell5.innerHTML;\n            \n        link.href = destinationURL;        \n        linkCell.appendChild(link);\n        \n    });\n\n    if (sessionStorage.getItem('workingConditions')) {\n        alinkAUTO();\n        document.getElementById('search').disabled = true;\n    };\n\n    if (sessionStorage.getItem(\"workingID\")) {\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/WorkingReadQR-search`);\n\n        socket.onopen = function (event) {\n\n            let requestData = {\n                workingID: sessionStorage.getItem('workingID'),\n\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n\n            let responseData = JSON.parse(event.data);\n\n            let tableBodyRows = document.getElementById('table-body').getElementsByTagName('tr');\n\n            // 移動作業が完了しているかどうかのフラグ\n            let allTasksCompleted = true;\n\n\n            let rowCount = tableBodyRows.length;\n\n            for (let i = 0; i < rowCount; i++) {\n                let cell1 = tableBodyRows[i].cells[1];\n                let code = cell1.textContent.trim(); //品番\n\n                let cell5 = tableBodyRows[i].cells[5]; // 移動作業列のセル（インデックス5）を取得\n                \n\n\n                // オブジェクト内で品番を検索\n                let found = responseData.some(function (product) {\n                    return product.ProductName.toUpperCase() === code.toUpperCase();\n                });\n\n                // 品番が見つかった場合は背景色を変更\n                if (found) {\n                    tableBodyRows[i].style.backgroundColor = '#d9edf7';    \n                    cell5.textContent = '移動完了済'; // テキスト内容を「移動完了」に変更\n\n                }\n\n                // 移動作業が完了しているかどうかを確認\n                if (cell5.textContent.trim() !== '移動完了済') {\n                    allTasksCompleted = false;\n                }\n            }\n\n            // 全ての移動作業が完了している場合\n            if (allTasksCompleted) {\n                \n                alert(\"全ての移動作業が完了しました。\\n梱包作業後、入庫ボタンを押して作業を完了させてください。\");\n\n                // アラート後にオーディオを再生\n                SUCCESS_AUDIO.play().catch(error => {\n                    console.error(\"オーディオ再生エラー:\", error);\n                });\n\n                // 入庫ボタンを操作可能にする\n                document.getElementById(\"add\").disabled = false;\n                document.getElementById(\"n-point\").disabled = false;\n            }\n\n            socket.close();\n        };\n\n    }\n}\n\nfunction stockSearch(){\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Stock-search`);\n\n    socket.onopen = function (event) {\n\n        let requestData = gatherTableData(\"search\")\n\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n\n        let notFoundCodes = searchProductInTable(responseData);\n\n        if (notFoundCodes.length > 0) {\n            ERROR_AUDIO.play();\n            setTimeout(() => {\n                alert(\"構成部品在庫切れ：\" + notFoundCodes.join(', ') + \"\\n指定ストック置場所に在庫を入庫させてください。\");\n                sessionStorage.removeItem('customer');\n                sessionStorage.removeItem('productName');\n                sessionStorage.removeItem('selectedCategory');\n                sessionStorage.removeItem('packingQuantity');\n                socket.close();\n            }, 500); // 0.5秒後にアラートを表示\n            return;\n        \n        } else {\n            // 見つからなかった品番がない場合の処理\n            alert(\"構成部品在庫あり:\\n作業開始ボタンをクリックして作業を開始してください。\");\n\n            document.getElementById('start').disabled = false;\n\n            // WebSocketを閉じる\n            socket.close();\n\n        }\n\n        \n    };\n\n}\n\nfunction gatherTableData(clickButton) {\n\n    let dataToSubmit = {\n        clickButton: clickButton,\n        tableData: [],\n\n    };\n\n    let tableBody = document.getElementById(\"table-body\");\n    let rows = tableBody.getElementsByTagName(\"tr\");\n\n    for (let i = 0; i < rows.length; i++) {\n        let row = rows[i];\n        let rowData = {};\n\n\n        // 各セルを処理\n        let cells = row.getElementsByTagName(\"td\");\n        for (let j = 0; j < cells.length; j++) {\n            let cell = cells[j];\n            let cellData = \"\";\n\n            let inputElements = cell.querySelectorAll(\"input[type='number']\");\n            if (inputElements.length > 0) {\n                // テキストボックスが存在する場合、各テキストボックスの値を取得\n                let values = [];\n                for (let k = 0; k < inputElements.length; k++) {\n                    values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                }\n                cellData = values;\n            } else {\n                cellData = cell.textContent.trim();\n            }\n\n            let columnName = document.getElementById(\"mytable\").rows[0].cells[j].textContent.trim();\n\n            rowData[columnName] = cellData;\n        }\n        \n        dataToSubmit.tableData.push(rowData);\n    }\n    return dataToSubmit;\n}\n\nfunction searchProductInTable(responseData) {\n\n    let tableBodyRows = document.getElementById('table-body').rows;\n\n    let notFoundCodes = [];\n\n    for (let i = 0; i < tableBodyRows.length; i++) {\n        let cell = tableBodyRows[i].cells[1];\n        let code = cell.textContent.trim();; //品番\n\n        // オブジェクト内で品番を検索\n        let found = responseData.find(function (product) {\n            return product.productnumber === code.toUpperCase() ;\n        });\n\n        if (!found) {\n            notFoundCodes.push(code); // 見つからなかった品番を配列に追加\n        }\n    }\n\n    return notFoundCodes;\n}\n\nfunction alinkAUTO() {\n\n    // テーブル内のすべてのリンク要素を取得\n    let tableLinks = document.querySelectorAll(\"#table-body a\");\n\n    // リンク要素ごとにpointerEventsプロパティをautoに設定\n    tableLinks.forEach(function (link) {\n        link.style.pointerEvents = \"auto\";\n        link.style.color = \"#007bff\";\n    });\n\n}\n\nfunction clearForm() {\n\n    if (sessionStorage.getItem('workingConditions')) {\n        alert(\"梱包作業中なのでクリアが実施されません。\")\n        ERROR_AUDIO.play();\n        return\n    };\n\n    sessionStorage.removeItem('customer');\n    sessionStorage.removeItem('productName');\n    sessionStorage.removeItem('selectedCategory');\n    sessionStorage.removeItem('packingQuantity');\n    sessionStorage.removeItem('workingConditions');\n    sessionStorage.removeItem('workingID');\n\n    document.getElementById(\"customer\").value = \"\";\n    document.getElementById(\"productName\").value = \"\";\n    document.getElementById(\"packingQuantity\").value = \"\";\n\n\n    let categoryChoices = document.querySelectorAll('input[name=\"category\"]');\n    categoryChoices.forEach(function (choice) {\n        choice.checked = false;\n    });\n\n    let tableBody = document.getElementById(\"table-body\");\n    tableBody.innerHTML = \"\";\n\n}\n\nfunction getWorkingTime() {\n    var currentDate = new Date(); // 現在の日時を取得\n    var year = currentDate.getFullYear(); // 年を取得\n    var month = currentDate.getMonth() + 1; // 月を取得（0から始まるため+1する）\n    var day = currentDate.getDate(); // 日を取得\n    var hour = currentDate.getHours(); // 時を取得\n    var minute = currentDate.getMinutes(); // 分を取得\n    var second = currentDate.getSeconds(); // 秒を取得\n\n    // 月や日、時、分、秒が1桁の場合、2桁になるように調整\n    month = (month < 10) ? '0' + month : month;\n    day = (day < 10) ? '0' + day : day;\n    hour = (hour < 10) ? '0' + hour : hour;\n    minute = (minute < 10) ? '0' + minute : minute;\n    second = (second < 10) ? '0' + second : second;\n\n    var formattedDateTime = year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n\n    return formattedDateTime;\n}\n\nfunction generateSerialNumber() {\n    var storedStaffCode = sessionStorage.getItem('staffCode');\n    var currentDate = new Date(); // 現在の日時を取得\n    var year = currentDate.getFullYear(); // 年を取得\n    var month = currentDate.getMonth() + 1; // 月を取得（0から始まるため+1する）\n    var day = currentDate.getDate(); // 日を取得\n    var hour = currentDate.getHours(); // 時を取得\n    var minute = currentDate.getMinutes(); // 分を取得\n    var second = currentDate.getSeconds(); // 秒を取得\n\n    // 月や日、時、分、秒が1桁の場合、2桁になるように調整\n    month = (month < 10) ? '0' + month : month;\n    day = (day < 10) ? '0' + day : day;\n    hour = (hour < 10) ? '0' + hour : hour;\n    minute = (minute < 10) ? '0' + minute : minute;\n    second = (second < 10) ? '0' + second : second;\n\n    var generatedValue = `${year}${month}${day}${hour}${minute}${second}${storedStaffCode}`;\n\n    return generatedValue;\n}\n\nfunction performWeightCheck() {\n    let requestData = {\n        customer: convertFullwidthToHalfwidth(sessionStorage.getItem('customer')),\n        productName: convertFullwidthToHalfwidth(sessionStorage.getItem('productName')),\n        selectedCategory: sessionStorage.getItem('selectedCategory')\n    };\n\n    var modalElement = document.getElementById('staticBackdrop3');\n    var socket;\n\n    // モーダルが表示される際のイベント\n    modalElement.addEventListener('shown.bs.modal', function () {\n        const weightInputField = document.getElementById('read-packingWeight');\n        weightInputField.focus(); // モーダル表示時にフォーカス設定\n\n        const hostname = window.location.hostname;\n        socket = new WebSocket(`wss://${hostname}/InspectionPoint-search`);\n\n        socket.onopen = function () {\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            let responseData = JSON.parse(event.data);\n\n            if (Array.isArray(responseData) && responseData.length > 0) {\n                let data = responseData[0];\n\n                document.getElementById(\"weight-upper\").value = data.WeightU !== null ? parseFloat(data.WeightU).toFixed(3) : '';\n                document.getElementById(\"weight-lower\").value = data.WeightL !== null ? parseFloat(data.WeightL).toFixed(3) : '';\n            } else if (responseData.message) {\n                console.log(responseData.message);\n            } else {\n                console.log(\"Unexpected response format:\", responseData);\n            }\n\n            if (responseData.closeConnection) {\n                socket.close();\n            }\n        };\n    });\n\n    // モーダルが閉じられる際のイベント\n    modalElement.addEventListener('hidden.bs.modal', function () {\n        if (socket) {\n            socket.close(); // WebSocket接続を確実に閉じる\n        }\n        resetWeightInput(document.getElementById('read-packingWeight')); // 入力フィールドをリセット\n    });\n\n    // `read-packingWeight` の値変更イベントを一度だけ設定\n    const weightInputField = document.getElementById('read-packingWeight');\n    if (!weightInputField.hasAttribute('data-listener-added')) {\n        weightInputField.addEventListener('input', handleWeightInput);\n        weightInputField.setAttribute('data-listener-added', 'true'); // イベントリスナーが追加済みの印をつける\n    }\n\n    // モーダルを表示\n    var modal = new bootstrap.Modal(modalElement);\n    modal.show();\n}\n\n// 値変更時のハンドラー\nfunction handleWeightInput() {\n    const weightInputField = this;\n\n    // RS-232Cデータの処理（例: \"WT,-000.090 kg\" を 0.090 に変換）\n    const rawInput = weightInputField.value;\n    const processedValue = processWeightInput(rawInput);\n\n    // 処理後の値をフィールドに反映\n    if (processedValue !== null) {\n        weightInputField.value = processedValue.toFixed(3); // 小数点以下3桁にフォーマット\n        displayProcessedValue(processedValue); // 処理後の値を表示\n    } else {\n        console.error('データの処理に失敗しました。');\n        weightInputField.classList.remove('is-valid', 'is-invalid');\n        displayProcessedValue('エラー'); // エラー表示\n        return;\n    }\n\n    // 判定処理\n    const weightInput = parseFloat(weightInputField.value);\n    const weightUpper = parseFloat(document.getElementById(\"weight-upper\").value);\n    const weightLower = parseFloat(document.getElementById(\"weight-lower\").value);\n\n    if (!isNaN(weightInput) && !isNaN(weightUpper) && !isNaN(weightLower)) {\n        if (weightInput >= weightLower && weightInput <= weightUpper) {\n            PASSED_AUDIO.play();\n            weightInputField.classList.remove('is-invalid');\n            weightInputField.classList.add('is-valid');\n            \n\n            setTimeout(() => {\n                if (confirm('値は範囲内です。データを保存しますか？')) {\n                    sendDataToNodeRED3(weightInput, 0); // 合格データ送信\n                } else {\n                    alert('データの保存をキャンセルしました。');\n                    resetWeightInput(weightInputField);\n                }\n            }, 1000);\n        } else {\n            ERROR_AUDIO.play();\n            weightInputField.classList.remove('is-valid');\n            weightInputField.classList.add('is-invalid');\n            \n\n            setTimeout(() => {\n                if (confirm('値は範囲外です。データを保存しますか？')) {\n                    sendDataToNodeRED3(weightInput, 1); // 不合格データ送信\n                } else {\n                    alert('データの保存をキャンセルしました。');\n                    resetWeightInput(weightInputField);\n                }\n            }, 1000);\n        }\n    } else {\n        console.log('入力が不正または値が不足しています。');\n        weightInputField.classList.remove('is-valid', 'is-invalid');\n        \n    }\n}\n\n// RS-232Cデータを処理する関数\nfunction processWeightInput(rawData) {\n    // 正規表現で数値部分を抽出\n    let match = rawData.match(/-?\\d+\\.\\d+/); // 例: -000.090 を抽出\n\n    if (match) {\n        let weightValue = parseFloat(match[0]);\n        return Math.abs(weightValue); // 絶対値に変換\n    } else {\n        return null; // 無効なデータの場合は null を返す\n    }\n}\n\n// 処理後の値を表示する関数\nfunction displayProcessedValue(value) {\n    \n    const processedValueElement = document.getElementById('read-packingWeight')\n    if (processedValueElement) {\n        processedValueElement.textContent = value;\n    } else {\n        console.error('処理後の値を表示する要素が見つかりません。');\n    }\n}\n\n// 入力フィールドをリセットする関数\nfunction resetWeightInput(inputField) {\n    inputField.value = \"\";\n    inputField.classList.remove('is-valid', 'is-invalid');\n    inputField.focus(); // 再フォーカス\n}\n\n\nfunction closeStaticBackdrop3modal (){\n\n    const modalElement = document.getElementById('staticBackdrop3');\n    const modalInstance = bootstrap.Modal.getInstance(modalElement);\n    if (modalInstance) {\n        modalInstance.hide();\n    }\n\n    // 入力フィールドや状態をリセット\n    document.getElementById('read-packingWeight').value = ''; // 重量入力欄をクリア\n    document.getElementById('weight-upper').value = '';       // 上限重量をクリア\n    document.getElementById('weight-lower').value = '';       // 下限重量をクリア\n\n    console.log('モーダルを閉じ、フィールドをリセットしました。');\n\n}\n\n// Close ボタンのクリックイベントリスナーを設定\ndocument.getElementById('modal-close-button2').addEventListener('click', function () {\n    // モーダルを閉じる\n    closeStaticBackdrop3modal()\n    \n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let customer = sessionStorage.getItem(\"customer\");\n    let productName = sessionStorage.getItem(\"productName\");\n    let selectedCategory = sessionStorage.getItem(\"selectedCategory\");\n    let packingQuantity = sessionStorage.getItem(\"packingQuantity\");\n\n    // 梱包作業中の表示処理\n    if (customer && productName && selectedCategory ) {\n        document.getElementById('customer').value = customer;\n        document.getElementById('productName').value = productName;\n\n        // カテゴリに対応するラジオボタンを選択\n        if (selectedCategory === \"半製品\") {\n            document.getElementById(\"categoryChoice1\").checked = true;\n        } else if (selectedCategory === \"完成品（梱包前）\") {\n            document.getElementById(\"categoryChoice2\").checked = true;\n        } else if (selectedCategory === \"完成品（梱包済）\") {\n            document.getElementById(\"categoryChoice3\").checked = true;\n        }\n\n        document.getElementById('packingQuantity').value = parseInt(packingQuantity, 10);\n\n        document.getElementById('search').disabled = true;\n\n        document.getElementById('productName').disabled = true;\n\n        // ものの区分のラジオボタンを無効にする\n        document.getElementById('categoryChoice1').disabled = true;\n        document.getElementById('categoryChoice2').disabled = true;\n        document.getElementById('categoryChoice3').disabled = true;\n\n        // 数量入力フィールドを読み取り専用にする\n        document.getElementById('packingQuantity').readOnly = true;\n\n        let elementId = \"search\";\n        sendDataToNodeRED(elementId);\n    }    \n\n    const searchButton = document.getElementById(\"search\");\n    searchButton.addEventListener(\"click\", function (event) {\n\n        let tableBody = document.getElementById(\"table-body\");\n        tableBody.innerHTML = \"\";\n        let elementId = \"search\";\n\n        sendDataToNodeRED(elementId);\n        stockSearch();\n    \n    });\n\n    const startButton = document.getElementById(\"start\");\n    startButton.addEventListener(\"click\", function (event) {\n\n        const CONFIRMATION = window.confirm(\"作業を開始します。\");\n\n        if (CONFIRMATION) {\n\n            alinkAUTO();\n            document.getElementById('search').disabled = true;\n            // 品番入力フィールドを無効にする\n            document.getElementById('productName').disabled = true;\n\n            // ものの区分のラジオボタンを無効にする\n            document.getElementById('categoryChoice1').disabled = true;\n            document.getElementById('categoryChoice2').disabled = true;\n            document.getElementById('categoryChoice3').disabled = true;\n\n            // 数量入力フィールドを読み取り専用にする\n            document.getElementById('packingQuantity').readOnly = true;\n\n            sessionStorage.setItem('workingConditions', '梱包作業中');\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/WorkingContents-make`);\n\n            socket.onopen = function (event) {\n\n                let requestData = {\n                    startTime: getWorkingTime(),\n                    customer: document.getElementById('customer').value,\n                    productName: document.getElementById('productName').value,\n                    selectedCategory: document.querySelector('input[name=\"category\"]:checked').value,\n                    packingQuantity: document.getElementById('packingQuantity').value,\n                    storedStaffName: sessionStorage.getItem('staffName')\n\n                };\n                socket.send(JSON.stringify(requestData));\n            };\n\n            socket.onmessage = function (event) {\n\n                let responseData = JSON.parse(event.data);\n                sessionStorage.setItem('workingID', responseData[0].WorkingID);\n    \n                socket.close();\n            };\n\n        } else{\n            return\n        }           \n    });\n\n    const addButton = document.getElementById(\"add\");\n    addButton.addEventListener(\"click\", function (event) {\n\n        let serialNumber = generateSerialNumber();\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/WorkingContents-finsh`);\n\n        socket.onopen = function (event) {\n\n            let requestData = {\n                workingID: sessionStorage.getItem('workingID'),\n                finishTime: getWorkingTime(),\n                serialNumber: serialNumber \n                \n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n\n            \n            sessionStorage.removeItem('customer');\n            sessionStorage.removeItem('productName');\n            sessionStorage.removeItem('selectedCategory');\n            sessionStorage.removeItem('packingQuantity');\n            sessionStorage.removeItem('workingConditions');\n            sessionStorage.removeItem('workingID');\n\n\n            let workingContentsData = {\n\n                customer: document.getElementById('customer').value,\n                productName: document.getElementById('productName').value,\n                selectedCategory: document.querySelector('input[name=\"category\"]:checked').value,\n                packingQuantity: document.getElementById('packingQuantity').value,\n                serialNumber: serialNumber\n\n            }\n\n            let destinationURL = \"/page1?workingContentsData=\" + encodeURIComponent(JSON.stringify(workingContentsData));\n            window.location.href = destinationURL;\n\n\n        };\n        \n    });\n\n    var notFoundCounter = 0;\n    var modalElement = document.getElementById('staticBackdrop');\n    modalElement.addEventListener('show.bs.modal', function (event) {\n        \n        var productName = document.getElementById('productName').value;\n        document.getElementById('n-productNumber').value = productName;\n        document.getElementById('productionNumber').value = 1;\n        setTimeout(function () {\n            document.getElementById('read-productNumber').focus();\n        }, 1000);\n        \n        let elementId = \"staticBackdrop\"\n        sendDataToNodeRED(elementId);\n        \n    });\n\n    var timeout = null;\n    document.getElementById('read-productNumber').addEventListener('input', function () {\n        clearTimeout(timeout);\n        var readProductNumberInput = this;\n        timeout = setTimeout(function () {\n\n            const selectBox = document.getElementById('customer');\n            const selectedValue = selectBox.value; // 選択された値\n            const selectedText = selectBox.options[selectBox.selectedIndex].text;\n\n            function processReadProductNumber(input,customer){\n                console.log(customer);\n                switch (customer) {\n                    case \"TOTO(株)トイレ空間\":\n                        // 9桁目から18桁目までの部分文字列を取得し、空白を削除\n                        return input.value.substring(8, 18).replace(/\\s+/g, '');\n                    default:\n                        return input.value;\n                }\n\n            }\n\n            var readProductNumber = processReadProductNumber(readProductNumberInput,selectedValue);\n            console.log(\"処理された値:\", readProductNumber); \n\n            var tableBody = document.getElementById('n-table-body');\n            var rows = tableBody.getElementsByTagName('tr');\n            var found = false;\n\n            for (var i = 0; i < rows.length; i++) {\n                var cells = rows[i].getElementsByTagName('td');\n                var partNumber = cells[0].textContent;\n                var unitCount = parseInt(cells[1].textContent, 10);\n                var judgment = cells[2].textContent;\n                var parenText = cells[3].textContent;\n\n                if (partNumber === readProductNumber) {\n                    found = true;\n\n                    if (judgment === \"OK\") {\n                        ERROR_AUDIO.play();\n                        alert('※※※※エラー※※※※\\n既に判定がOKの品番を読み込んでいます。\\n部品を確認してください。');\n                        for (var i = 0; i < rows.length; i++) {\n                            var cells = rows[i].getElementsByTagName('td');\n                            cells[2].textContent = \"-\";\n                            cells[3].textContent = \"\";\n                        }\n                        notFoundCounter++;\n                    } else {\n                        if (parenText === \"\") {\n                            PASSED_AUDIO.play();\n                            cells[3].textContent = \"1\";\n                        } else {\n                            var parenNumber = parseInt(parenText, 10);\n                            parenNumber += 1;\n                            PASSED_AUDIO.play();\n                            cells[3].textContent = parenNumber.toString();\n                        }\n\n                        if (parseInt(cells[3].textContent, 10) === unitCount) {\n                            PASSED_AUDIO.play();\n                            cells[2].textContent = \"OK\";\n                        }\n                    }\n                    break;\n                }\n            }\n\n            if (!found) {\n                ERROR_AUDIO.play();\n                alert('※※※※エラー※※※※\\n品番が見つかりませんでした。\\n部品を確認してください。');\n                for (var i = 0; i < rows.length; i++) {\n                    var cells = rows[i].getElementsByTagName('td');\n                    cells[2].textContent = \"-\";\n                    cells[3].textContent = \"\";\n                }\n                notFoundCounter++;\n            } else {\n                var allOK = true;\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].getElementsByTagName('td')[2].textContent !== \"OK\") {\n                        allOK = false;\n                        break;\n                    }\n                }\n                if (allOK) {\n                    SUCCESS_AUDIO.play();\n                    const userChoice = confirm('全ての判定がOKになりました。重量検査をしますか？');\n                    if (userChoice) {\n                        // ユーザーが「OK」を選んだ場合\n                        //alert('重量検査を行います。秤を準備してください。');\n                        performWeightCheck();\n                    } else {\n\n                        alert('「次へ」ボタンを押してください。');\n                        document.getElementById(\"next-button\").disabled = false;\n\n                    }\n                    \n                }\n            }\n\n            // フィールドを空白にし、フォーカスを設定\n            readProductNumberInput.value = '';\n            readProductNumberInput.focus();\n        }, 2000); // 2秒後に処理を実行\n    });\n    document.getElementById('next-button').addEventListener('click', function () {\n\n\n        let errorCounter = notFoundCounter\n \n        sendDataToNodeRED2(errorCounter);\n\n        var productionNumberInput = document.getElementById('productionNumber');\n        var currentLOT = parseInt(productionNumberInput.value, 10);\n        var packingQuantity = parseInt(document.getElementById('packingQuantity').value, 10);\n\n        if (currentLOT >= packingQuantity) {\n            alert('製造数の上限に達しました。処理を終了します。');\n            var modal = bootstrap.Modal.getInstance(document.getElementById('staticBackdrop'));\n            modal.hide();\n            return;\n        }\n\n        productionNumberInput.value = currentLOT + 1;\n        \n        var tableBody = document.getElementById('n-table-body');\n        var rows = tableBody.getElementsByTagName('tr');\n\n        for (var i = 0; i < rows.length; i++) {\n            var cells = rows[i].getElementsByTagName('td');\n            cells[2].textContent = \"-\";\n            cells[3].textContent = \"\";\n        }\n        notFoundCounter = 0;\n        document.getElementById(\"next-button\").disabled = true;\n\n    }); \n\n    document.getElementById('modal-close-button').addEventListener('click', function (event) {\n        event.preventDefault(); // デフォルトの閉じる動作をキャンセル\n\n        if (confirm('作業を中断しますか？\\n中断した場合検査データは途中までになります。')) {\n            // OKが押された場合、モーダルを閉じる\n            var modal = bootstrap.Modal.getInstance(document.getElementById('staticBackdrop'));\n            modal.hide();\n        } else {\n            // キャンセルが押された場合、モーダルを閉じない\n            event.preventDefault(); // モーダルを閉じる動作を防ぐ\n        }\n    });\n\n\n    var modalElement = document.getElementById('staticBackdrop2');\n    modalElement.addEventListener('show.bs.modal', function (event) {\n\n        document.getElementById('i-productNumber').value = document.getElementById('productName').value;\n        document.getElementById('i-packingQuantity').value = document.getElementById('packingQuantity').value;\n\n        \n\n        let tableBody = document.getElementById(\"i-table-body\");\n\n        for (let i = 1; i <= parseInt(document.getElementById('packingQuantity').value, 10); i++){\n\n            let row = tableBody.insertRow();\n\n            let cell1 = row.insertCell(0);//LOT\n            let cell2 = row.insertCell(1);//進捗\n\n\n            cell1.innerHTML = i;\n\n            let link = document.createElement(\"a\");\n            link.href = \"#\";\n            link.textContent = \"未処理\";\n            link.addEventListener(\"click\", function () {\n                let redirectURL = `https://192.168.0.87/inspectionCamer`;\n                window.location.href = redirectURL;\n            });\n            cell2.appendChild(link);\n\n        }\n\n    });\n\n\n});\n",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "6d59dfa6464c3c2e"
            ]
        ]
    },
    {
        "id": "17e5830e3fad1bf0",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "e99fb92ebfa9b0dd"
            ]
        ]
    },
    {
        "id": "07a2d45bb1f4048b",
        "type": "file in",
        "z": "287dfb52075392a3",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "17e5830e3fad1bf0"
            ]
        ]
    },
    {
        "id": "6f43e6439b9cd6b1",
        "type": "http in",
        "z": "287dfb52075392a3",
        "name": "",
        "url": "/page10",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "07a2d45bb1f4048b"
            ]
        ]
    },
    {
        "id": "dbb9b3897f3ce1e1",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "d863558c17b911cb",
        "client": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "cbfe5601ac521791"
            ]
        ]
    },
    {
        "id": "cbfe5601ac521791",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 120,
        "wires": [
            [
                "ca2bfcbcc2743c10"
            ]
        ]
    },
    {
        "id": "ca2bfcbcc2743c10",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM Products",
        "func": "\nvar selectQuery = \"SELECT * FROM Products WHERE ProductName = '\" + msg.payload.productName + \"' AND Customer = '\" + msg.payload.customer + \"' AND ProductCategory = '\" + msg.payload.selectedCategory + \"' ORDER BY Customer, ProductName, ProductCategory\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 120,
        "wires": [
            [
                "6920c3c98aef7f12"
            ]
        ]
    },
    {
        "id": "6920c3c98aef7f12",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 120,
        "wires": [
            [
                "f8a94034dc13279c"
            ]
        ]
    },
    {
        "id": "f8a94034dc13279c",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "条件データ",
        "func": "var productID = msg.payload[0].ProductID\n\nflow.set('parentID', productID);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [
                "55d30c0165585f16"
            ]
        ]
    },
    {
        "id": "55d30c0165585f16",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM ProductComponents",
        "func": "var parentID = flow.get('parentID');\n\nvar selectQuery = \"SELECT * FROM ProductComponents WHERE ParentID = '\" + parentID + \"' ORDER BY ComponentName\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 180,
        "wires": [
            [
                "73db5b4539ac7e4f"
            ]
        ]
    },
    {
        "id": "73db5b4539ac7e4f",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 180,
        "wires": [
            [
                "f5106397bd67cbbf"
            ]
        ]
    },
    {
        "id": "f5106397bd67cbbf",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "d863558c17b911cb",
        "client": "",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "bd7eae4223e3e346",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "a6402cfdcb2646a7",
        "client": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "7acec5da6653b84b"
            ]
        ]
    },
    {
        "id": "7acec5da6653b84b",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "76f26dec42a01099"
            ]
        ]
    },
    {
        "id": "76f26dec42a01099",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM Products",
        "func": "\nvar tableData = msg.payload.tableData;\n\nflow.set('tableData', tableData);\n\nvar records = msg.payload.tableData;\n\nvar selectQueries = [];\n\nrecords.forEach(function (record) {\n\n    var selectQuery = \"SELECT * FROM Products WHERE ProductID = \" + record['ID'] + \"\";\n    selectQueries.push(selectQuery);\n});\n\nmsg.payload = selectQueries;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "b4e884423306f914"
            ]
        ]
    },
    {
        "id": "794c3983969efab1",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 280,
        "wires": [
            [
                "fa8d01c8cda7ec6a"
            ]
        ]
    },
    {
        "id": "b4e884423306f914",
        "type": "split",
        "z": "287dfb52075392a3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "1673c7d11cf5b37a"
            ]
        ]
    },
    {
        "id": "1673c7d11cf5b37a",
        "type": "change",
        "z": "287dfb52075392a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 280,
        "wires": [
            [
                "794c3983969efab1"
            ]
        ]
    },
    {
        "id": "fa8d01c8cda7ec6a",
        "type": "join",
        "z": "287dfb52075392a3",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "940c2f9cc8df008c"
            ]
        ]
    },
    {
        "id": "940c2f9cc8df008c",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM stock",
        "func": "var tableData = flow.get('tableData');\n\nmsg.payload = msg.payload.flat();\n\nvar records = msg.payload;\n\nvar selectQueries = [];\n\nrecords.forEach(function (record, index) {\n\n    var selectQuery = \"SELECT productnumber, SUM(quantity) AS total_quantity FROM stock WHERE productnumber = '\" + record['ProductName'] + \"' AND category = '\" + record['ProductCategory'] + \"' AND location = '\" + record['Location'] + \"' GROUP BY productnumber HAVING total_quantity > \" + tableData[index]['梱包必要数']+\" \";\n    selectQueries.push(selectQuery);\n});\n\nmsg.payload = selectQueries;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "2bc54c712745ce72"
            ]
        ]
    },
    {
        "id": "2bc54c712745ce72",
        "type": "split",
        "z": "287dfb52075392a3",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "cc72284ba3dcba49"
            ]
        ]
    },
    {
        "id": "cc72284ba3dcba49",
        "type": "change",
        "z": "287dfb52075392a3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "dafd906e0db898fd"
            ]
        ]
    },
    {
        "id": "dafd906e0db898fd",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 360,
        "wires": [
            [
                "57bc257195b10487"
            ]
        ]
    },
    {
        "id": "57bc257195b10487",
        "type": "join",
        "z": "287dfb52075392a3",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 400,
        "wires": [
            [
                "f64211e84eea32cb"
            ]
        ]
    },
    {
        "id": "923bcf9cbd262ec3",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "a6402cfdcb2646a7",
        "client": "",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "f64211e84eea32cb",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "flat",
        "func": "msg.payload = msg.payload.flat();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 400,
        "wires": [
            [
                "923bcf9cbd262ec3"
            ]
        ]
    },
    {
        "id": "e5f4a0979e02deb7",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "4ac382f6665022bf",
        "client": "",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "6ae06c00ecad09d4"
            ]
        ]
    },
    {
        "id": "6ae06c00ecad09d4",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 500,
        "wires": [
            [
                "5ed31ff35344c835"
            ]
        ]
    },
    {
        "id": "5ed31ff35344c835",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "INSERT INTO WorkingContents",
        "func": "flow.set('startTime', msg.payload.startTime);\nflow.set('customer', msg.payload.customer);\nflow.set('productName', msg.payload.productName);\nflow.set('productCategory', msg.payload.selectedCategory);\nflow.set('workerName', msg.payload.storedStaffName);\n\nvar insertQuery = \"INSERT INTO WorkingContents (StartTime, Customer, ProductName, ProductCategory, Quantity, WorkerName) VALUES ('\" + msg.payload.startTime + \"','\" + msg.payload.customer + \"','\" + msg.payload.productName + \"','\" + msg.payload.selectedCategory + \"',\" + parseInt(msg.payload.packingQuantity) + \",'\" + msg.payload.storedStaffName + \"') \";\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 500,
        "wires": [
            [
                "3e1affb58a8bd509"
            ]
        ]
    },
    {
        "id": "3e1affb58a8bd509",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 500,
        "wires": [
            [
                "f22854f0f7a2f621"
            ]
        ]
    },
    {
        "id": "f22854f0f7a2f621",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT WorkingID FROM WorkingContents",
        "func": "var startTime = flow.get('startTime');\nvar productName = flow.get('productName');\nvar workerName = flow.get('workerName');\n\n\n\nvar selectQuery = \"SELECT WorkingID FROM WorkingContents WHERE StartTime = '\" + startTime + \"' AND ProductName = '\" + productName + \"' AND WorkerName = '\" + workerName + \"'\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 540,
        "wires": [
            [
                "b64175acea05244b"
            ]
        ]
    },
    {
        "id": "b64175acea05244b",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 540,
        "wires": [
            [
                "9bde93914268bb7c"
            ]
        ]
    },
    {
        "id": "9bde93914268bb7c",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "4ac382f6665022bf",
        "client": "",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "72251a70054a83aa",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "537079f7781b1f3f",
        "client": "",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "60977daca2aa9c15"
            ]
        ]
    },
    {
        "id": "60977daca2aa9c15",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "0a62f75ed2170b95"
            ]
        ]
    },
    {
        "id": "0a62f75ed2170b95",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM Products",
        "func": "\nvar selectQuery = \"SELECT * FROM WorkingReadQR WHERE WorkingID = \" + parseInt(msg.payload.workingID) + \"\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "ca1872df310e0832"
            ]
        ]
    },
    {
        "id": "ca1872df310e0832",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 620,
        "wires": [
            [
                "5793a5357a935e90"
            ]
        ]
    },
    {
        "id": "5793a5357a935e90",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "537079f7781b1f3f",
        "client": "",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "ef8202a7baa3c27a",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "79e9bdcb0e70fec4",
        "client": "",
        "x": 200,
        "y": 700,
        "wires": [
            [
                "f899af27b8772d86"
            ]
        ]
    },
    {
        "id": "f899af27b8772d86",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 700,
        "wires": [
            [
                "2a6b250509ca3fe3"
            ]
        ]
    },
    {
        "id": "2a6b250509ca3fe3",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "UPDATE WorkingContents",
        "func": "var updateQuery = \"UPDATE WorkingContents SET FinishTime = '\" + msg.payload.finishTime + \"',SerialNumber = \" + msg.payload.serialNumber + \" WHERE WorkingID = \" + parseInt(msg.payload.workingID) + \"\";\n\nmsg.topic = updateQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 700,
        "wires": [
            [
                "5231679625b3f98a"
            ]
        ]
    },
    {
        "id": "5231679625b3f98a",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 700,
        "wires": [
            [
                "48b73d26c11c5af6"
            ]
        ]
    },
    {
        "id": "48b73d26c11c5af6",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "79e9bdcb0e70fec4",
        "client": "",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "f665e2e28ee38d48",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "8cbe059ccb4ed529",
        "client": "",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "af5daed22db7ef0e"
            ]
        ]
    },
    {
        "id": "af5daed22db7ef0e",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 760,
        "wires": [
            [
                "fd24c42f5b5414de"
            ]
        ]
    },
    {
        "id": "fd24c42f5b5414de",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "INSERT NpointCheck",
        "func": "let data = msg.payload;\n\nvar insertQuery = `INSERT INTO NpointCheck (\n                   WorkingID,\n                   Lot,\n                   ErrorCount\n                   ) VALUES (?, ?, ?) `;\n\n\nmsg.topic = insertQuery;\n\nmsg.payload = [\n    parseInt(data.workingID),\n    data.currentLOT,\n    data.errorCounter\n    \n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "3e2eea4639386ca7"
            ]
        ]
    },
    {
        "id": "3e2eea4639386ca7",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 760,
        "wires": [
            [
                "fa323e235ab4adcd"
            ]
        ]
    },
    {
        "id": "fa323e235ab4adcd",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "8cbe059ccb4ed529",
        "client": "",
        "x": 1050,
        "y": 760,
        "wires": []
    },
    {
        "id": "93f6d7acb0bff396",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "c560a5ef69f7e214",
        "client": "",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "e5f33f4fa337007c"
            ]
        ]
    },
    {
        "id": "e5f33f4fa337007c",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "e71c1a030f65451e"
            ]
        ]
    },
    {
        "id": "e71c1a030f65451e",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM Products",
        "func": "\nvar selectQuery = \"SELECT * FROM Products WHERE ProductName = '\" + msg.payload.productName + \"' AND Customer = '\" + msg.payload.customer + \"' AND ProductCategory = '\" + msg.payload.selectedCategory + \"' ORDER BY Customer, ProductName, ProductCategory\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "cbc7b043e51c4025"
            ]
        ]
    },
    {
        "id": "cbc7b043e51c4025",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 840,
        "wires": [
            [
                "ac27309ecf2d4f00"
            ]
        ]
    },
    {
        "id": "ac27309ecf2d4f00",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "SELECT * FROM InspectionPoint",
        "func": "var productID = msg.payload[0].ProductID\n\n\nvar selectQuery = \"SELECT * FROM InspectionPoint WHERE ProductID = \" +productID + \"\";\n\nmsg.topic = selectQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 900,
        "wires": [
            [
                "6d3bc5206e7d32eb"
            ]
        ]
    },
    {
        "id": "6d3bc5206e7d32eb",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 900,
        "wires": [
            [
                "96767b6090e7e6e8"
            ]
        ]
    },
    {
        "id": "96767b6090e7e6e8",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "c560a5ef69f7e214",
        "client": "",
        "x": 1060,
        "y": 900,
        "wires": []
    },
    {
        "id": "646c1ec613781d57",
        "type": "websocket in",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "668f9890b7255164",
        "client": "",
        "x": 190,
        "y": 980,
        "wires": [
            [
                "a5545864f3aae66d"
            ]
        ]
    },
    {
        "id": "a5545864f3aae66d",
        "type": "json",
        "z": "287dfb52075392a3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 980,
        "wires": [
            [
                "c716caf8235f8dba"
            ]
        ]
    },
    {
        "id": "c716caf8235f8dba",
        "type": "function",
        "z": "287dfb52075392a3",
        "name": "INSERT WeightCheck",
        "func": "let data = msg.payload;\n\nvar insertQuery = `INSERT INTO WeightCheck (\n                   WorkingID,\n                   Lot,\n                   Result,\n                   Weight\n                   ) VALUES (?, ?, ?, ?) `;\n\n\nmsg.topic = insertQuery;\n\nmsg.payload = [\n    parseInt(data.workingID),\n    data.currentLOT,\n    data.result,\n    data.weight\n    \n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            [
                "3b1a2fa3c9420a01"
            ]
        ]
    },
    {
        "id": "3b1a2fa3c9420a01",
        "type": "mysql",
        "z": "287dfb52075392a3",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 980,
        "wires": [
            [
                "056e347a8662659f"
            ]
        ]
    },
    {
        "id": "056e347a8662659f",
        "type": "websocket out",
        "z": "287dfb52075392a3",
        "name": "",
        "server": "668f9890b7255164",
        "client": "",
        "x": 1050,
        "y": 980,
        "wires": []
    },
    {
        "id": "56cad2595735d486",
        "type": "websocket in",
        "z": "13588b2cc197771c",
        "name": "",
        "server": "539c409da4fe05e1",
        "client": "",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "4c2bc5d6e1b3c644"
            ]
        ]
    },
    {
        "id": "4c2bc5d6e1b3c644",
        "type": "json",
        "z": "13588b2cc197771c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 460,
        "wires": [
            [
                "2c054eecc31e6b4d"
            ]
        ]
    },
    {
        "id": "9efe972ecb5b160a",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "重複品番",
        "func": "\nvar dataDB = msg.payload; \n\nvar dataCSV = flow.get('checkdata');\nvar jsonData = JSON.stringify(dataCSV);\nmsg.dataCSV = dataCSV;\n\nvar radioSelection = flow.get('radioSelection');\n\n//重複品番をリストに追加していく\nvar duplicateData = [];\n\nif (radioSelection ==='受入検収'){\n\n    for (var i = 0; i < dataCSV.length; i++) {\n        for (var j = 0; j < dataDB.length; j++) {\n\n            if (dataCSV[i].品番 === dataDB[j].productnumber && dataCSV[i].発注番号 === dataDB[j].ordernumber) {    \n                duplicateData.push(dataCSV[i]);\n                break; \n            }\n        }\n    }\n\n} else if (radioSelection === '受入工程完了'){\n\n    for (var i = 0; i < dataCSV.length; i++) {\n        for (var j = 0; j < dataDB.length; j++) {\n\n            var quantityCSV = parseInt(dataCSV[i].完了数, 10);\n            var quantityDB = parseInt(dataDB[j].quantity, 10);\n\n            var serialnumberCSV = parseInt(dataCSV[i].製造番号, 10);\n            var serialnumberDB = parseInt(dataDB[j].serialnumber, 10);\n\n            if (dataCSV[i].品番 === dataDB[j].productnumber && quantityCSV === quantityDB && serialnumberCSV === serialnumberDB) {\n                duplicateData.push(dataCSV[i]);\n                break; \n            }\n        }\n    }\n} else if (radioSelection === '出荷') {\n\n    for (var i = 0; i < dataCSV.length; i++) {\n        for (var j = 0; j < dataDB.length; j++) {\n\n            if (dataCSV[i].品番 === dataDB[j].productnumber && dataCSV[i].受注番号 === dataDB[j].cipsnumber ) {\n                duplicateData.push(dataCSV[i]);\n                break; \n            }\n        }\n    }\n}\n\n// 重複データを送る為の処理\nif (duplicateData.length > 0) {\n    msg.payload = duplicateData;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 460,
        "wires": [
            [
                "983f390d6c158df2"
            ]
        ]
    },
    {
        "id": "21134f7745853fdd",
        "type": "websocket in",
        "z": "13588b2cc197771c",
        "name": "",
        "server": "c5c75f7ddf809773",
        "client": "",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "8d287e651e4710f3"
            ]
        ]
    },
    {
        "id": "8d287e651e4710f3",
        "type": "json",
        "z": "13588b2cc197771c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "9928c44f4171f38e"
            ]
        ]
    },
    {
        "id": "9928c44f4171f38e",
        "type": "switch",
        "z": "13588b2cc197771c",
        "name": "条件分岐",
        "property": "payload.radioSelection",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "受入検収",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "受入工程完了",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "出荷",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "c8a686b00d5a2736",
                "22f95007be6f4da4"
            ],
            [
                "44aee4e160fd5f86",
                "ae36093f37ef19c9"
            ],
            [
                "6f3d926c98c5a46a"
            ]
        ]
    },
    {
        "id": "6f3d926c98c5a46a",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert shipping",
        "func": "var records = msg.payload.file;\nrecords.forEach(function (record) {\n    // 受注日と客先納期を変更する\n    record.受注日 = record.受注日.replace(/\\//g, '-');\n    record.客先納期 = record.客先納期.replace(/\\//g, '-');\n    record.出荷日 = record.出荷日.replace(/\\//g, '-');\n});\nvar workingday = msg.payload.workingday;\nvar workercode = msg.payload.storedStaffCode;\nvar workername = msg.payload.storedStaffName;\n\n// データを変数に保存\nflow.set('storedStaffName', workername);\nflow.set('storedStaffCode', workercode);\nflow.set('workingday', workingday);\n\nvar insertQuery = \"INSERT INTO shipping (workingday, cipsnumber, orderdate, customerdate, shippingdate, customer, productnumber, ordernumber, delivery1, delivery2, quantity, groupname, deliveryto, directdelivery, status,workercode, workername, remarks) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        workingday,\n        //Number.isInteger(record.受注番号) ? record.受注番号 : parseInt(record.受注番号),\n        record.受注番号,\n        record.受注日,\n        record.客先納期,\n        record.出荷日,\n        record.客先名,\n        record.品番,\n        record.オーダー番号,\n        record.引渡場所1,\n        record.引渡場所2,\n        Number.isInteger(record.受注数) ? record.受注数 : parseInt(record.受注数),\n        record.ｸﾞﾙｰﾌﾟ,\n        record.納入先,\n        record.直送先,\n        \"0\",\n        workercode,\n        workername,\n        record.備考,        \n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 300,
        "wires": [
            [
                "6a04fe0801aa21c9"
            ]
        ]
    },
    {
        "id": "1a073406cf266952",
        "type": "mysql",
        "z": "13588b2cc197771c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 860,
        "y": 220,
        "wires": [
            [
                "9608c96095b20005"
            ]
        ]
    },
    {
        "id": "c8a686b00d5a2736",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert warehousing",
        "func": "var records = msg.payload.file;\nvar storedStaffcode = msg.payload.storedStaffCode;\nvar storedStaffname = msg.payload.storedStaffName;\n\n\nrecords.forEach(function (record) {\n\n    // 元の日付文字列\n    var originalDate = record.検収日;\n\n    // \"/\" を区切り文字として日付文字列を分割\n    var dateParts = originalDate.split(\"/\");\n\n    // 年、月、日を取得\n    var year = dateParts[0];\n    var month = dateParts[1];\n    var day = dateParts[2];\n\n    // 時刻情報を追加\n    var formattedDate = year + \"-\" + month + \"-\" + day + \" 00:00:00\";\n\n    record.検収日 = formattedDate\n\n    record.製造番号 = record.製造番号.replace(/\"|=/g, '');\n    record.発注番号 = record.発注番号.replace(/\"|=/g, '');\n    record.品番 = record.品番.replace(/\"|=/g, '');\n\n});\n\nvar insertQuery = \"INSERT INTO warehousing (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername,ordernumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        record.検収日,\n        \"受入置場\",\n        \"半製品\",\n        record.客先名,\n        record.品番,\n        Number.isInteger(record.検収数) ? record.検収数 : parseInt(record.検収数),\n        Number.isInteger(record.製造番号) ? record.製造番号 : parseInt(record.製造番号),\n        storedStaffcode,\n        storedStaffname,\n        record.発注番号\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 140,
        "wires": [
            [
                "1a073406cf266952"
            ]
        ]
    },
    {
        "id": "22f95007be6f4da4",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert stock",
        "func": "var records = msg.payload.file;\nvar storedStaffcode = msg.payload.storedStaffCode;\nvar storedStaffname = msg.payload.storedStaffName;\n\n\nrecords.forEach(function (record) {\n\n    // 元の日付文字列\n    var originalDate = record.検収日;\n\n    // \"/\" を区切り文字として日付文字列を分割\n    var dateParts = originalDate.split(\"/\");\n\n    // 年、月、日を取得\n    var year = dateParts[0];\n    var month = dateParts[1];\n    var day = dateParts[2];\n\n    // 時刻情報を追加\n    var formattedDate = year + \"-\" + month + \"-\" + day + \" 00:00:00\";\n\n    record.検収日 = formattedDate\n\n    record.製造番号 = record.製造番号.replace(/\"|=/g, '');\n    record.品番 = record.品番.replace(/\"|=/g, '');\n\n\n});\n\nvar insertQuery = \"INSERT INTO stock (workingday, location, category, customer, productnumber, quantity, serialnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        record.検収日,\n        \"受入置場\",\n        \"半製品\",\n        record.客先名,\n        record.品番,\n        Number.isInteger(record.検収数) ? record.検収数 : parseInt(record.検収数),\n        Number.isInteger(record.製造番号) ? record.製造番号 : parseInt(record.製造番号),\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 180,
        "wires": [
            [
                "1a073406cf266952"
            ]
        ]
    },
    {
        "id": "44aee4e160fd5f86",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert warehousing",
        "func": "var records = msg.payload.file;\nvar storedStaffcode = msg.payload.storedStaffCode;\nvar storedStaffname = msg.payload.storedStaffName;\n\n\nrecords.forEach(function (record) {\n\n    // 元の日付文字列\n    var originalDate = record.完了日;\n\n    // \"/\" を区切り文字として日付文字列を分割\n    var dateParts = originalDate.split(\"/\");\n\n    // 年、月、日を取得\n    var year = dateParts[0];\n    var month = dateParts[1];\n    var day = dateParts[2];\n\n    // 時刻情報を追加\n    var formattedDate = year + \"-\" + month + \"-\" + day + \" 00:00:00\";\n\n    record.完了日 = formattedDate\n\n    record.製造番号 = record.製造番号.replace(/\"|=/g, '');\n    record.品番 = record.品番.replace(/\"|=/g, '');\n\n\n});\n\nvar insertQuery = \"INSERT INTO warehousing (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        record.完了日,\n        \"受入置場\",\n        \"半製品\",\n        record.客先名,\n        record.品番,\n        Number.isInteger(record.完了数) ? record.完了数 : parseInt(record.完了数),\n        Number.isInteger(record.製造番号) ? record.製造番号 : parseInt(record.製造番号),\n        storedStaffcode,\n        storedStaffname\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "1a073406cf266952"
            ]
        ]
    },
    {
        "id": "ae36093f37ef19c9",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert stock",
        "func": "var records = msg.payload.file;\nvar storedStaffcode = msg.payload.storedStaffCode;\nvar storedStaffname = msg.payload.storedStaffName;\n\n\nrecords.forEach(function (record) {\n\n    // 元の日付文字列\n    var originalDate = record.完了日;\n\n    // \"/\" を区切り文字として日付文字列を分割\n    var dateParts = originalDate.split(\"/\");\n\n    // 年、月、日を取得\n    var year = dateParts[0];\n    var month = dateParts[1];\n    var day = dateParts[2];\n\n    // 時刻情報を追加\n    var formattedDate = year + \"-\" + month + \"-\" + day + \" 00:00:00\";\n\n    record.完了日 = formattedDate\n\n    record.製造番号 = record.製造番号.replace(/\"|=/g, '');\n    record.品番 = record.品番.replace(/\"|=/g, '');\n\n\n});\n\nvar insertQuery = \"INSERT INTO stock (workingday, location, category, customer, productnumber, quantity, serialnumber) VALUES \";\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n    var values = [\n        record.完了日,\n        \"受入置場\",\n        \"半製品\",\n        record.客先名,\n        record.品番,\n        Number.isInteger(record.完了数) ? record.完了数 : parseInt(record.完了数),\n        Number.isInteger(record.製造番号) ? record.製造番号 : parseInt(record.製造番号),\n\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 260,
        "wires": [
            [
                "1a073406cf266952"
            ]
        ]
    },
    {
        "id": "90ce10a1b5e93655",
        "type": "switch",
        "z": "13588b2cc197771c",
        "name": "条件分岐",
        "property": "payload.radioSelection",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "受入検収",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "受入工程完了",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "出荷",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 680,
        "y": 460,
        "wires": [
            [
                "8ab005659fd9e9bb"
            ],
            [
                "8ab005659fd9e9bb"
            ],
            [
                "d16a4738a493d111"
            ]
        ]
    },
    {
        "id": "2c054eecc31e6b4d",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "CSVデータを変数に保存",
        "func": "var checkdata = msg.payload.file;\nvar radioSelection = msg.payload.radioSelection\n\n// データを変数に保存\nflow.set('radioSelection', radioSelection);\nflow.set('checkdata', checkdata);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            [
                "90ce10a1b5e93655"
            ]
        ]
    },
    {
        "id": "8ab005659fd9e9bb",
        "type": "change",
        "z": "13588b2cc197771c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM warehousing;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "e90ccc7a33b88f55"
            ]
        ]
    },
    {
        "id": "e90ccc7a33b88f55",
        "type": "mysql",
        "z": "13588b2cc197771c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 980,
        "y": 460,
        "wires": [
            [
                "9efe972ecb5b160a"
            ]
        ]
    },
    {
        "id": "983f390d6c158df2",
        "type": "websocket out",
        "z": "13588b2cc197771c",
        "name": "",
        "server": "539c409da4fe05e1",
        "client": "",
        "x": 1300,
        "y": 460,
        "wires": []
    },
    {
        "id": "d16a4738a493d111",
        "type": "change",
        "z": "13588b2cc197771c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM shipping;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 480,
        "wires": [
            [
                "e90ccc7a33b88f55"
            ]
        ]
    },
    {
        "id": "6a04fe0801aa21c9",
        "type": "mysql",
        "z": "13588b2cc197771c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 860,
        "y": 300,
        "wires": [
            [
                "ab28921fefd9f1f6"
            ]
        ]
    },
    {
        "id": "3b76fed2566aa454",
        "type": "change",
        "z": "13588b2cc197771c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM tbname GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM tbname WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday, workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "tbname",
                "fromt": "str",
                "to": "shipping",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "530d31dc1debe1d3",
        "type": "mysql",
        "z": "13588b2cc197771c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 860,
        "y": 340,
        "wires": [
            [
                "605026eb03bd7308"
            ]
        ]
    },
    {
        "id": "605026eb03bd7308",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "Build Insert shippingheader",
        "func": "\nfunction formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar insertQuery = \"INSERT INTO shippingheader (workingday, workername, shippingdate, customer, deliveryto, status, orderquantity, readyquantity) VALUES \";\nvar STATUS = 0;\nvar valueStrings = [];\nmsg.payload.forEach(function (record, index) {\n\n    var READY_QUANTITY = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n\n    var values = [\n        formatDateTime(record.workingday),\n        record.workername,\n        formatDate(record.shippingdate),\n        record.customer,\n        record.deliveryto,\n        STATUS,\n        record.注文件数,\n        READY_QUANTITY\n        \n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return typeof value === 'number' ? value : \"'\" + value + \"'\";\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            [
                "77521b34571a36c0"
            ]
        ]
    },
    {
        "id": "77521b34571a36c0",
        "type": "mysql",
        "z": "13588b2cc197771c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 860,
        "y": 380,
        "wires": [
            [
                "9608c96095b20005"
            ]
        ]
    },
    {
        "id": "446d51f95133f2aa",
        "type": "change",
        "z": "13588b2cc197771c",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping WHERE workingday = 'Workingday' AND workercode = 'Workercode' AND workername = 'Workername' GROUP BY  shippingdate, customer, deliveryto, workingday, workername;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workercode",
                "fromt": "str",
                "to": "payload.storedStaffCode",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workername",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "530d31dc1debe1d3"
            ]
        ]
    },
    {
        "id": "ab28921fefd9f1f6",
        "type": "function",
        "z": "13588b2cc197771c",
        "name": "条件取得",
        "func": "\nvar storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar workingday = flow.get('workingday');\n\n\nmsg.payload.storedStaffCode = storedStaffCode;\nmsg.payload.storedStaffName = storedStaffName;\nmsg.payload.workingday = workingday;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 340,
        "wires": [
            [
                "446d51f95133f2aa"
            ]
        ]
    },
    {
        "id": "9608c96095b20005",
        "type": "websocket out",
        "z": "13588b2cc197771c",
        "name": "",
        "server": "c5c75f7ddf809773",
        "client": "",
        "x": 1060,
        "y": 220,
        "wires": []
    },
    {
        "id": "61a6fd1cd51133f8",
        "type": "http in",
        "z": "13588b2cc197771c",
        "name": "",
        "url": "/page3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "187ed484763039cc"
            ]
        ]
    },
    {
        "id": "187ed484763039cc",
        "type": "template",
        "z": "13588b2cc197771c",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\n// ラジオボタンの選択状態が変更されたときの処理\nfunction onRadioChange(radio) {\n\n    let selectedOption = radio.value;\n\n    let acceptanceInput = document.getElementById(\"acceptance\");\n    let processInput = document.getElementById(\"process\");\n    let shippingInput = document.getElementById(\"shipping\");\n\n    if (selectedOption === \"受入検収\") {\n        acceptanceInput.style.display = \"block\";\n        processInput.style.display = \"none\";\n        shippingInput.style.display = \"none\";\n    } else if (selectedOption === \"受入工程完了\") {\n        acceptanceInput.style.display = \"none\";\n        processInput.style.display = \"block\";\n        shippingInput.style.display = \"none\";\n    } else if (selectedOption === \"出荷\") {\n        acceptanceInput.style.display = \"none\";\n        processInput.style.display = \"none\";\n        shippingInput.style.display = \"block\";\n    } else {\n        acceptanceInput.style.display = \"none\";\n        processInput.style.display = \"none\";\n        shippingInput.style.display = \"none\";\n    }\n}\n\nfunction sendDataToNodeRED(dataToSend) {\n    \n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/check-csv`);\n\n    socket.onopen = function(event) {\n        socket.send(JSON.stringify(dataToSend)); \n    };\n\n    socket.onerror = function(event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        let alertMessage = ''; \n        let selectedOption = document.querySelector('input[name=\"work\"]:checked').value;\n    \n        if (selectedOption === \"受入検収\") {\n\n            let tableRows = document.querySelectorAll('#acceptance-table-body tr');\n            for (let i = 0; i < tableRows.length; i++) {\n                let tableRow = tableRows[i];\n                let orderCell = tableRow.cells[6].textContent; //発注番号\n                let checkboxCellIndex = 0; //チェックボックス\n\n                for (let j = 0; j < responseData.length; j++) {\n                    if (orderCell === responseData[j].発注番号) {\n                        let checkboxCell = tableRow.cells[checkboxCellIndex];\n                        let checkbox = checkboxCell.querySelector('input[type=\"checkbox\"]');\n                        checkbox.checked = false;\n                        tableRow.style.backgroundColor = 'red';\n                        alertMessage = '既に取り込んでいるデータがあります。';\n                        break; \n                    }\n                }\n            }\n\n        } else if (selectedOption === \"受入工程完了\") {\n\n            let tableRows = document.querySelectorAll('#process-table-body tr');\n            for (let i = 0; i < tableRows.length; i++) {\n                let tableRow = tableRows[i];\n                let serialnumberCell = tableRow.cells[5].textContent; //製造番号\n                let quantityCell = tableRow.cells[4].textContent; //完了数\n                let checkboxCellIndex = 0; //チェックボックス\n                \n                for (let j = 0; j < responseData.length; j++) {\n                    if (serialnumberCell === responseData[j].製造番号 && quantityCell === responseData[j].完了数 ) {\n                        let checkboxCell = tableRow.cells[checkboxCellIndex];\n                        let checkbox = checkboxCell.querySelector('input[type=\"checkbox\"]');\n                        checkbox.checked = false;\n                        tableRow.style.backgroundColor = 'red';\n                        alertMessage = '既に取り込んでいるデータがあります。';\n                        break;\n                    }\n                }\n            }\n\n        } else if (selectedOption === \"出荷\") {\n\n            let tableRows = document.querySelectorAll('#shipping-table-body tr');  \n            for (let i = 0; i < tableRows.length; i++) {\n                let tableRow = tableRows[i];\n                let ordernumberCell = tableRow.cells[1].textContent; //発注番号\n                let checkboxCellIndex = 0; //チェックボックス\n                \n                for (let j = 0; j < responseData.length; j++) {\n                    if (ordernumberCell === responseData[j].受注番号) {\n                        let checkboxCell = tableRow.cells[checkboxCellIndex];\n                        let checkbox = checkboxCell.querySelector('input[type=\"checkbox\"]');\n                        checkbox.checked = false;\n                        tableRow.style.backgroundColor = 'red';\n                        alertMessage = '既に取り込んでいるデータがあります。';\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (alertMessage) {\n            alert(alertMessage);\n        }\n        socket.close();\n    };\n}\n\nfunction sendDataToNodeRED2(dataToSend) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/batch-csv`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(dataToSend));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        alert(\"データを読み込みました。\");\n        socket.close();\n    };\n}\n\nfunction processData(fileContent) {\n\n    // CSV データを改行文字で分割し、行ごとの配列を作成\n    let lines = fileContent.split('\\n');\n\n    // 配列の先頭はヘッダー行なのでスキップする\n    let header = lines[0].split(',');\n    let jsonArray = [];\n\n    for (let i = 1; i < lines.length; i++) {\n        let row = lines[i].split(',');\n\n        if (row.length === 1 && row[0].trim() === '') {\n            continue;\n        }\n\n        if (row.length !== header.length) {\n            continue;\n        }\n\n        let rowData = {};\n\n        for (let j = 0; j < header.length; j++) {\n            rowData[header[j]] = row[j].trim();\n        }\n\n        jsonArray.push(rowData);\n    }\n\n    // jsonArray は CSV データを JSON オブジェクトの配列に変換したもの\n    return jsonArray;\n}\n\n//ﾌｧｲﾙを読込ﾃｰﾌﾞﾙに表示させる\nfunction displayResults(jsonData) {\n\n    let selectedOption = document.querySelector('input[name=\"work\"]:checked').value;\n\n    if (selectedOption === \"受入検収\") {\n\n        let tbody = document.getElementById('acceptance-table-body');\n        tbody.innerHTML = '';\n\n        for (let i = 0; i < jsonData.length; i++) {\n\n            let row = jsonData[i];\n            row.製造番号 = row.製造番号.replace(/\"|=/g, '');\n            row.発注番号 = row.発注番号.replace(/\"|=/g, '');\n            row.品番 = row.品番.replace(/\"|=/g, '');\n\n            let tr = document.createElement('tr');\n\n            let checkboxCell = document.createElement('td');\n            let checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.style.width = \"20px\";\n            checkbox.style.height = \"20px\"; \n            checkbox.checked = true; // 初期状態でチェック済みにする\n            checkboxCell.appendChild(checkbox);\n            tr.appendChild(checkboxCell);\n\n            let acceptancedateCell = document.createElement('td');\n            let datetimeString = row['検収日'];\n            let datetime = new Date(datetimeString);\n            let dateString = datetime.toLocaleDateString('ja-JP');\n            acceptancedateCell.textContent = dateString;\n            acceptancedateCell.classList.add('fs-6');\n            tr.appendChild(acceptancedateCell);\n\n            let manufacturinglocationCell = document.createElement('td');\n            manufacturinglocationCell.textContent = row['発注先'];\n            manufacturinglocationCell.classList.add('fs-6');\n            tr.appendChild(manufacturinglocationCell);\n\n            let productCell = document.createElement('td');\n            productCell.textContent = row['品番'];\n            productCell.classList.add('fs-6');\n            tr.appendChild(productCell);\n\n            let quantityCell = document.createElement('td');\n            quantityCell.textContent = row['検収数'];\n            quantityCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(quantityCell);\n\n            let instructionCell = document.createElement('td');\n            instructionCell.textContent = row['製造番号'];\n            instructionCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(instructionCell);\n\n            let orderCell = document.createElement('td');\n            orderCell.textContent = row['発注番号'];\n            orderCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(orderCell);\n\n            let customerCell = document.createElement('td');\n            customerCell.textContent = row['客先名'];\n            customerCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(customerCell);\n            customerCell.style.display = 'none';\n\n            tbody.appendChild(tr);\n        }\n\n    } else if (selectedOption === \"受入工程完了\") {\n\n        let tbody = document.getElementById('process-table-body');\n        tbody.innerHTML = '';\n\n        for (let i = 0; i < jsonData.length; i++) {\n\n            let row = jsonData[i];\n            row.製造番号 = row.製造番号.replace(/\"|=/g, '');\n            row.品番 = row.品番.replace(/\"|=/g, '');\n\n            let tr = document.createElement('tr');\n\n            let checkboxCell = document.createElement('td');\n            let checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.style.width = \"20px\";\n            checkbox.style.height = \"20px\";\n            checkbox.checked = true; // 初期状態でチェック済みにする\n            checkboxCell.appendChild(checkbox);\n            tr.appendChild(checkboxCell);\n\n            let acceptancedateCell = document.createElement('td');\n            let datetimeString = row['完了日'];\n            let datetime = new Date(datetimeString);\n            let dateString = datetime.toLocaleDateString('ja-JP');\n            acceptancedateCell.textContent = dateString;\n            acceptancedateCell.classList.add('fs-6');\n            tr.appendChild(acceptancedateCell);\n\n            let manufacturinglocationCell = document.createElement('td');\n            manufacturinglocationCell.textContent = row['前工程加工先'];\n            manufacturinglocationCell.classList.add('fs-6');\n            tr.appendChild(manufacturinglocationCell);\n\n            let productCell = document.createElement('td');\n            productCell.textContent = row['品番'];\n            productCell.classList.add('fs-6');\n            tr.appendChild(productCell);\n\n            let quantityCell = document.createElement('td');\n            quantityCell.textContent = row['完了数'];\n            quantityCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(quantityCell);\n\n            let instructionCell = document.createElement('td');\n            instructionCell.textContent = row['製造番号'];\n            instructionCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(instructionCell);\n\n            let customerCell = document.createElement('td');\n            customerCell.textContent = row['客先名'];\n            customerCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(customerCell);\n            customerCell.style.display = 'none';\n\n            tbody.appendChild(tr);\n        }\n\n    } else if (selectedOption === \"出荷\") {\n\n        let tbody = document.getElementById('shipping-table-body');\n        tbody.innerHTML = '';\n\n        for (let i = 0; i < jsonData.length; i++) {\n\n            let row = jsonData[i];\n\n            let tr = document.createElement('tr');\n\n            let checkboxCell = document.createElement('td');\n            let checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.style.width = \"20px\";\n            checkbox.style.height = \"20px\";\n            checkbox.checked = true; // 初期状態でチェック済みにする\n            checkboxCell.appendChild(checkbox);\n            tr.appendChild(checkboxCell);\n\n            let orderNumberCell = document.createElement('td');\n            orderNumberCell.textContent = row['受注番号'];\n            orderNumberCell.classList.add('fs-6');\n            tr.appendChild(orderNumberCell);\n            orderNumberCell.style.display = 'none';\n\n            let customerDeliveryCell = document.createElement('td');\n            let customerDeliverydatetimeString = row['客先納期'];\n            let customerDeliverydatetime = new Date(customerDeliverydatetimeString);\n            let customerDeliverydateString = customerDeliverydatetime.toLocaleDateString('ja-JP');\n            customerDeliveryCell.textContent = customerDeliverydateString;\n            customerDeliveryCell.classList.add('fs-6');\n            tr.appendChild(customerDeliveryCell);\n\n            let acceptancedateCell = document.createElement('td');\n            let datetimeString = row['出荷日'];\n            let datetime = new Date(datetimeString);\n            let dateString = datetime.toLocaleDateString('ja-JP');\n            acceptancedateCell.textContent = dateString;\n            acceptancedateCell.classList.add('fs-6');\n            tr.appendChild(acceptancedateCell);\n\n            let customerCell = document.createElement('td');\n            customerCell.textContent = row['客先名'];\n            customerCell.classList.add('fs-6');\n            tr.appendChild(customerCell);\n\n            let shipDateCell = document.createElement('td');\n            shipDateCell.textContent = row['納入先'];\n            shipDateCell.classList.add('fs-6');\n            tr.appendChild(shipDateCell);\n\n            let customerOrderNumberCell = document.createElement('td');\n            customerOrderNumberCell.textContent = row['オーダー番号'];\n            customerOrderNumberCell.classList.add('fs-6');\n            tr.appendChild(customerOrderNumberCell);\n\n            let productCell = document.createElement('td');\n            productCell.textContent = row['品番'];\n            productCell.classList.add('fs-6');\n            tr.appendChild(productCell);\n\n            let quantityCell = document.createElement('td');\n            quantityCell.textContent = row['受注数'];\n            quantityCell.classList.add('fs-6', 'text-end');\n            tr.appendChild(quantityCell);\n\n            let remarksCell = document.createElement('td');\n            remarksCell.textContent = row['備考'];\n            remarksCell.classList.add('fs-6');\n            tr.appendChild(remarksCell);\n\n            let orderdateCell = document.createElement('td');\n            orderdateCell.textContent = row['受注日'];\n            orderdateCell.classList.add('fs-6');\n            tr.appendChild(orderdateCell);\n            orderdateCell.style.display = 'none';\n\n            let deliveryPlace1Cell = document.createElement('td');\n            deliveryPlace1Cell.textContent = row['引渡場所①'];\n            deliveryPlace1Cell.classList.add('fs-6');\n            tr.appendChild(deliveryPlace1Cell);\n            deliveryPlace1Cell.style.display = 'none';\n\n            let deliveryPlace2Cell = document.createElement('td');\n            deliveryPlace2Cell.textContent = row['引渡場所②'];\n            deliveryPlace2Cell.classList.add('fs-6');\n            tr.appendChild(deliveryPlace2Cell);\n            deliveryPlace2Cell.style.display = 'none';\n\n            let groupCell = document.createElement('td');\n            groupCell.textContent = row['ｸﾞﾙｰﾌﾟ'];\n            groupCell.classList.add('fs-6');\n            tr.appendChild(groupCell);\n            groupCell.style.display = 'none';\n\n            let directDeliveryDestinationCell = document.createElement('td');\n            directDeliveryDestinationCell.textContent = row['直送先'];\n            directDeliveryDestinationCell.classList.add('fs-6');\n            tr.appendChild(directDeliveryDestinationCell);\n            directDeliveryDestinationCell.style.display = 'none';\n\n            tbody.appendChild(tr);\n        }\n    }\n}\n\nfunction clearForm() {\n\n    let form = document.getElementById('myForm');\n\n    // ラジオボタンの選択をリセットする\n    let radioChoices = document.querySelectorAll('input[type=\"radio\"]');\n    radioChoices.forEach(function (radio) {\n        radio.checked = false;\n    });\n\n    // ファイル選択欄を初期化\n    let fileInput = form.querySelector('#inportdata');\n    fileInput.value = '';\n\n    let acceptancetbody = document.getElementById('acceptance-table-body');\n    acceptancetbody.innerHTML = '';\n\n    let processtbody = document.getElementById('process-table-body');\n    processtbody.innerHTML = '';\n\n    let shippingtbody = document.getElementById('shipping-table-body');\n    shippingtbody.innerHTML = '';\n\n}\n\n\n//ﾌｧｲﾙを選択した時\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let fileInput = document.getElementById('inportdata');\n    fileInput.addEventListener('change', function (event) {\n\n\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked');\n        \n        if (!selectedRadio) {\n            alert(\"取込内容が選択されていません。取込内容を選択してください。\");\n            this.value = '';\n            return; // ラジオボタンが選択されていない場合、処理を中断\n        }\n    \n        let file = event.target.files[0];\n        if (file) {\n            let reader = new FileReader();\n\n            // ファイルが読み込まれたときの処理\n            reader.onload = function (e) {\n                let fileContent = e.target.result;\n\n                // ファイルの内容が空かどうかを判定\n                if (!fileContent.trim() || fileContent.trim().split('\\n').length === 1) {\n                    alert(\"ファイルのデータが空です。処理を中止します。\");\n                    fileInput.value = '';\n                    return;\n                }\n                \n                let jsonData = processData(fileContent);\n\n                let dataToSend = {\n                    radioSelection: selectedRadio.value,\n                    file: jsonData\n                };\n\n                displayResults(jsonData);\n                sendDataToNodeRED(dataToSend);\n            };\n            reader.readAsText(file, 'Shift-JIS');\n        }\n    });\n\n    //取込ﾎﾞﾀﾝを押した処理\n    document.querySelector('form').addEventListener('submit', function (event) {\n        \n\n        let fileInput = document.getElementById('inportdata');\n        if (!fileInput.files.length) {\n            alert(\"ファイルが選択されていません。ファイルを選択してください。\");\n            event.preventDefault(); // フォームの送信を中止\n            return;\n        }\n\n\n\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n\n        let tableId;\n        if (selectedRadio === '受入検収') {\n            tableId = 'acceptance-table';\n        } else if (selectedRadio === '受入工程完了') {\n            tableId = 'process-table';\n        } else if (selectedRadio === '出荷') {\n            tableId = 'shipping-table';\n        }\n\n        \n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n\n        let storedStaffCode = sessionStorage.getItem('staffCode');\n        let storedStaffName = sessionStorage.getItem('staffName');\n\n        let checkedRowsData = getCheckedRowsData(tableId);\n\n        if (checkedRowsData.length === 0) {\n            alert(\"新たに取り組むデータはありません。\");\n            return\n        } else {\n            //checkedRowsData.forEach(function (checkedRow) {\n            //});\n            let dataToSend = {\n                workingday: workingday,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                radioSelection: selectedRadio,\n                file: checkedRowsData\n            };\n            sendDataToNodeRED2(dataToSend);\n\n            event.preventDefault();\n        \n            document.querySelector('form').reset();\n            let acceptancetbody = document.getElementById('acceptance-table-body');\n            acceptancetbody.innerHTML = '';\n\n            let processtbody = document.getElementById('process-table-body');\n            processtbody.innerHTML = '';\n\n            let shippingtbody = document.getElementById('shipping-table-body');\n            shippingtbody.innerHTML = '';\n        }    \n    }); \n});\n\nfunction getCheckedRowsData(tableId) {\n\n    let checkedRowsData = [];\n    if (tableId === 'acceptance-table'){\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n            let checkbox = row.querySelector('input[type=\"checkbox\"]');\n            if (checkbox && checkbox.checked) {\n                let rowData = {};\n                // 各セルのデータを取得して rowData に追加\n                rowData.検収日 = row.cells[1].textContent;\n                rowData.品番 = row.cells[3].textContent;\n                rowData.検収数 = row.cells[4].textContent;\n                rowData.製造番号 = row.cells[5].textContent;\n                rowData.発注番号 = row.cells[6].textContent;\n                rowData.客先名 = row.cells[7].textContent;\n                \n                checkedRowsData.push(rowData);\n            }\n        });\n\n    } else if (tableId ==='process-table'){\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n            let checkbox = row.querySelector('input[type=\"checkbox\"]');\n            if (checkbox && checkbox.checked) {\n                let rowData = {};\n                // 各セルのデータを取得して rowData に追加\n                rowData.完了日 = row.cells[1].textContent;\n                rowData.品番 = row.cells[3].textContent;\n                rowData.完了数 = row.cells[4].textContent;\n                rowData.製造番号 = row.cells[5].textContent;\n                rowData.客先名 = row.cells[6].textContent;\n\n                checkedRowsData.push(rowData);\n            }\n        });\n\n    } else if (tableId === 'shipping-table') {\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n            let checkbox = row.querySelector('input[type=\"checkbox\"]');\n            if (checkbox && checkbox.checked) {\n                let rowData = {};\n                // 各セルのデータを取得して rowData に追加\n                rowData.受注番号 = row.cells[1].textContent;\n                rowData.客先納期 = row.cells[2].textContent;\n                rowData.出荷日 = row.cells[3].textContent;\n                rowData.客先名 = row.cells[4].textContent;\n                rowData.納入先 = row.cells[5].textContent;\n                rowData.オーダー番号 = row.cells[6].textContent;\n                rowData.品番 = row.cells[7].textContent;\n                rowData.受注数 = row.cells[8].textContent;\n                rowData.備考 = row.cells[9].textContent;\n                rowData.受注日 = row.cells[10].textContent;\n                rowData.引渡場所1 = row.cells[11].textContent;\n                rowData.引渡場所2 = row.cells[12].textContent;\n                rowData.ｸﾞﾙｰﾌﾟ = row.cells[13].textContent;\n                rowData.直送先 = row.cells[14].textContent;\n\n                checkedRowsData.push(rowData);\n            }\n        });\n    \n    }\n    return checkedRowsData;\n}\n\n\n",
        "output": "str",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "8ee24cd445ff9f30"
            ]
        ]
    },
    {
        "id": "531e635586dcb09a",
        "type": "template",
        "z": "13588b2cc197771c",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">受入・出荷<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">受入・出荷データ取込作業</h1>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\" enctype=\"multipart/form-data\" id=\"myForm\">\n        <div class=\"info\">\n          <fieldset class=\"border p-2 mt-3\">\n            <legend>取込内容を選択してください。</legend>\n            <div class=\"btn-group\" data-toggle=\"buttons\">\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice1\" name=\"work\" value=\"受入検収\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">受入（検収）</span>\n                </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice2\" name=\"work\" value=\"受入工程完了\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">受入（工程完了）</span>\n                </label>  \n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice3\" name=\"work\" value=\"出荷\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">出荷</span>\n              </label>\n            </div>\n          </fieldset>\n          <div class=\"col-12 mt-3\">\n            <input type=\"file\" class=\"form-control form-control-lg\" id=\"inportdata\" name=\"csv\" accept=\".csv\">\n          </div>\n          <div class=\"col-12\">\n          <div class=\"col-12 mt-3\">\n            <input type=\"submit\" value=\"取込\" class=\"btn btn-primary btn-lg\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n        </div>          \n      </form> \n\n      <div class=\"col-12 mt-3\" id=\"acceptance\" style=\"display: none;\">\n          <div class=\"table-container\">\n            <table id=\"acceptance-table\" class=\"table table-hover my-4\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th scope=\"col\" class=\"fs-6\">選択</th>\n                  <th scope=\"col\" class=\"fs-6\">受入日</th>\n                  <th scope=\"col\" class=\"fs-6\">製造場所</th>\n                  <th scope=\"col\" class=\"fs-6\">品番</th>\n                  <th scope=\"col\" class=\"fs-6\">数量</th>\n                  <th scope=\"col\" class=\"fs-6\">製造番号</th>\n                  <th scope=\"col\" class=\"fs-6\">発注番号</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">客先名</th>\n                </tr> \n              </thead>\n              <tbody id=\"acceptance-table-body\"></tbody>\n            </table>\n          </div>        \n        </div>\n\n        <div class=\"col-12 mt-3\" id=\"process\" style=\"display: none;\">\n          <div class=\"table-container\">\n            <table id=\"process-table\" class=\"table table-hover my-4\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th scope=\"col\" class=\"fs-6\">選択</th>\n                  <th scope=\"col\" class=\"fs-6\">受入日</th>\n                  <th scope=\"col\" class=\"fs-6\">製造場所</th>\n                  <th scope=\"col\" class=\"fs-6\">品番</th>\n                  <th scope=\"col\" class=\"fs-6\">数量</th>\n                  <th scope=\"col\" class=\"fs-6\">製造番号</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">客先名</th>\n                </tr> \n              </thead>\n              <tbody id=\"process-table-body\"></tbody>\n            </table>\n          </div>        \n        </div>\n\n        <div class=\"col-12 mt-3\" id=\"shipping\" style=\"display: none;\"> \n          <div class=\"table-container\">\n            <table id=\"shipping-table\" class=\"table table-hover my-4\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th scope=\"col\" class=\"fs-6\">選択</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">受注番号</th>\n                  <th scope=\"col\" class=\"fs-6\">客先納期</th>\n                  <th scope=\"col\" class=\"fs-6\">出荷日</th>\n                  <th scope=\"col\" class=\"fs-6\">客先名</th>\n                  <th scope=\"col\" class=\"fs-6\">納入先</th>\n                  <th scope=\"col\" class=\"fs-6\">注文番号</th>\n                  <th scope=\"col\" class=\"fs-6\">品番</th>\n                  <th scope=\"col\" class=\"fs-6\">受注数</th>\n                  <th scope=\"col\" class=\"fs-6\">備考</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">受注日</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">引渡場所1</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">引渡場所2</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">グループ</th>\n                  <th scope=\"col\" class=\"fs-6\" style=\"display: none;\">直送先</th>   \n                </tr> \n              </thead>\n              <tbody id=\"shipping-table-body\"></tbody>\n            </table>\n          </div>\n        </div>      \n    </div>  \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 530,
        "y": 60,
        "wires": [
            [
                "bb6ab7a663f05dd6"
            ]
        ]
    },
    {
        "id": "bb6ab7a663f05dd6",
        "type": "http response",
        "z": "13588b2cc197771c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "8ee24cd445ff9f30",
        "type": "template",
        "z": "13588b2cc197771c",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n}\n\n.table-container thead {\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 410,
        "y": 60,
        "wires": [
            [
                "531e635586dcb09a"
            ]
        ]
    },
    {
        "id": "be737a6f8c2a97d4",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "936d8b1a33de44a3",
        "client": "",
        "x": 1170,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5905cb3961c91498",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shipping",
        "func": "var workingDate = msg.payload.textFields.workingDate;\nvar koguchi = msg.payload.textFields.koguchi;\nvar deliveryTo = msg.payload.textFields.deliveryTo;\nvar shippingDate = msg.payload.textFields.shippingDate;\nvar storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar palletQuantity = msg.payload.textFields.palletQuantity;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar customer = msg.payload.textFields.customer;\nvar remarks = msg.payload.textFields.remarks;\n\n\n// データを変数に保存\nflow.set('workingDate', workingDate);\nflow.set('koguchi', koguchi);\nflow.set('deliveryTo', deliveryTo);\nflow.set('shippingDate', shippingDate);\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('palletQuantity', palletQuantity);\nflow.set('checkedTime', checkedTime);\nflow.set('customer', customer);\nflow.set('remarks', remarks);\n\n\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record.column13 = record.column13.replace(/\\//g, '-');\n    record.column6 = (record.column6 !== null && record.column6 !== undefined) ? record.column6.toString() : '';\n    record.column7 = (record.column7 !== null && record.column7 !== undefined) ? record.column7.toString() : '';\n});\n\n\nvar updateQueries = [];\n\nrecords.forEach(function (record, index) {\n    var updateQuery;\n\n    updateQuery = \"UPDATE shipping SET boxed = '\" + record.column6 + \"', packing = '\" + record.column7 + \"', confirmed = '\" + record.column8 + \"', checkcompleted = '\" + record.checkCompleted + \"', stockcheck = '\" + record.stockcheck + \"', remarks2 = '\" + record.column16 + \"' WHERE cipsnumber = '\" + record.column14 + \"'\";\n\n    updateQueries.push(updateQuery);\n});\n\n\nmsg.payload = updateQueries;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1200,
        "wires": [
            [
                "a3ced3713e7db06c"
            ]
        ]
    },
    {
        "id": "6f295b86b2bfd397",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 1160,
        "wires": [
            [
                "5905cb3961c91498"
            ]
        ]
    },
    {
        "id": "26e8431327b64eac",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "936d8b1a33de44a3",
        "client": "",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "6f295b86b2bfd397"
            ]
        ]
    },
    {
        "id": "a3ced3713e7db06c",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "d45ecc64fc425fce"
            ],
            [
                "f4de0c4ef30e0d5d"
            ]
        ]
    },
    {
        "id": "d45ecc64fc425fce",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1140,
        "wires": [
            [
                "22d38f4c9404771c"
            ]
        ]
    },
    {
        "id": "22d38f4c9404771c",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1140,
        "wires": [
            [
                "39886e905773619f"
            ]
        ]
    },
    {
        "id": "39886e905773619f",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1140,
        "wires": [
            [
                "d9103a8b838ed2b1"
            ]
        ]
    },
    {
        "id": "d9103a8b838ed2b1",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1150,
        "y": 1140,
        "wires": [
            [
                "f4de0c4ef30e0d5d"
            ]
        ]
    },
    {
        "id": "f4de0c4ef30e0d5d",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "var workingday = flow.get('workingDate');\nvar koguchi = flow.get('koguchi');\nvar deliveryto = flow.get('deliveryTo');\nvar shippingDate = flow.get('shippingDate').replace(/\\//g, '-');\nvar storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar palletQuantity = flow.get('palletQuantity');\nvar checkedTime = flow.get('checkedTime');\nvar customer = flow.get('customer');\nvar remarks = flow.get('remarks');\n\nmsg.workingday = workingday;\nmsg.koguchi = koguchi;\nmsg.deliveryto = deliveryto;\nmsg.shippingDate = shippingDate;\nmsg.storedStaffName = storedStaffName;\nmsg.storedStaffCode = storedStaffCode;\nmsg.palletQuantity = palletQuantity;\nmsg.checkedTime = checkedTime;\nmsg.customer = customer;\nmsg.remarks = remarks;\n\nmsg.koguchi = (koguchi !== '' && koguchi !== undefined) ? koguchi.toString() : null;\nmsg.palletQuantity = (palletQuantity !== '' && palletQuantity !== undefined) ? palletQuantity.toString() : null;\nmsg.remarks = (remarks !== null && remarks !== undefined) ? remarks.toString() : '';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1200,
        "wires": [
            [
                "90ea787098c1494c"
            ]
        ]
    },
    {
        "id": "90ea787098c1494c",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "UPDATE shippingheader",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shippingheader SET remarks = 'Remarks', pallet = Pallet, koguchi = Koguchi WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND customer = 'Customer' AND shippingdate = 'Shippingdate';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Pallet",
                "fromt": "str",
                "to": "palletQuantity",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Remarks",
                "fromt": "str",
                "to": "remarks",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Koguchi",
                "fromt": "str",
                "to": "koguchi",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "ce55d9ff6be545a3"
            ]
        ]
    },
    {
        "id": "ce55d9ff6be545a3",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1200,
        "wires": [
            [
                "be737a6f8c2a97d4"
            ]
        ]
    },
    {
        "id": "ee82dc40af3c78da",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "150c927449181e59",
        "client": "",
        "x": 170,
        "y": 1480,
        "wires": [
            [
                "e4f5e3b67dc4e407"
            ]
        ]
    },
    {
        "id": "e4f5e3b67dc4e407",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "7f146b771f247533"
            ]
        ]
    },
    {
        "id": "f729dbbfacc261ba",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "150c927449181e59",
        "client": "",
        "x": 1200,
        "y": 1480,
        "wires": []
    },
    {
        "id": "7f146b771f247533",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "条件分岐",
        "property": "payload.textFields.selectedButton",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1480,
        "wires": [
            [
                "65925108ef13e5a3"
            ],
            [
                "40e2c9782017c1ca"
            ]
        ]
    },
    {
        "id": "65925108ef13e5a3",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "条件分岐",
        "property": "payload.checkedRow[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "part",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "4207c602153c6b5f",
                "53fc150f1eabb1f1"
            ],
            [
                "3ae7fca842daa27f"
            ]
        ]
    },
    {
        "id": "df1461782998b0bf",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "DELETE FROM shippingheader",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM shippingheader  WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.textFields.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.textFields.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.textFields.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.textFields.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "d029cb0429ed9a5a"
            ]
        ]
    },
    {
        "id": "4207c602153c6b5f",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "データクリーニング",
        "func": "\nmsg.payload.textFields.shippingDate = msg.payload.textFields.shippingDate.replace(/\\//g, '-');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1260,
        "wires": [
            [
                "df1461782998b0bf"
            ]
        ]
    },
    {
        "id": "53fc150f1eabb1f1",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build delete shipping",
        "func": "\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record.column13 = record.column13.replace(/\\//g, '-');\n    record.column6 = (record.column6 !== null && record.column6 !== undefined) ? record.column5.toString() : '';\n    record.column7 = (record.column7 !== null && record.column7 !== undefined) ? record.column6.toString() : '';\n});\n\n\nvar deleteQueries = [];\n\nmsg.payload.tableData.forEach(function (record, index) {\n\n    var deleteQuery = \"DELETE FROM shipping WHERE cipsnumber = '\" + record.column14 + \"'\";\n    deleteQueries.push(deleteQuery);\n});\n\nmsg.payload = deleteQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1300,
        "wires": [
            [
                "551ac6cc7d3e13f9"
            ]
        ]
    },
    {
        "id": "620f1fd04c9f4e9a",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "d029cb0429ed9a5a"
            ]
        ]
    },
    {
        "id": "551ac6cc7d3e13f9",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1300,
        "wires": [
            [
                "620f1fd04c9f4e9a"
            ]
        ]
    },
    {
        "id": "d029cb0429ed9a5a",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1280,
        "wires": [
            [
                "f729dbbfacc261ba"
            ]
        ]
    },
    {
        "id": "8ce607cf6d638486",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "6240c1b809241441"
            ]
        ]
    },
    {
        "id": "6240c1b809241441",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1380,
        "wires": [
            [
                "05d5747075d3f475"
            ]
        ]
    },
    {
        "id": "05d5747075d3f475",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n    var orderQuantity = record.注文件数 == null ? 0 : record.注文件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"', orderquantity = '\" + orderQuantity + \"'  WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1420,
        "wires": [
            [
                "73761969cf26b09f"
            ]
        ]
    },
    {
        "id": "73761969cf26b09f",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "f23c4fcc73be1445"
            ]
        ]
    },
    {
        "id": "f23c4fcc73be1445",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "2f8fd38025a7f310"
            ]
        ]
    },
    {
        "id": "2f8fd38025a7f310",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1420,
        "wires": [
            [
                "f729dbbfacc261ba"
            ]
        ]
    },
    {
        "id": "3ae7fca842daa27f",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build delete shipping",
        "func": "\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record.column13 = record.column13.replace(/\\//g, '-');\n    record.column6 = (record.column6 !== null && record.column6 !== undefined) ? record.column5.toString() : '';\n    record.column7 = (record.column7 !== null && record.column7 !== undefined) ? record.column6.toString() : '';\n});\n\n\nvar deleteQueries = [];\n\nmsg.payload.tableData.forEach(function (record, index) {\n\n    var deleteQuery = \"DELETE FROM shipping WHERE cipsnumber = '\" + record.column14 + \"'\";\n    deleteQueries.push(deleteQuery);\n});\n\nmsg.payload = deleteQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1340,
        "wires": [
            [
                "33a649fae93c321c"
            ]
        ]
    },
    {
        "id": "33a649fae93c321c",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1340,
        "wires": [
            [
                "687a2ad90d5e8129"
            ]
        ]
    },
    {
        "id": "687a2ad90d5e8129",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1340,
        "wires": [
            [
                "1fb6bda9ccf13da5"
            ]
        ]
    },
    {
        "id": "1fb6bda9ccf13da5",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1340,
        "wires": [
            [
                "e5f935309f2f2c89"
            ]
        ]
    },
    {
        "id": "5b53818ae163dcd1",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "条件分岐",
        "property": "payload.checkedRow[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "part",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 1860,
        "wires": [
            [
                "2d97b60d22e2490a"
            ],
            [
                "d5c496f0f7e6ea51"
            ]
        ]
    },
    {
        "id": "40e2c9782017c1ca",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "データクリーニング",
        "func": "flow.set('workingDate', undefined);\nflow.set('koguchi', null);\nflow.set('deliveryTo', null);\nflow.set('shippingDate', undefined);\nflow.set('storedStaffName', null);\nflow.set('storedStaffCode', null);\nflow.set('palletQuantity', null);\nflow.set('checkedTime', null);\nflow.set('customer', undefined);\nflow.set('remarks', null);\nflow.set('enteredDate', null);\n\nmsg.payload.textFields.shippingDate = msg.payload.textFields.shippingDate.replace(/\\//g, '-');\nmsg.payload.textFields.enteredDate = msg.payload.textFields.enteredDate.replace(/\\//g, '-');\n\n\n\nvar workingDate = msg.payload.textFields.workingDate;\nvar koguchi = msg.payload.textFields.koguchi;\nvar deliveryTo = msg.payload.textFields.deliveryTo\nvar shippingDate = msg.payload.textFields.shippingDate;\nvar storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar palletQuantity = msg.payload.textFields.palletQuantity;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar customer = msg.payload.textFields.customer;\nvar remarks = msg.payload.textFields.remarks;\nvar enteredDate = msg.payload.textFields.enteredDate;\n\n\n// データを変数に保存\nflow.set('workingDate', workingDate);\nflow.set('koguchi', koguchi);\nflow.set('deliveryTo', deliveryTo);\nflow.set('shippingDate', shippingDate);\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('palletQuantity', palletQuantity);\nflow.set('checkedTime', checkedTime);\nflow.set('customer', customer);\nflow.set('remarks', remarks);\nflow.set('enteredDate', enteredDate);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1800,
        "wires": [
            [
                "5b53818ae163dcd1"
            ]
        ]
    },
    {
        "id": "cf6af978a2623172",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1800,
        "wires": [
            [
                "727463b2cbced7ac"
            ]
        ]
    },
    {
        "id": "e5f935309f2f2c89",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 1380,
        "wires": [
            [
                "8ce607cf6d638486"
            ]
        ]
    },
    {
        "id": "384d0bdca0484ead",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippingheader",
        "func": "\nlet workingDate = flow.get('workingDate');\nlet storedStaffName = flow.get('storedStaffName');\nlet enteredDate = flow.get('enteredDate');\nlet customer = flow.get('customer');\nlet deliveryTo = flow.get('deliveryTo');\nlet pallet = flow.get('palletQuantity');\nlet status = 0;\nlet remarks = flow.get('remarks');\nlet koguchi = flow.get('koguchi');\n\nkoguchi = (koguchi !== '' && koguchi !== undefined) ? koguchi.toString() : null;\npallet = (pallet !== '' && pallet !== undefined) ? pallet.toString() : null;\nremarks = (remarks !== null && remarks !== undefined) ? remarks.toString() : '';\n\n\nvar insertQuery = \"INSERT INTO shippingheader (workingday, workername, shippingdate, customer, deliveryto, pallet, status, remarks, koguchi) VALUES ( '\" + workingDate + \"','\" + storedStaffName + \"','\" + enteredDate + \"','\" + customer + \"','\" + deliveryTo + \"',\" + pallet + \",\" + status + \",'\" + remarks + \"',\"+ koguchi +\")\";\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2000,
        "wires": [
            [
                "017e6b83251261d6"
            ]
        ]
    },
    {
        "id": "017e6b83251261d6",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2000,
        "wires": [
            [
                "fd7506d6cee25498"
            ]
        ]
    },
    {
        "id": "fd7506d6cee25498",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "b2b9d4edc7cf461f"
            ]
        ]
    },
    {
        "id": "b2b9d4edc7cf461f",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2040,
        "wires": [
            [
                "fd51bc43592984c0"
            ]
        ]
    },
    {
        "id": "6430dd50753a818c",
        "type": "http in",
        "z": "6e800843b8042cf7",
        "name": "選択行一括表示",
        "url": "/page7-3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3100,
        "wires": [
            [
                "58dbbd7ad85c41a3"
            ]
        ]
    },
    {
        "id": "a6d84597ffea226a",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>    \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                 <a class=\"nav-link white-text\" href=\"/page7\">出荷情報へ戻る</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n\n        <div class=\"col-3\">\n          <h1 class=\"mb-1\">出荷一括表示</h1>\n        </div>  \n        <div class=\"col-4\">\n          <input type=\"button\" value=\"出荷確認完了\" class=\"btn btn-primary ms-2 mb-1\" id=\"lastCompleted\" disabled>\n          <input type=\"button\" value=\"一時保存\" class=\"btn btn-primary ms-2 mb-1\" id=\"save\" disabled>\n          <input type=\"button\" value=\"出荷完了\" class=\"btn btn-success ms-2 mb-1\" id=\"complete\" disabled>\n        </div>\n        <div class=\"col-2\">   \n          <label for=\"group-filter\"  class=\"col col-form-label fs-8\">引渡し場所1絞り込み:</label>\n          <select id=\"group-filter\" name=\"group-filter\" class=\"form-select form-select-sm col-form-label align-middle ms-2 mb-1\" aria-label=\"Location\">\n            <option selected>全て</option> \n            {{#deliverygroup}}\n            <option>{{.}}</option>\n            {{/deliverygroup}}\n          </select>\n        </div>  \n\n      </div>\n\n      <div class=\"table-container\">\n        \n          <table id=\"mytable\" class=\"table table-hover table-sm mt-4\">\n            <thead class=\"table-light\">\n              <tr>\n\n                <th scope=\"col\" class=\"fs-6\" style = \"display: none;\">発行日</th>\n                <th scope=\"col\" class=\"fixed-left1 fs-6\">出荷日</th>\n                <th scope=\"col\" class=\"fixed-left2 fs-6\">客先</th>\n                <th scope=\"col\" class=\"fixed-left3 fs-6\">納入先</th>\n                <th scope=\"col\" class=\"fixed-left4 fs-6\">進捗状況</th>\n                <th scope=\"col\" class=\"fixed-left5 fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">注文番号</th>\n                <th scope=\"col\" class=\"fs-6\">出荷確認</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>              \n                <th scope=\"col\" class=\"fs-6\">荷姿</th>\n                <th scope=\"col\" class=\"fs-6\">(入数)</th>\n                <th scope=\"col\" class=\"fs-6\">(梱包数)</th>\n                <th scope=\"col\" class=\"fs-6\">(確定出荷数量)</th>\n                <th scope=\"col\" class=\"fs-6\">現場名/直送先</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所1</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所2</th>\n                <th scope=\"col\" class=\"fs-6\">客先納期</th>\n                <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">受注番号</th>\n                <th scope=\"col\" class=\"fs-6\">備考</th>\n                <th scope=\"col\" class=\"fs-6\">備考2</th>\n                <th scope=\"col\" class=\"fs-6\">グループ</th>\n                <th scope=\"col\" class=\"fs-6\">詳細内容</th>\n\n              </tr> \n            </thead>  \n            <tbody id=\"table-body\"></tbody>\n          </table>\n        \n      </div>  \n\n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 910,
        "y": 3100,
        "wires": [
            [
                "e107fdd06d37898a"
            ]
        ]
    },
    {
        "id": "e107fdd06d37898a",
        "type": "http response",
        "z": "6e800843b8042cf7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 3100,
        "wires": []
    },
    {
        "id": "a566f9d879449aee",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    width: 100%;\n    overflow: auto;\n    height: 800px;\n    position: relative;\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#mytable th.fixed-left1, \n#mytable tbody td:nth-child(2)\n {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n\n#mytable th.fixed-left2, \n#mytable tbody td:nth-child(3)\n {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable th.fixed-left3, \n#mytable tbody td:nth-child(4)\n {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable th.fixed-left4, \n#mytable tbody td:nth-child(5)\n {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable th.fixed-left5, \n#mytable tbody td:nth-child(6)\n {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable tbody td:nth-child(13),\n#mytable tbody td:nth-child(14),\n#mytable tbody td:nth-child(15),\n#mytable tbody td:nth-child(16),\n#mytable tbody td:nth-child(18),\n#mytable tbody td:nth-child(19),\n#mytable tbody td:nth-child(21)\n {\n   white-space: nowrap;\n   position: sticky;\n\n }\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n",
        "output": "str",
        "x": 790,
        "y": 3100,
        "wires": [
            [
                "a6d84597ffea226a"
            ]
        ]
    },
    {
        "id": "30a8245c281c624f",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function formatDateTime(dateTimeString) {\n\n    let dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formattedDate(dateTimeString) {\n\n    let databaseDate = new Date(dateTimeString.toLocaleString());\n    let year = databaseDate.getFullYear();\n    let month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n    let day = databaseDate.getDate().toString().padStart(2, '0');\n    let formattedDate = `${year}/${month}/${day}`;\n\n    return formattedDate;\n}\n\nfunction getQueryParam(parameterName) {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    return urlParams.get(parameterName);\n}\n\nfunction sendDataToNodeRED(checkedRowsData) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Selected-shipping-information`);\n\n    socket.onopen = function (event) {\n        \n        socket.send(JSON.stringify(checkedRowsData));\n\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        let flatData = [].concat(...responseData);\n        displayDataInTable(flatData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction displayDataInTable(data) {\n    const selectedRadio = getQueryParam('selectedRadio');\n    let tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        \n        let cell1 = row.insertCell(0);//発行日workingday\n        let cell2 = row.insertCell(1);//出荷日shippingdate\n        let cell3 = row.insertCell(2);//客先customer\n        let cell4 = row.insertCell(3);//納入先deliveryto\n        let cell5 = row.insertCell(4);//進捗状況status\n        let cell6 = row.insertCell(5);//品番productnumber\n        let cell7 = row.insertCell(6);//注文番号ordernumber\n        let cell8 = row.insertCell(7);//出荷確認ﾁｪｯｸ\n        let cell9 = row.insertCell(8);//数量quantity\n        let cell10 = row.insertCell(9);//荷姿\n        let cell11 = row.insertCell(10);//入数boxed\n        let cell12 = row.insertCell(11);//梱包数packing\n        let cell13 = row.insertCell(12);//確定出荷数量confirmed\n        let cell14 = row.insertCell(13);//現場名directdelivery\n        let cell15 = row.insertCell(14);//引渡し場所1\n        let cell16 = row.insertCell(15);//引渡し場所2\n        let cell17 = row.insertCell(16);//客先納期\n        let cell18 = row.insertCell(17);//受注番号\n        let cell19 = row.insertCell(18);//備考\n        let cell20 = row.insertCell(19);//備考2\n        let cell21 = row.insertCell(20);//ｸﾞﾙｰﾌﾟ\n        let linkCell = row.insertCell(21);//出荷指示書に遷移\n\n        cell1.innerHTML = item.workingday;\n        cell1.style.display = \"none\";\n\n        cell2.innerHTML = formattedDate(item.shippingdate);\n\n        cell3.innerHTML = item.customer;\n\n        cell4.innerHTML = item.deliveryto;\n\n        if (item.status === '0') {\n            let text = document.createTextNode(\"未確認\");\n            cell5.appendChild(text);\n            cell5.style.backgroundColor = 'red';\n            cell5.style.color = 'white';    \n        } else if (item.status === '1') {\n            let text = document.createTextNode(\"出荷準備へ\");\n            cell5.appendChild(text);  \n            cell5.style.backgroundColor = 'red';\n            cell5.style.color = 'white';  \n        } else if (item.status === '2') {\n            let text = document.createTextNode(\"出荷準備完了\");\n            cell5.appendChild(text);\n        } else if (item.status === '3') {\n            let text = document.createTextNode(\"出荷確認済\");\n            cell5.appendChild(text);\n        } else if (item.status === '4') {\n            let text = document.createTextNode(\"分納\");\n            cell5.appendChild(text);\n            cell5.style.backgroundColor = 'lightgray';\n        } else if (item.status === '5') {\n            let text = document.createTextNode(\"出荷キャンセル\");\n            cell5.appendChild(text);\n            cell5.style.backgroundColor = 'lightgray';\n        } else if (item.status === '6') {\n            let text = document.createTextNode(\"出荷指示書に戻す\");\n            cell5.appendChild(text);\n            cell5.style.backgroundColor = 'lightgray';\n        } else if (item.status === '7') {\n            let text = document.createTextNode(\"その他\");\n            cell5.appendChild(text);\n            cell5.style.backgroundColor = 'lightgray';\n        }\n\n        cell6.innerHTML = item.productnumber;\n\n        cell7.innerHTML = item.ordernumber;\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\"; \n        cell8.appendChild(checkbox);\n\n        if (item.checkcompleted === 1) {\n            checkbox.checked = true;\n        } else {\n            checkbox.checked = false;\n        }\n\n        if (item.status === '0' || item.status === '1') {\n            checkbox.disabled = true;\n        }\n\n        checkbox.addEventListener(\"click\", function () {\n            if (this.checked) {\n                // チェックボックス2がチェックされた場合の処理\n                let tableBody = document.getElementById(\"table-body\");\n                let rows = tableBody.getElementsByTagName(\"tr\");\n\n                for (let i = 0; i < rows.length; i++) {\n                    let currentRow = rows[i];\n\n                    // クリックされた行かどうかを確認\n                    if (currentRow.contains(checkbox)) {\n                        let quantityCell = currentRow.cells[8];\n                        let confirmationCell = currentRow.cells[12];\n\n                        let quantityValue = quantityCell.textContent.trim();\n                        let confirmationValue = confirmationCell.textContent.trim();\n\n                        if (quantityValue !== confirmationValue) {\n                            alert('確定出荷数量と数量に違いがあります。');\n                            confirmationCell.style.backgroundColor = \"yellow\";\n                        } else {\n                            // 違いがない場合の処理\n                            confirmationCell.style.backgroundColor = \"\"; // 色をクリア\n                        }\n                    }\n                }\n            }\n        });\n\n        cell9.innerHTML = item.quantity;\n\n        cell10.innerHTML = '';\n\n        if (item.boxed) {\n\n            if (item.boxed.includes(',')) {\n                // カンマが含まれている場合\n                let boxedValues = item.boxed.split(',');\n                cell11.innerHTML = '';\n\n                for (let i = 0; i < boxedValues.length; i++) {\n                    let textBox = document.createElement(\"input\");\n                    textBox.type = \"number\";\n                    textBox.style.width = \"100px\";\n                    textBox.value = boxedValues[i];\n                    textBox.setAttribute(\"readonly\", \"true\");\n                    cell11.appendChild(textBox);\n                }\n            } else {\n                // カンマが含まれていない場合\n                let textBox = document.createElement(\"input\");\n                textBox.type = \"number\";\n                textBox.style.width = \"100px\";\n                textBox.value = item.boxed;\n                textBox.setAttribute(\"readonly\", \"true\");\n                cell11.appendChild(textBox);\n            }\n        }\n\n        if (item.packing) {\n            if (item.packing.includes(',')) {\n                // カンマが含まれている場合\n                let packingValues = item.packing.split(',');\n                cell12.innerHTML = '';\n\n                for (let i = 0; i < packingValues.length; i++) {\n                    let textBox = document.createElement(\"input\");\n                    textBox.type = \"number\";\n                    textBox.style.width = \"100px\";\n                    textBox.value = packingValues[i];\n                    textBox.setAttribute(\"readonly\", \"true\");cell12.appendChild(textBox);\n                }\n            } else {\n                // カンマが含まれていない場合\n                let textBox = document.createElement(\"input\");\n                textBox.type = \"number\";\n                textBox.style.width = \"100px\";\n                textBox.value = item.packing;\n                textBox.setAttribute(\"readonly\", \"true\");\n                cell12.appendChild(textBox);\n            }    \n        }\n\n        cell13.innerHTML = item.confirmed;\n\n        cell14.innerHTML = item.directdelivery;\n\n        cell15.innerHTML = item.delivery1;\n\n        cell16.innerHTML = item.delivery2;\n\n        \n        cell17.innerHTML = formattedDate(item.customerdate);\n\n        cell18.innerHTML = item.cipsnumber;\n        cell18.style.display = \"none\";\n\n        cell19.innerHTML = item.remarks;\n\n        cell20.innerHTML = item.remarks2;\n\n        cell21.innerHTML = item.groupname;\n\n        let link = document.createElement(\"a\");\n        link.textContent = \"出荷指示書へ\";\n        link.style.color = \"#007bff\";\n        link.style.cursor = \"pointer\";\n        link.style.textDecoration = \"underline\";\n\n        if (selectedRadio === '指示書') {\n\n            let encodedworkingday = encodeURIComponent(formatDateTime(item.workingday));\n            let encodedformattedDate = encodeURIComponent(formattedDate(item.shippingdate));\n            let encodedcustomer = encodeURIComponent(item.customer);\n            let encodeddeliveryto = encodeURIComponent(item.deliveryto);\n            let encodedworkername = encodeURIComponent(item.workername);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page7-1\" +\n                \"?workingday=\" + encodedworkingday +\n                \"&formattedDate=\" + encodedformattedDate +\n                \"&customer=\" + encodedcustomer +\n                \"&deliveryto=\" + encodeddeliveryto +\n                \"&workername=\" + encodedworkername;\n\n            link.href = destinationURL;\n        \n        } else if (selectedRadio === '報告書') {\n\n            let encodedworkingday = encodeURIComponent(formatDateTime(item.workingday));\n            let encodedformattedDate = encodeURIComponent(formattedDate(item.shippingdate));\n            let encodedcustomer = encodeURIComponent(item.customer);\n            let encodeddeliveryto = encodeURIComponent(item.deliveryto);\n            let encodedworkername = encodeURIComponent(item.workername);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page7-2\" +\n                \"?workingday=\" + encodedworkingday +\n                \"&formattedDate=\" + encodedformattedDate +\n                \"&customer=\" + encodedcustomer +\n                \"&deliveryto=\" + encodeddeliveryto +\n                \"&workername=\" + encodedworkername;\n            link.href = destinationURL;    \n        }\n        linkCell.appendChild(link);\n    });\n\n    // group-filter のセレクト要素を取得\n    const groupFilterElement = document.getElementById('group-filter');\n\n    // group-filter のセレクト要素の選択肢を取得\n    const options = [];\n    const tableBodyRows = document.getElementById('table-body').rows;\n\n    // テーブルから選択肢を取得\n    for (let i = 0; i < tableBodyRows.length; i++) {\n        const deliveryLocationCell = tableBodyRows[i].cells[14]; // 引渡し場所1のセルは14番目のセル\n        const deliveryLocation = deliveryLocationCell.textContent.trim(); // セルのテキストを取得し、前後の余白を削除\n        if (!options.includes(deliveryLocation)) {\n            options.push(deliveryLocation);\n        }\n    }\n\n    // group-filter の選択肢を更新\n    groupFilterElement.innerHTML = ''; // 現在の選択肢をクリア\n\n    // \"全て\" の選択肢を追加\n    const allOption = document.createElement('option');\n    allOption.textContent = '全て';\n    groupFilterElement.appendChild(allOption);\n\n    // テーブルから取得した選択肢を追加\n    options.forEach(function (option) {\n        const optionElement = document.createElement('option');\n        optionElement.textContent = option;\n        groupFilterElement.appendChild(optionElement);\n    });\n}\n\nfunction gatherTableData(clickButton) {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    let currentDate = new Date();\n    let formattedDate = currentDate.toISOString().split('T')[0];\n    let formattedTime = currentDate.toTimeString().split(' ')[0];\n    let datetimeValue = formattedDate + 'T' + formattedTime;\n    datetimeValue = datetimeValue.slice(0, -1);\n    let checkedTime = datetimeValue;\n\n    let dataToSubmit = {\n        tableData: [],\n        textFields: {\n            storedStaffCode: storedStaffCode,\n            storedStaffName: storedStaffName,\n            checkedTime: checkedTime,\n        }\n    };\n\n    let tableBody = document.getElementById(\"table-body\");\n    let rows = tableBody.getElementsByTagName(\"tr\");\n\n    for (let i = 0; i < rows.length; i++) {\n        let row = rows[i];\n        let rowData = {};\n        let completed = 0;\n\n        let shippingCheckbox = row.cells[7].querySelector(\"input[type='checkbox']\");\n        if (shippingCheckbox && shippingCheckbox.checked) {\n            completed = 1; // 出荷確認がチェックされている場合、completedに1を代入\n        }\n\n        // 各セルを処理\n        let cells = row.getElementsByTagName(\"td\");\n        for (let j = 0; j < cells.length; j++) {\n            let cell = cells[j];\n            let cellData = \"\";\n\n            let inputElements = cell.querySelectorAll(\"input[type='number']\");\n            if (inputElements.length > 0) {\n                // テキストボックスが存在する場合、各テキストボックスの値を取得\n                let values = [];\n                for (let k = 0; k < inputElements.length; k++) {\n                    values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                }\n                cellData = values;\n            } else {\n                cellData = cell.textContent.trim();\n            }\n\n            let columnName = document.getElementById(\"mytable\").rows[0].cells[j].textContent.trim();\n\n            rowData[columnName] = cellData;\n            }\n            // 1つの行のデータを配列に追加\n            rowData['出荷確認'] = completed;\n            dataToSubmit.tableData.push(rowData);\n    }    \n    return dataToSubmit;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const checkedRowsData = getQueryParam('checkedRowsData');\n    const selectedRadio = getQueryParam('selectedRadio');\n    let lastCompletedButton = document.getElementById(\"lastCompleted\");\n    let completeButton = document.getElementById(\"complete\");\n    let saveButton = document.getElementById(\"save\");\n\n    if (selectedRadio === \"指示書\") {    \n        lastCompletedButton.disabled = false;\n        saveButton.disabled = false;\n        completeButton.disabled = true;\n        \n    } else {    \n        lastCompletedButton.disabled = true;\n        saveButton.disabled = true;\n        completeButton.disabled = false;\n        \n    }\n\n    sendDataToNodeRED(checkedRowsData);\n\n    lastCompletedButton.addEventListener(\"click\", function () {\n\n        let clickButton = 'lastCompleted';\n        const finalConfirmation = window.confirm(\"出荷報告書を生成してよろしいでしょうか。\");\n\n        if (finalConfirmation) {\n\n            let tableBody = document.getElementById(\"table-body\");\n            let rows = tableBody.getElementsByTagName(\"tr\");\n\n            if (rows.length === 0) {\n                // テーブルのデータがない場合の処理\n                return; // 処理を中止\n            }\n\n            let count = 0;\n            for (let i = 0; i < rows.length; i++) {\n                let quantityCell = rows[i].cells[8];\n                let confirmationCell = rows[i].cells[12];\n\n                let quantityValue = quantityCell.textContent.trim();\n                let confirmationValue = confirmationCell.textContent.trim();\n\n                if (confirmationValue === ''){\n                    alert('出荷準備が終わっていない品番があります。処理を中止します。');\n                    return;\n                }\n\n                if (quantityValue !== confirmationValue) {\n                    count++;\n                    confirmationCell.style.backgroundColor = \"yellow\";\n                } else {\n                    // 違いがない場合の処理\n                    confirmationCell.style.backgroundColor = \"\"; // 色をクリア\n                }\n            }\n\n            if (count > 0) {\n                const confirmation = window.confirm(\"確定出荷数量と数量に違いがある品番があります。出荷報告書を生成してよろしいでしょうか。\");\n                if (confirmation) {\n\n                    let dataToSubmit = gatherTableData(clickButton);\n                    const hostname = window.location.hostname;\n                    let socket = new WebSocket(`wss://${hostname}/Selected-shipping-report`);\n                    socket.onopen = function (event) {\n                       socket.send(JSON.stringify(dataToSubmit));\n                    };\n                    socket.onmessage = function (event) {\n                        alert('出荷報告書を生成しました。');\n                        socket.close();\n\n                        setTimeout(function () {\n                            let redirectURL = '/page7';\n                            window.location.href = redirectURL;\n                        }, 0);\n                    };\n               \n                } else {\n                    return;\n                }\n            } else {\n\n                let dataToSubmit = gatherTableData(clickButton);\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/Selected-shipping-report`);\n                socket.onopen = function (event) {\n                    socket.send(JSON.stringify(dataToSubmit));\n                };\n                socket.onmessage = function (event) {\n                    alert('出荷報告書を生成しました。');\n                    socket.close();\n\n                    setTimeout(function () {\n                        let redirectURL = '/page7';\n                        window.location.href = redirectURL;\n                    }, 0);\n                };                 \n            }            \n        } else {\n            return;\n        }  \n    }); \n\n    saveButton.addEventListener(\"click\", function () { \n\n        let clickButton = 'save';\n        let dataToSubmit = gatherTableData(clickButton);\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/Selected-shipping-savesto`);\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(dataToSubmit));\n        };\n        socket.onmessage = function (event) {\n            alert('一時保存しました。');\n            socket.close();\n        };     \n  \n    });\n\n    document.getElementById('group-filter').addEventListener('change', function () {\n        let selectedGroup = this.value; // 選択された値\n\n        // テーブルの行を取得\n        let rows = document.getElementById('table-body').querySelectorAll('tr');\n\n        // 各行に対して処理を行う\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let groupCell = row.cells[14].textContent; // 引渡し場所1のセルのテキスト内容\n\n            // 引渡し場所1が選択された値と一致する場合は表示、一致しない場合は非表示にする\n            if (selectedGroup === '全て' || groupCell === selectedGroup) {\n                row.style.display = 'table-row';\n            } else {\n                row.style.display = 'none';\n            }\n        }\n    });\n\n    completeButton.addEventListener(\"click\", function () {\n\n        let clickButton = 'lastCompleted';\n        const confirmation = window.confirm(\"出荷を完了させます。よろしいでしょうか。\");\n        if (confirmation) {\n\n            let tableBody = document.getElementById(\"table-body\");\n            let rows = tableBody.getElementsByTagName(\"tr\");\n\n            let count = 0;\n            for (let i = 0; i < rows.length; i++) {\n\n                let statusCell = rows[i].cells[4];\n                let statusValue = statusCell.textContent.trim();\n                if (statusValue === '出荷不可') {\n                    count++;\n                }\n\n            }\n\n            if (count > 0) {\n\n                alert(\"未処理があります。処理を完了させてください。\")\n                return;\n\n            } else {\n\n                let dataToSubmit = gatherTableData(clickButton);\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/Selected-shipping-report-log`);\n\n                socket.onopen = function (event) {\n                    socket.send(JSON.stringify(dataToSubmit));\n                };\n                socket.onmessage = function (event) {\n                    alert('出荷を完了させました。');\n                    socket.close();\n\n                    setTimeout(function () {\n                        let redirectURL = '/page7';\n                        window.location.href = redirectURL;\n                    }, 0);\n                };  \n            }\n        \n        };\n\n\n    });\n});\n\n\n\n\n",
        "output": "str",
        "x": 660,
        "y": 3100,
        "wires": [
            [
                "a566f9d879449aee"
            ]
        ]
    },
    {
        "id": "a07fd7d0c9171d8c",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "5048a864e437d8b5",
        "client": "",
        "x": 220,
        "y": 3160,
        "wires": [
            [
                "0b64d6b8255972a5"
            ]
        ]
    },
    {
        "id": "0b64d6b8255972a5",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 3160,
        "wires": [
            [
                "d1969480eb481069"
            ]
        ]
    },
    {
        "id": "d1969480eb481069",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build parsedData",
        "func": "// Functionノードのコード\nvar inputString = msg.payload;\nvar parsedData;\n\ntry {\n    parsedData = JSON.parse(inputString);\n} catch (error) {\n    node.error(\"Error parsing JSON: \" + error.message);\n    return null; // エラーが発生した場合はnullを返すか、適切なエラーハンドリングを行ってください\n}\n\nmsg.payload = parsedData;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3160,
        "wires": [
            [
                "fe57f2de66c5a84b"
            ]
        ]
    },
    {
        "id": "fe57f2de66c5a84b",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build select shipping",
        "func": "var selectQueries = [];\n\nmsg.payload.forEach(function (record) {\n    var selectQuery;\n\n    selectQuery = \"SELECT * FROM shipping WHERE workingday ='\" + record.workingDay + \"' AND shippingdate = '\" + record.shippingDate + \"' AND customer = '\" + record.customer + \"' AND deliveryto = '\" + record.deliveryTo + \"' ORDER BY productnumber\";\n\n    selectQueries.push(selectQuery);\n});\n\n\nmsg.payload = selectQueries;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3160,
        "wires": [
            [
                "29b2d3f0b1dbec93"
            ]
        ]
    },
    {
        "id": "29b2d3f0b1dbec93",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3200,
        "wires": [
            [
                "ca1d5c47dd703b66"
            ]
        ]
    },
    {
        "id": "ca1d5c47dd703b66",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3200,
        "wires": [
            [
                "ab6bd018e931e7c2"
            ]
        ]
    },
    {
        "id": "ab6bd018e931e7c2",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3200,
        "wires": [
            [
                "b676bf82d0734a49"
            ]
        ]
    },
    {
        "id": "b676bf82d0734a49",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 3200,
        "wires": [
            [
                "8b04e8a886367241"
            ]
        ]
    },
    {
        "id": "8b04e8a886367241",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "5048a864e437d8b5",
        "client": "",
        "x": 1360,
        "y": 3200,
        "wires": []
    },
    {
        "id": "266de4951451797d",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "05e7e838d51ba269",
        "client": "",
        "x": 200,
        "y": 3260,
        "wires": [
            [
                "d0c83ce2fe74fbf0"
            ]
        ]
    },
    {
        "id": "d0c83ce2fe74fbf0",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 3260,
        "wires": [
            [
                "5419895b3b31c3f0"
            ]
        ]
    },
    {
        "id": "5419895b3b31c3f0",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shipping",
        "func": "\nvar storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar tableData = msg.payload.tableData;\n\n// データを変数に保存\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('checkedTime', checkedTime);\nflow.set('tableData', tableData);\n\n\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record['出荷日'] = record['出荷日'].replace(/\\//g, '-');\n    record['(入数)'] = (record['(入数)'] !== null && record['(入数)'] !== undefined) ? record['(入数)'].toString() : '';\n    record['(梱包数)'] = (record['(梱包数)'] !== null && record['(梱包数)'] !== undefined) ? record['(梱包数)'].toString() : '';\n});\n\n\nvar updateQueries = [];\n\nrecords.forEach(function (record, index) {\n\n    if (record['進捗状況'] === '出荷準備完了'){\n\n        var updateQuery = \"UPDATE shipping SET status = '3', boxed = '\" + record['(入数)'] + \"', packing = '\" + record['(梱包数)'] + \"', confirmed = '\" + record['(確定出荷数量)'] + \"' WHERE cipsnumber = '\" + record[\"受注番号\"] + \"'\";\n        \n    }else{\n\n        var updateQuery = \"UPDATE shipping SET boxed = '\" + record['(入数)'] + \"', packing = '\" + record['(梱包数)'] + \"', confirmed = '\" + record['(確定出荷数量)'] + \"' WHERE cipsnumber = '\" + record[\"受注番号\"] + \"'\";\n        \n    }\n\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 3260,
        "wires": [
            [
                "e711180c47a82bf9"
            ]
        ]
    },
    {
        "id": "e711180c47a82bf9",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "9e48d45d9a28a206"
            ]
        ]
    },
    {
        "id": "9e48d45d9a28a206",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "43a37a55e6a17cfd"
            ]
        ]
    },
    {
        "id": "43a37a55e6a17cfd",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3300,
        "wires": [
            [
                "97fa7054bc5f654e"
            ]
        ]
    },
    {
        "id": "0ccc099a81a254d8",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "\nmsg.storedStaffName = flow.get('storedStaffName');\nmsg.storedStaffCode = flow.get('storedStaffCode');\nmsg.tableData = flow.get('tableData');\nmsg.checkedTime = flow.get('checkedTime');\n\n\n\n\nfunction formatDateTime(dateTimeString) {\n\n    let dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\n\nvar records = msg.tableData; \nrecords.forEach(function (record) {\n    record['発行日'] = formatDateTime(record['発行日']);\n    record['出荷日'] = record['出荷日'].replace(/\\//g, '-');\n    record['(入数)'] = (record['(入数)'] !== null && record['(入数)'] !== undefined) ? record['(入数)'].toString() : '';\n    record['(梱包数)'] = (record['(梱包数)'] !== null && record['(梱包数)'] !== undefined) ? record['(梱包数)'].toString() : '';\n});\n\n\nvar updateQueries = [];\n\nrecords.forEach(function (record) {\n\n    var updateQuery = \"UPDATE shippingheader SET checkername = '\" + msg.storedStaffName + \"', checkedtime = '\" + msg.checkedTime + \"', status = '1' WHERE workingday = '\" + record[\"発行日\"] + \"' AND deliveryto = '\" + record[\"納入先\"] + \"' AND customer = '\" + record[\"客先\"] + \"' AND shippingdate = '\" + record[\"出荷日\"] + \"'\";\n    updateQueries.push(updateQuery);\n    \n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3340,
        "wires": [
            [
                "4d257167e4ea8fd0"
            ]
        ]
    },
    {
        "id": "4d257167e4ea8fd0",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3340,
        "wires": [
            [
                "c9826f63c11bec2a"
            ]
        ]
    },
    {
        "id": "c9826f63c11bec2a",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3340,
        "wires": [
            [
                "e275e0fd4b946d5a"
            ]
        ]
    },
    {
        "id": "22d4f7e60360676d",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "05e7e838d51ba269",
        "client": "",
        "x": 1230,
        "y": 3420,
        "wires": []
    },
    {
        "id": "772cd8656b7f7b8d",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 780,
        "wires": [
            [
                "83068fde13b2b7d0"
            ]
        ]
    },
    {
        "id": "4c8d66214c146815",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "772cd8656b7f7b8d"
            ]
        ]
    },
    {
        "id": "3206981c2a44f5d7",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 3 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3380,
        "wires": [
            [
                "25d60eaaf1898674"
            ]
        ]
    },
    {
        "id": "25d60eaaf1898674",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3380,
        "wires": [
            [
                "c3c42dcb40291676"
            ]
        ]
    },
    {
        "id": "c3c42dcb40291676",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"' WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3420,
        "wires": [
            [
                "e15423b307a4f0da"
            ]
        ]
    },
    {
        "id": "e15423b307a4f0da",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3420,
        "wires": [
            [
                "5f68d0f3f58b011c"
            ]
        ]
    },
    {
        "id": "5f68d0f3f58b011c",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3420,
        "wires": [
            [
                "e66907ddc67634a9"
            ]
        ]
    },
    {
        "id": "e66907ddc67634a9",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3420,
        "wires": [
            [
                "22d4f7e60360676d"
            ]
        ]
    },
    {
        "id": "e275e0fd4b946d5a",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3340,
        "wires": [
            [
                "43617b16242e2949"
            ]
        ]
    },
    {
        "id": "97fa7054bc5f654e",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 330,
        "y": 3340,
        "wires": [
            [
                "0ccc099a81a254d8"
            ]
        ]
    },
    {
        "id": "43617b16242e2949",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 3380,
        "wires": [
            [
                "3206981c2a44f5d7"
            ]
        ]
    },
    {
        "id": "2c209a1565bb8053",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "d08160f822a8c3b0",
        "client": "",
        "x": 210,
        "y": 3480,
        "wires": [
            [
                "3eae4e3d40e34e2f"
            ]
        ]
    },
    {
        "id": "3eae4e3d40e34e2f",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 3480,
        "wires": [
            [
                "4a37f2738ecf3a98"
            ]
        ]
    },
    {
        "id": "4a37f2738ecf3a98",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shipping",
        "func": "\nvar storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar tableData = msg.payload.tableData;\n\n// データを変数に保存\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('checkedTime', checkedTime);\nflow.set('tableData', tableData);\n\n\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record['出荷日'] = record['出荷日'].replace(/\\//g, '-');\n    record['(入数)'] = (record['(入数)'] !== null && record['(入数)'] !== undefined) ? record['(入数)'].toString() : '';\n    record['(梱包数)'] = (record['(梱包数)'] !== null && record['(梱包数)'] !== undefined) ? record['(梱包数)'].toString() : '';\n});\n\n\nvar updateQueries = [];\n\nrecords.forEach(function (record) {\n\n    var updateQuery = \"UPDATE shipping SET boxed = '\" + record['(入数)'] + \"', packing = '\" + record['(梱包数)'] + \"', confirmed = '\" + record['(確定出荷数量)'] + \"', checkcompleted = \" + record['出荷確認']+ \" WHERE cipsnumber = '\" + record[\"受注番号\"] + \"'\";\n        \n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 3480,
        "wires": [
            [
                "6d21708a40866b2e"
            ]
        ]
    },
    {
        "id": "6d21708a40866b2e",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3520,
        "wires": [
            [
                "34baf853575e3dcc"
            ]
        ]
    },
    {
        "id": "34baf853575e3dcc",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3520,
        "wires": [
            [
                "c1fcbe0e981f3d71"
            ]
        ]
    },
    {
        "id": "c1fcbe0e981f3d71",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3520,
        "wires": [
            [
                "03167ed51e9a97f7"
            ]
        ]
    },
    {
        "id": "03167ed51e9a97f7",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "d08160f822a8c3b0",
        "client": "",
        "x": 1230,
        "y": 3520,
        "wires": []
    },
    {
        "id": "58dbbd7ad85c41a3",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "引渡し場所1",
        "filename": "/home/kuwata/ktrg/引渡し場所1.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 330,
        "y": 3100,
        "wires": [
            [
                "d479cbaeca8f509c"
            ]
        ]
    },
    {
        "id": "d479cbaeca8f509c",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar deliverygroup = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    deliverygroup.push(row); \n}\n\nmsg.deliverygroup = deliverygroup;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 3100,
        "wires": [
            [
                "30a8245c281c624f"
            ]
        ]
    },
    {
        "id": "416522b098cf7dbd",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "9aae3d4c0831f2f3",
        "client": "",
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "f2281603d515636e"
            ]
        ]
    },
    {
        "id": "f2281603d515636e",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 3580,
        "wires": [
            [
                "d23ce0179de6eaf3"
            ]
        ]
    },
    {
        "id": "d23ce0179de6eaf3",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippinglog",
        "func": "var storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar tableData = msg.payload.tableData;\n\n// データを変数に保存\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('checkedTime', checkedTime);\nflow.set('tableData', tableData);\n\nfunction formatDateTime(dateTimeString) {\n\n    let dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\n   \nvar records = msg.payload.tableData;\nvar uniqueRecords = [];\n\nrecords.forEach(function (record) {\n    var customer = record['客先'];\n    var date = record['発行日'] = formatDateTime(record['発行日']);\n    var shippingDate = record['出荷日'].replace(/\\//g, '-');\n    var deliveryDestination = record['納入先'];\n\n    var obj = {\n        '客先': customer,\n        '発行日': date,\n        '出荷日': shippingDate,\n        '納入先': deliveryDestination\n    };\n\n    // 重複をチェック\n    var isDuplicate = uniqueRecords.some(function (existingRecord) {\n        return existingRecord['発行日'] === obj['発行日'] &&\n            existingRecord['出荷日'] === obj['出荷日'] &&\n            existingRecord['納入先'] === obj['納入先'];\n    });\n\n    // 重複していなければ追加\n    if (!isDuplicate) {\n        uniqueRecords.push(obj);\n    }\n});\n\nvar insertQueries = [];\n\nuniqueRecords.forEach(function(record){\n\n    var insertQuery = \"INSERT INTO shippinglog SELECT * FROM shipping WHERE workingday = '\"+record['発行日']+\"' AND deliveryto = '\"+record['納入先']+\"' AND shippingdate = '\"+record['出荷日']+\"' AND customer = '\"+record['客先']+\"'\";\n    insertQueries.push(insertQuery);\n})\n\nmsg.payload = insertQueries;\n\nflow.set('uniqueRecords', uniqueRecords);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3580,
        "wires": [
            [
                "086a8e90da17b0db"
            ]
        ]
    },
    {
        "id": "086a8e90da17b0db",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3620,
        "wires": [
            [
                "afc591e5c4cc683d"
            ]
        ]
    },
    {
        "id": "afc591e5c4cc683d",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3620,
        "wires": [
            [
                "905f4c5135ebc7f6"
            ]
        ]
    },
    {
        "id": "72740b70c5cffa22",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippingheaderlog",
        "func": "var uniqueRecords = flow.get('uniqueRecords');\n\nvar insertQueries = [];\n\nuniqueRecords.forEach(function(record){\n\n    var insertQuery = \"INSERT INTO shippingheaderlog SELECT * FROM shippingheader WHERE workingday = '\"+record['発行日']+\"' AND deliveryto = '\"+record['納入先']+\"' AND shippingdate = '\"+record['出荷日']+\"' AND customer = '\"+record['客先']+\"'\";\n    insertQueries.push(insertQuery);\n})\n\nmsg.payload = insertQueries;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 3660,
        "wires": [
            [
                "8e95a4ff4fd9e58b"
            ]
        ]
    },
    {
        "id": "eaf0273898ba0256",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3660,
        "wires": [
            [
                "72740b70c5cffa22"
            ]
        ]
    },
    {
        "id": "8e95a4ff4fd9e58b",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3660,
        "wires": [
            [
                "4aa623df2f87a97d"
            ]
        ]
    },
    {
        "id": "4aa623df2f87a97d",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3660,
        "wires": [
            [
                "86fdb325cdd24432"
            ]
        ]
    },
    {
        "id": "6d8cd3ad13672d5c",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "UPDATE shippingheaderlog",
        "func": "msg.storedStaffName = flow.get('storedStaffName');\nmsg.storedStaffCode = flow.get('storedStaffCode');\nmsg.checkedTime = flow.get('checkedTime');\n\nvar uniqueRecords = flow.get('uniqueRecords');\n\n\nvar updateQueries = [];\n\nuniqueRecords.forEach(function (record) {\n\n    var updateQuery = \"UPDATE shippingheaderlog SET completiontime = '\" + msg.checkedTime + \"', completer = '\" + msg.storedStaffName + \"', status = '2' WHERE workingday = '\" + record[\"発行日\"] + \"' AND deliveryto = '\" + record[\"納入先\"] + \"' AND customer = '\" + record[\"客先\"] + \"' AND shippingdate = '\" + record[\"出荷日\"] + \"'\";\n    updateQueries.push(updateQuery);\n    \n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "66493c22205ae59b"
            ]
        ]
    },
    {
        "id": "2348df63954b3095",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3700,
        "wires": [
            [
                "6d8cd3ad13672d5c"
            ]
        ]
    },
    {
        "id": "66493c22205ae59b",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3700,
        "wires": [
            [
                "1c63c8909710a3f4"
            ]
        ]
    },
    {
        "id": "1c63c8909710a3f4",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3700,
        "wires": [
            [
                "ea03e0ff7be9eb22"
            ]
        ]
    },
    {
        "id": "c117a2b6ccce6d61",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT FROM shipping",
        "func": "var uniqueRecords = flow.get('uniqueRecords');\n\nvar selectQueries = [];\n\nuniqueRecords.forEach(function (record) {\n\n    //確定出荷数量が空白以外のﾃﾞｰﾀを抽出するクエリ\n    var selectQuery = \"SELECT * FROM shipping WHERE workingday = '\" + record[\"発行日\"] + \"' AND deliveryto = '\" + record[\"納入先\"] + \"' AND customer = '\" + record[\"客先\"] + \"' AND shippingdate = '\" + record[\"出荷日\"] + \"' AND confirmed <> ''\";\n    selectQueries.push(selectQuery);\n\n});\n\nmsg.payload = selectQueries;\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 3740,
        "wires": [
            [
                "77fb9bcac4e47125"
            ]
        ]
    },
    {
        "id": "184095214767faaa",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3740,
        "wires": [
            [
                "c117a2b6ccce6d61"
            ]
        ]
    },
    {
        "id": "77fb9bcac4e47125",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3740,
        "wires": [
            [
                "0c6f94880e2fbd9b"
            ]
        ]
    },
    {
        "id": "0c6f94880e2fbd9b",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3740,
        "wires": [
            [
                "53ec80e796593992"
            ]
        ]
    },
    {
        "id": "6f8660a6ae76ee25",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "UPDATE stock",
        "func": "var updateQueries = [];\n\n// フラット化された配列を格納するための変数\nvar flatArray = [];\n\n// 外側の配列を処理\nmsg.payload.forEach(function (innerArray) {\n    // 内側の配列内のオブジェクトを処理\n    innerArray.forEach(function (record) {\n        // SQLクエリを生成してupdateQueriesに追加\n        var updateQuery = \"UPDATE stock SET quantity = quantity-\" + parseInt(record.confirmed) + \" WHERE cipsnumber = '\" + record.cipsnumber + \"'\";\n        updateQueries.push(updateQuery);\n    });\n    flatArray = flatArray.concat(innerArray);\n});\n\n\n\nmsg.payload = updateQueries;\n\nmsg.flatArray = flatArray;\n\nflow.set('selectedShippingData', flatArray)\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3780,
        "wires": [
            [
                "633abafdae446c4b"
            ]
        ]
    },
    {
        "id": "53ec80e796593992",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3740,
        "wires": [
            [
                "d1889935dd29a83a"
            ]
        ]
    },
    {
        "id": "633abafdae446c4b",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3780,
        "wires": [
            [
                "9fb063d477ef50a5"
            ]
        ]
    },
    {
        "id": "9fb063d477ef50a5",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3780,
        "wires": [
            [
                "e4be72e434bf9c58"
            ]
        ]
    },
    {
        "id": "f7fc650eeac4331d",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT FROM stock",
        "func": "var cipsnumbers = flow.get('selectedShippingData');\n\nvar queries = [];\n\ncipsnumbers.forEach(function (record) {\n\n    // クエリを生成し、queries 配列に追加\n    var query = \"SELECT location, category, serialnumber, id FROM stock WHERE cipsnumber = '\" + record.cipsnumber + \"';\";\n    queries.push(query);\n\n});\n\nmsg.payload = queries\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3820,
        "wires": [
            [
                "e20ae9a5e1a477c9"
            ]
        ]
    },
    {
        "id": "d1889935dd29a83a",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3780,
        "wires": [
            [
                "6f8660a6ae76ee25"
            ]
        ]
    },
    {
        "id": "700a3032a7031d10",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3820,
        "wires": [
            [
                "f7fc650eeac4331d"
            ]
        ]
    },
    {
        "id": "e20ae9a5e1a477c9",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3820,
        "wires": [
            [
                "05527dd57aa43d96"
            ]
        ]
    },
    {
        "id": "05527dd57aa43d96",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3820,
        "wires": [
            [
                "381368cd9992153c"
            ]
        ]
    },
    {
        "id": "381368cd9992153c",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3820,
        "wires": [
            [
                "797e7936802f5106"
            ]
        ]
    },
    {
        "id": "f56cd04a5a125e5b",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build Insert Issue",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\nvar selectedShippingData = flow.get('selectedShippingData');\nvar checkedTime = flow.get('checkedTime')\nvar storedStaffCode = flow.get('storedStaffCode')\nvar storedStaffName = flow.get('storedStaffName')\n\nvar insertQuery = \"INSERT INTO Issue (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername, goto, shipdate, ordernumber, id, cipsnumber) VALUES \";\nvar valueStrings = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    for (var j = 0; j < msg.payload[i].length; j++) {\n\n        var serialnumber = msg.payload[i][j] && msg.payload[i][j].serialnumber != null ? msg.payload[i][j].serialnumber : 0;\n\n        var values = [\n            checkedTime,\n            msg.payload[i][j].location,\n            msg.payload[i][j].category,\n            selectedShippingData[i].customer,\n            selectedShippingData[i].productnumber,\n            selectedShippingData[i].confirmed,\n            serialnumber,\n            storedStaffCode,\n            storedStaffName,\n            '出荷 / CIPS発注番号:' + selectedShippingData[i].cipsnumber,\n            formatDate(selectedShippingData[i].shippingdate),\n            selectedShippingData[i].ordernumber,\n            msg.payload[i][j].id,\n            selectedShippingData[i].cipsnumber\n        ];\n\n        var valueString = \"(\" + values.map(function (value) {\n            return typeof value === 'number' ? value : \"'\" + value + \"'\";\n        }).join(\", \") + \")\";\n\n        valueStrings.push(valueString);\n    }\n}\n\ninsertQuery += valueStrings.join(\", \") + \";\";\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3860,
        "wires": [
            [
                "1f9615959288d2db"
            ]
        ]
    },
    {
        "id": "797e7936802f5106",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3860,
        "wires": [
            [
                "f56cd04a5a125e5b"
            ]
        ]
    },
    {
        "id": "41e95731e2c1d040",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "DELETE FROM shipping",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\nvar selectedShippingData = flow.get('selectedShippingData');\nvar checkedTime = flow.get('checkedTime')\nvar storedStaffCode = flow.get('storedStaffCode')\nvar storedStaffName = flow.get('storedStaffName')\n\nvar deleteQueries = [];\n\nselectedShippingData.forEach(function (record) {\n\n    //確定出荷数量が空白以外のﾃﾞｰﾀを抽出するクエリ\n    var deleteQuery = \"DELETE FROM shipping WHERE workingday = '\" + formatDateTime(record.workingday) + \"' AND deliveryto = '\" + record.deliveryto + \"' AND customer = '\" + record.customer + \"' AND shippingdate = '\" + formatDate(record.shippingdate) + \"'\";\n    deleteQueries.push(deleteQuery);\n\n});\n\nmsg.payload = deleteQueries;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 3900,
        "wires": [
            [
                "ae2f0b929607a305"
            ]
        ]
    },
    {
        "id": "ae2f0b929607a305",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3900,
        "wires": [
            [
                "6dd705f474b3632a"
            ]
        ]
    },
    {
        "id": "6dd705f474b3632a",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3900,
        "wires": [
            [
                "eb3a4379f1c87205"
            ]
        ]
    },
    {
        "id": "d04564a66d042f1e",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "DELETE FROM shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\nvar selectedShippingData = flow.get('selectedShippingData');\nvar checkedTime = flow.get('checkedTime')\nvar storedStaffCode = flow.get('storedStaffCode')\nvar storedStaffName = flow.get('storedStaffName')\n\nvar deleteQueries = [];\n\nselectedShippingData.forEach(function (record) {\n\n    //確定出荷数量が空白以外のﾃﾞｰﾀを抽出するクエリ\n    var deleteQuery = \"DELETE FROM shippingheader WHERE workingday = '\" + formatDateTime(record.workingday) + \"' AND deliveryto = '\" + record.deliveryto + \"' AND customer = '\" + record.customer + \"' AND shippingdate = '\" + formatDate(record.shippingdate) + \"'\";\n    deleteQueries.push(deleteQuery);\n\n});\n\nmsg.payload = deleteQueries;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 3940,
        "wires": [
            [
                "bc0285c8dfda36f3"
            ]
        ]
    },
    {
        "id": "bc0285c8dfda36f3",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 3940,
        "wires": [
            [
                "fbca768fadae9691"
            ]
        ]
    },
    {
        "id": "fbca768fadae9691",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 3940,
        "wires": [
            [
                "ecef45bca01640aa"
            ]
        ]
    },
    {
        "id": "11861501a214bd18",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 3940,
        "wires": [
            [
                "d04564a66d042f1e"
            ]
        ]
    },
    {
        "id": "905f4c5135ebc7f6",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3620,
        "wires": [
            [
                "eaf0273898ba0256"
            ]
        ]
    },
    {
        "id": "86fdb325cdd24432",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3660,
        "wires": [
            [
                "2348df63954b3095"
            ]
        ]
    },
    {
        "id": "ea03e0ff7be9eb22",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3700,
        "wires": [
            [
                "184095214767faaa"
            ]
        ]
    },
    {
        "id": "e4be72e434bf9c58",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3780,
        "wires": [
            [
                "700a3032a7031d10"
            ]
        ]
    },
    {
        "id": "1f9615959288d2db",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3860,
        "wires": [
            [
                "41e95731e2c1d040"
            ]
        ]
    },
    {
        "id": "eb3a4379f1c87205",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3900,
        "wires": [
            [
                "11861501a214bd18"
            ]
        ]
    },
    {
        "id": "ecef45bca01640aa",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3940,
        "wires": [
            [
                "e891c1552de07a5f"
            ]
        ]
    },
    {
        "id": "e891c1552de07a5f",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "9aae3d4c0831f2f3",
        "client": "",
        "x": 1240,
        "y": 3940,
        "wires": []
    },
    {
        "id": "d57486931ec15484",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">出荷情報<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">出荷情報</h1>\n        <div class=\"col-4\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"batch-selectedrows\">選択行一括表示</button>\n        </div>     \n      </div>\n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info my-4\">\n          <div class=\"col-12\">\n          <fieldset class=\"border p-2 mt-3\">\n            <legend>出荷内容を選択してください。</legend>\n            <div class=\"btn-group\" data-toggle=\"buttons\">\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice1\" name=\"work\" value=\"指示書\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">出荷指示書</span>\n                </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice2\" name=\"work\" value=\"報告書\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">出荷報告書</span>\n                </label>  \n\n\n            </div>\n          </fieldset>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"shipping-date\" class=\"col-6 col-form-label fs-5\">出荷日：</label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"shipping-date\" name=\"shipping-date\">\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"deliveryto\"  class=\"col-6 col-form-label fs-5\">納入先：</label>\n              <select id=\"deliveryto\" name=\"deliveryto\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicesdelivery}}\n                <option>{{.}}</option>\n                {{/choicesdelivery}}\n              </select>\n            </div>\n          </div>\n\n          <!-- hidden フィールド -->\n          <input type=\"hidden\" id=\"storedStaffCode\" name=\"storedStaffCode\" value=\"\">\n          <input type=\"hidden\" id=\"storedStaffName\" name=\"storedStaffName\" value=\"\">\n\n          <div class=\"col-12 mt-3\"> \n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\"> \n          </div>\n          \n        </div>\n        \n      </form>\n\n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6 id-column\">データ取込日</th>\n              <th scope=\"col\" class=\"fs-6\">出荷日</th>\n              <th scope=\"col\" class=\"fs-6\">客先</th>\n              <th scope=\"col\" class=\"fs-6\">納入先</th>\n              <th scope=\"col\" class=\"fs-6\">件数</th>\n              <th scope=\"col\" class=\"fs-6 id-column\">発行者</th>\n              <th scope=\"col\" class=\"fs-6\">準備完了件数</th>\n              <th scope=\"col\" class=\"fs-6\">個口数</th>\n              <th scope=\"col\" class=\"fs-6\">パレット枚数</th>\n              <th scope=\"col\" class=\"fs-6\">備考</th>\n              <th scope=\"col\" class=\"fs-6\">選択</th>\n            </tr> \n          </thead>  \n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>        \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "87e65d7fa1943e5a"
            ]
        ]
    },
    {
        "id": "87e65d7fa1943e5a",
        "type": "http response",
        "z": "6e800843b8042cf7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 60,
        "wires": []
    },
    {
        "id": "4d3eb45e43481e9d",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 1010,
        "y": 60,
        "wires": [
            [
                "d57486931ec15484"
            ]
        ]
    },
    {
        "id": "8fea0aab29a303ff",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "3055ea904b18de10"
            ]
        ]
    },
    {
        "id": "e821093cd456cb0b",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "納入先",
        "filename": "/home/kuwata/ktrg/納入先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "798bbd395722f0f3"
            ]
        ]
    },
    {
        "id": "3055ea904b18de10",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "e821093cd456cb0b"
            ]
        ]
    },
    {
        "id": "b0b910099e3b9477",
        "type": "http in",
        "z": "6e800843b8042cf7",
        "name": "",
        "url": "/page7",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "8fea0aab29a303ff"
            ]
        ]
    },
    {
        "id": "798bbd395722f0f3",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicesdelivery = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicesdelivery.push(row); \n}\n\nmsg.choicesdelivery = choicesdelivery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 60,
        "wires": [
            [
                "619ebe2943c87863"
            ]
        ]
    },
    {
        "id": "619ebe2943c87863",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction formatDateTime(dateTimeString) {\n    \n    let dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction sendDataToNodeRED(shippingDate, customer, delivery, selectedRadio) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shipping-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: selectedRadio,\n            shippingDate: shippingDate,\n            customer: customer,\n            delivery: delivery,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        let shippingDate = document.getElementById(\"shipping-date\").value;\n        let customer = document.getElementById(\"customer\").value;\n        let delivery = document.getElementById(\"deliveryto\").value;\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n\n        sendDataToNodeRED(shippingDate, customer, delivery, selectedRadio);\n    });\n});\n\nfunction clearForm() {\n\n    // 出荷日フィールドを初期化\n    document.getElementById('shipping-date').value = '';\n\n    // 客先と納入先のセレクトボックスを初期化\n    document.getElementById('customer').selectedIndex = 0;\n    document.getElementById('deliveryto').selectedIndex = 0;\n\n    let tableBody = document.getElementById(\"table-body\");\n    tableBody.innerHTML = \"\";\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n    \n    let tableBody = document.getElementById(\"table-body\");\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0); //データ取込日workingday\n        let cell2 = row.insertCell(1); //出荷日shippingdate\n        let cell3 = row.insertCell(2); //客先customer\n        let cell4 = row.insertCell(3); //納入先deliverto\n        let cell5 = row.insertCell(4); //件数\n        let cell6 = row.insertCell(5); //発行者workername\n        let cell7 = row.insertCell(6); //準備完了件数\n        let cell8 = row.insertCell(7); //個口数\n        let cell9 = row.insertCell(8); //パレット枚数\n        let cell10 = row.insertCell(9); //備考\n        let cell11 = row.insertCell(10); //選択\n\n        \n        let databaseDate = new Date(item.shippingdate.toLocaleString());\n        let year = databaseDate.getFullYear();\n        let month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        let day = databaseDate.getDate().toString().padStart(2, '0');\n        let formattedDate = `${year}/${month}/${day}`;\n\n        cell1.innerHTML = formatDateTime(item.workingday);\n        cell1.style.display = \"none\";\n        cell2.innerHTML = formattedDate;\n        cell3.innerHTML = item.customer;\n        cell4.innerHTML = item.deliveryto;\n        cell5.innerHTML = item.orderquantity;\n        cell6.innerHTML = item.workername; \n        cell6.style.display = \"none\";\n        cell7.innerHTML = item.readyquantity;\n        cell8.innerHTML = item.koguchi;\n        cell9.innerHTML = item.pallet;\n        cell10.innerHTML = item.remarks;   \n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\";\n\n        cell11.appendChild(checkbox);         \n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let table = document.getElementById(\"mytable\");\n    table.addEventListener(\"click\", function (event) {\n\n        const clickedCellIndex = event.target.cellIndex;\n        \n\n        // 11番目のセル（インデックス10）がクリックされた場合\n        if (clickedCellIndex === 10 || event.target.tagName.toLowerCase() === \"input\" || event.target.type === \"checkbox\") {\n            // クリックイベントを停止して何もしない\n            event.stopPropagation();\n            console.log(\"Checkbox clicked. Do nothing.\");\n            return;\n        }\n\n        // クリックされた行を取得\n        let clickedRow = event.target.closest(\"tr\");\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n\n        if (selectedRadio === '指示書'){\n\n            if (clickedRow) {\n                let workingday = clickedRow.cells[0].textContent.trim();\n                let formattedDate = clickedRow.cells[1].textContent.trim();\n                let customer = clickedRow.cells[2].textContent.trim();\n                let deliveryto = clickedRow.cells[3].textContent.trim();\n                //let groupname = clickedRow.cells[4].textContent.trim();\n                let workername = clickedRow.cells[5].textContent.trim();\n\n                let encodedworkingday = encodeURIComponent(workingday);\n                let encodedformattedDate = encodeURIComponent(formattedDate);\n                let encodedcustomer = encodeURIComponent(customer);\n                let encodeddeliveryto = encodeURIComponent(deliveryto);\n                //let encodedgroupname = encodeURIComponent(groupname);\n                let encodedworkername = encodeURIComponent(workername);\n\n                // エンコードされた変数を使用してURLを構築\n                let destinationURL = \"/page7-1\" +\n                    \"?workingday=\" + encodedworkingday +\n                    \"&formattedDate=\" + encodedformattedDate +\n                    \"&customer=\" + encodedcustomer +\n                    \"&deliveryto=\" + encodeddeliveryto +\n                    //\"&groupname=\" + encodedgroupname +\n                    \"&workername=\" + encodedworkername;\n\n                window.location.href = destinationURL;\n            }\n\n        } else if (selectedRadio === '報告書'){\n\n            if (clickedRow) {\n                let workingday = clickedRow.cells[0].textContent.trim();\n                let formattedDate = clickedRow.cells[1].textContent.trim();\n                let customer = clickedRow.cells[2].textContent.trim();\n                let deliveryto = clickedRow.cells[3].textContent.trim();\n                //let groupname = clickedRow.cells[4].textContent.trim();\n                let storedStaffName = sessionStorage.getItem('staffName');\n                let workername = storedStaffName\n\n                let encodedworkingday = encodeURIComponent(workingday);\n                let encodedformattedDate = encodeURIComponent(formattedDate);\n                let encodedcustomer = encodeURIComponent(customer);\n                let encodeddeliveryto = encodeURIComponent(deliveryto);\n                //let encodedgroupname = encodeURIComponent(groupname);\n                let encodedworkername = encodeURIComponent(workername);\n\n                // エンコードされた変数を使用してURLを構築\n                let destinationURL = \"/page7-2\" +\n                    \"?workingday=\" + encodedworkingday +\n                    \"&formattedDate=\" + encodedformattedDate +\n                    \"&customer=\" + encodedcustomer +\n                    \"&deliveryto=\" + encodeddeliveryto +\n                    //\"&groupname=\" + encodedgroupname +\n                    \"&workername=\" + encodedworkername;\n\n                window.location.href = destinationURL;\n            }\n        }    \n    });\n\n    let batchSelectedrowsButton = document.getElementById(\"batch-selectedrows\");\n    batchSelectedrowsButton.addEventListener(\"click\", function (event) {\n\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n        \n        let checkedRowsData = [];\n        let tableRows = document.querySelectorAll(`#mytable tr`);\n        tableRows.forEach(function (row) {\n            let checkbox = row.querySelector('input[type=\"checkbox\"]');\n            if (checkbox && checkbox.checked) {\n                let rowData = {};\n                // 各セルのデータを取得して rowData に追加\n                rowData.workingDay = row.cells[0].textContent;\n                rowData.shippingDate = row.cells[1].textContent;\n                rowData.customer = row.cells[2].textContent;\n                rowData.deliveryTo = row.cells[3].textContent;\n                rowData.koguchi = row.cells[7].textContent;\n                rowData.pallet = row.cells[8].textContent;\n                rowData.remarks = row.cells[9].textContent;\n                \n                checkedRowsData.push(rowData);\n            }\n        });\n\n        let encodedData = encodeURIComponent(JSON.stringify(checkedRowsData));\n\n        let destinationURL = \"/page7-3?checkedRowsData=\" + encodedData + \"&selectedRadio=\" + encodeURIComponent(selectedRadio);\n        \n        \n        window.location.href = destinationURL;\n    \n    });\n});\n",
        "output": "str",
        "x": 880,
        "y": 60,
        "wires": [
            [
                "4d3eb45e43481e9d"
            ]
        ]
    },
    {
        "id": "176023bc9e6d99f5",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "3aaf760a2f5e664a",
        "client": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "4a48fd6c4bdc79d8"
            ]
        ]
    },
    {
        "id": "4a48fd6c4bdc79d8",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "539bd47a931b4eb0"
            ]
        ]
    },
    {
        "id": "0226dd517da013e7",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "出荷日分岐",
        "property": "payload.shippingDate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "5cd4dcdf7ac7cf3c"
            ],
            [
                "f793f41c581d5e36"
            ]
        ]
    },
    {
        "id": "5cd4dcdf7ac7cf3c",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "e7e71da7e734bbf4"
            ],
            [
                "0b5cb114822d8a0c"
            ]
        ]
    },
    {
        "id": "f793f41c581d5e36",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "d40c6e6d3ff5ba68"
            ],
            [
                "b8ffffb167898db4"
            ]
        ]
    },
    {
        "id": "e7e71da7e734bbf4",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "7b1948d296e41635"
            ],
            [
                "1e66026e3d443028"
            ]
        ]
    },
    {
        "id": "0b5cb114822d8a0c",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "0e65b5a562ef3eb0"
            ],
            [
                "74b572d180e46f6a"
            ]
        ]
    },
    {
        "id": "d40c6e6d3ff5ba68",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "487d14ff8cbf1848"
            ],
            [
                "9993fbced28837e9"
            ]
        ]
    },
    {
        "id": "b8ffffb167898db4",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "53b7a54621f4a698"
            ],
            [
                "be86c529cbfc9c28"
            ]
        ]
    },
    {
        "id": "967bda393505e977",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "3aaf760a2f5e664a",
        "client": "",
        "x": 1320,
        "y": 320,
        "wires": []
    },
    {
        "id": "9ba7e2bc51398ce1",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "b6d98705523fd29b"
            ]
        ]
    },
    {
        "id": "b6d98705523fd29b",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "967bda393505e977"
            ]
        ]
    },
    {
        "id": "c9894e626a044c65",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>    \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n\n    <header>\n\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n\n        <div class=\"container-fluid\">\n\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page7\">出荷情報へ戻る</a>\n              </li>\n            </ul>\n          </div>\n\n        </div>\n      </nav>\n    </header>\n\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        \n        <div class=\"col-2\">\n          <h1 class=\"mb-1\">出荷指示書</h1>\n        </div>\n        \n        <div class=\"col-2\">\n          <label for=\"group-filter\"  class=\"col col-form-label fs-8\">グループ絞り込み:</label>\n          <select id=\"group-filter\" name=\"group-filter\" class=\"form-select form-select-sm col-form-label align-middle\" aria-label=\"Location\">\n            <option selected>全て</option> \n            {{#choicesgroup}}\n            <option>{{.}}</option>\n            {{/choicesgroup}}\n          </select>\n        </div>\n\n        <div class=\"col-2\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"stock-storage\" onclick=\"saveFormDataAndRedirect(this.id)\">CSV取得</button>  \n        </div>  \n\n        <div class=\"col-2 offset-md-5\">\n          <button type=\"button\" class=\"btn btn-secondary\" id=\"admin\">管理者モード</button>\n        </div>\n\n      </div>\n\n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info\">\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"working-date\" class=\"col-6 col-form-label fs-5\">発行日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"working-date\" name=\"working-date\" readonly>\n            </div>\n\n            <div class=\"col-6\">\n              <label for=\"workername\" class=\"col-6 col-form-label fs-5\">発行者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"workername\" name=\"workername\" readonly>\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"shipping-date\" class=\"col-6 col-form-label fs-5\">出荷日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"shipping-date\" name=\"shipping-date\" readonly>\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"customer\" class=\"col-6 col-form-label fs-5\">客先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"customer\" name=\"customer\" readonly>\n            </div>  \n\n            <div class=\"col-4\">\n              <label for=\"deliveryto\" class=\"col-6 col-form-label fs-5\">納入先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"deliveryto\" name=\"deliveryto\" readonly>\n            </div> \n\n          </div>\n\n          <div class=\"row\"> \n\n            <div class=\"col-4\">\n              <label for=\"koguchi\"  class=\"col-7 col-form-label fs-5\">個口数:</label>\n              <select id=\"koguchi\" name=\"koguchi\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicespallet}}\n                <option>{{.}}</option>\n                {{/choicespallet}}\n              </select>\n            </div>   \n\n            <div class=\"col-4\">\n              <label for=\"pallet\"  class=\"col-7 col-form-label fs-5\">パレット枚数:</label>\n              <select id=\"pallet\" name=\"pallet\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicespallet}}\n                <option>{{.}}</option>\n                {{/choicespallet}}\n              </select>\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"remarks\"  class=\"col-7 col-form-label fs-5\">備考:</label>\n              <select id=\"remarks\" name=\"remarks\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicesRemarks}}\n                <option>{{.}}</option>\n                {{/choicesRemarks}}\n              </select>\n            </div>\n\n          </div>\n\n          <div class=\"col-12 mt-3\">\n\n            <input type=\"button\" value=\"出荷確認完了\" class=\"btn btn-primary btn-lg\" id=\"lastCompleted\">\n            <input type=\"button\" value=\"一時保存\" class=\"btn btn-primary btn-lg\" id=\"save\">\n            <input type=\"button\" value=\"データ削除\" class=\"btn btn-danger btn-lg\" id=\"delete\" style=\"display: none;\">\n            <input type=\"button\" value=\"出荷日変更\" class=\"btn btn-danger btn-lg\" id=\"change\" style=\"display: none;\"> \n\n          </div>\n          \n        </div>\n        \n      </form>\n\n      <div class=\"table-container\">\n  \n          <table id=\"mytable\" class=\"table table-hover mt-4\">\n            <thead class=\"table-light\">\n              <tr>\n                <th scope=\"col\" class=\"fs-6\">在庫確認</th>\n                <th scope=\"col\" class=\"fs-6\">進捗状況</th>\n                <th scope=\"col\" class=\"fixed-left fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">注文番号</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>              \n                <th scope=\"col\" class=\"fs-6\">荷姿</th>\n                <th scope=\"col\" class=\"fs-6\">(入数)</th>\n                <th scope=\"col\" class=\"fs-6\">(梱包数)</th>\n                <th scope=\"col\" class=\"fs-6\">(確定出荷数量)</th>\n                <th scope=\"col\" class=\"fs-6\">出荷確認</th>\n                <th scope=\"col\" class=\"fs-6\">現場名/直送先</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所1</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所2</th>\n                <th scope=\"col\" class=\"fs-6\">客先納期</th>\n                <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">受注番号</th>\n                <th scope=\"col\" class=\"fs-6\">備考</th>\n                <th scope=\"col\" class=\"fs-6\">備考2</th>\n                <th scope=\"col\" class=\"fs-6\">グループ</th>\n                <th scope=\"col\" class=\"fs-6\">検査依頼</th>\n              </tr> \n            </thead>  \n            <tbody id=\"table-body\"></tbody>\n          </table>\n        \n      </div>  \n\n      <!-- ポップアップメニュー -->\n      <div id=\"popup-menu\" class=\"popup-menu\">\n        <ul>\n          <li><a href=\"#\" id=\"return-action\">出荷準備へに戻す</a></li>\n        </ul>\n      </div>\n\n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n\n  </body>\n</html>\n",
        "output": "str",
        "x": 1490,
        "y": 520,
        "wires": [
            [
                "7bc1b6617c04149d"
            ]
        ]
    },
    {
        "id": "916f78843462e3ac",
        "type": "http in",
        "z": "6e800843b8042cf7",
        "name": "出荷指示書",
        "url": "/page7-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "526c59c9e5fe1612"
            ]
        ]
    },
    {
        "id": "7bc1b6617c04149d",
        "type": "http response",
        "z": "6e800843b8042cf7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1610,
        "y": 520,
        "wires": []
    },
    {
        "id": "a5d68825c94a11c3",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    width: 100%;\n    overflow: auto;\n    height: 400px;\n    position: relative;\n}\n\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#mytable th.fixed-left, #mytable tbody td:nth-child(3) {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable tbody td:nth-child(15),\n#mytable tbody td:nth-child(16)\n\n {\n   white-space: nowrap;\n   position: sticky;\n\n }\n\n#mytable td:nth-child(15) {\n  display: none;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n/* CSSスタイル（ポップアップメニューを非表示に） */\n.popup-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n    z-index: 9999;\n}\n\n.popup-menu ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n.popup-menu ul li {\n    padding: 10px;\n    text-align: center;\n}\n\n.popup-menu ul li:hover {\n    background-color: #f0f0f0;\n    cursor: pointer;\n}\n",
        "output": "str",
        "x": 1370,
        "y": 520,
        "wires": [
            [
                "c9894e626a044c65"
            ]
        ]
    },
    {
        "id": "17605d50556b4156",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function formatDateTime(dateTimeString) {\n    \n    let dbDateTime = new Date(dateTimeString);\n    // yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    let workingday = document.getElementById(\"working-date\").value;\n    let shippingDate = document.getElementById(\"shipping-date\").value;\n    let customer = document.getElementById(\"customer\").value;\n    let deliveryto = document.getElementById(\"deliveryto\").value;\n    let groupName = document.getElementById('group-filter').value;\n    \n    const hostname = window.location.hostname;\n    var socket = new WebSocket(`wss://${hostname}/shipping-csvdata`);\n\n    socket.onopen = function (event) {\n        var requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer,\n            groupName: groupName\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        var text;\n        if (typeof event.data === 'string') {\n            // すでに文字列の場合\n            text = event.data;\n        } else {\n            // バイナリデータの場合\n            text = new TextDecoder('utf-8').decode(event.data);\n        }\n\n        var blob = new Blob([new Uint8Array([0xEF, 0xBB, 0xBF]), text], { type: 'text/csv; charset=UTF-8' });\n        var link = document.createElement('a');\n        var currentTime = new Date();\n        var fileName = 'data_' + currentTime.getFullYear() + (currentTime.getMonth() + 1) + currentTime.getDate() +\n            currentTime.getHours() + currentTime.getMinutes() + currentTime.getSeconds() + '.csv';\n\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n\n        socket.close();\n    };\n\n}\n\nfunction sendDataToNodeRED(workingday, deliveryto, shippingDate, customer) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shipping-infor`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: '指示書',\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n//出荷確認者と時刻とﾊﾟﾚｯﾄ枚数を抽出\nfunction sendDataToNodeRED2(workingday, deliveryto, shippingDate, customer) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shippingheader-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        \n        document.getElementById(\"pallet\").value = responseData[0].pallet;\n        document.getElementById(\"remarks\").value = responseData[0].remarks;\n        document.getElementById(\"koguchi\").value = responseData[0].koguchi;\n        \n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n    \n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);   //在庫確認\n        let cell2 = row.insertCell(1);   //進捗状況status\n        let cell3 = row.insertCell(2);   //品番productnumber\n        let cell4 = row.insertCell(3);   //注文番号ordernumber\n        let cell5 = row.insertCell(4);   //数量quantity\n        let cell6 = row.insertCell(5);   //荷姿\n        let cell7 = row.insertCell(6);   //入数\n        let cell8 = row.insertCell(7);   //梱包数\n        let cell9 = row.insertCell(8);   //確定出荷数量\n        let cell10 = row.insertCell(9);  //出荷確認\n        let cell11 = row.insertCell(10); //現場名直送先directdelivery\n        let cell12 = row.insertCell(11); //引渡し場所1delivery1\n        let cell13 = row.insertCell(12); //引渡し場所2delivery2\n        let cell14 = row.insertCell(13); //客先納期customerdate\n        let cell15 = row.insertCell(14); //受注番号cipsnumber\n        let cell16 = row.insertCell(15); //備考remarks\n        let cell17 = row.insertCell(16); //備考2remarks2\n        let cell18 = row.insertCell(17); //ｸﾞﾙｰﾌﾟ\n        let cell19 = row.insertCell(18); //検査依頼\n    \n\n        let databaseDate = new Date(item.customerdate.toLocaleString());\n        let year = databaseDate.getFullYear();\n        let month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        let day = databaseDate.getDate().toString().padStart(2, '0');\n        let formattedDate = `${year}/${month}/${day}`;\n\n\n        if (item.status === '0' || item.status === '1') {\n            let link = document.createElement(\"a\");\n            link.href = \"#\";\n            link.textContent = \"出荷準備へ\";\n            link.addEventListener(\"click\", function () {\n                let customer = document.getElementById(\"customer\").value;\n                let shippingdate = document.getElementById(\"shipping-date\").value;\n                let deliveryto = document.getElementById(\"deliveryto\").value;\n                let productNumber = item.productnumber;\n                let encodedProductNumber = encodeURIComponent(productNumber);\n                let orderNumber = item.ordernumber;\n                let quantity = item.quantity;\n                let cipsNumber = item.cipsnumber;\n                let redirectURL = `/page2?customer=${customer}&product=${encodedProductNumber}&order=${orderNumber}&shipping=${shippingdate}&deliveryto=${deliveryto}&quantity=${quantity}&cips=${cipsNumber}`;\n                window.location.href = redirectURL;\n            });\n            cell2.appendChild(link);\n        } else if (item.status === '2') {\n            let text = document.createTextNode(\"出荷準備完了\");\n            cell2.appendChild(text);\n        } else if (item.status === '3') {\n            let text = document.createTextNode(\"出荷確認完了\");\n            cell2.appendChild(text);\n        }\n\n        // セル1にチェックボックスを追加\n        let checkbox3 = document.createElement(\"input\");\n        checkbox3.type = \"checkbox\";\n        checkbox3.style.width = \"20px\";\n        checkbox3.style.height = \"20px\"; \n        \n        // セル10にチェックボックスを追加\n        let checkbox2 = document.createElement(\"input\");\n        checkbox2.type = \"checkbox\";\n        checkbox2.style.width = \"20px\"; \n        checkbox2.style.height = \"20px\"; \n\n        // セル6にチェックボックスを追加\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\"; \n\n        let addButton = document.createElement(\"button\");\n        addButton.textContent = \"＋\";\n\n        let cell7InputsArray = [];\n        let cell8InputsArray = [];\n        let cell9Array = [];\n        let initialResult = 0;\n\n        function computeCell9Value() {\n            // セル6とセル7の値を計算\n            let totalValue6 = initialResult;\n            for (let i = 0; i < cell7InputsArray.length; i++) {\n                let value6 = parseFloat(cell7InputsArray[i].value) || 0;\n                let value7 = parseFloat(cell8InputsArray[i].value) || 0;\n                totalValue6 += value6 * value7;\n            }\n            return totalValue6;\n        }\n\n        addButton.addEventListener(\"click\", function () {\n            if (checkbox.checked) {\n                // チェックボックスがチェックされている場合のみ追加ボタンが機能\n                let newCell7Input = document.createElement(\"input\");\n                newCell7Input.type = \"number\";\n                newCell7Input.style.width = \"100px\"; \n                cell7InputsArray.push(newCell7Input);\n                cell7.appendChild(newCell7Input);\n\n                let newCell8Input = document.createElement(\"input\");\n                newCell8Input.type = \"number\";\n                newCell8Input.style.width = \"100px\"; \n                cell8InputsArray.push(newCell8Input);\n                cell8.appendChild(newCell8Input);\n\n                newCell7Input.addEventListener(\"input\", function () {\n                    let newCell9Value = computeCell9Value();\n                    cell9Array.push(newCell9Value);\n                    let newCell9 = row.cells[8];\n                    newCell9.textContent = newCell9Value;\n                });\n                newCell8Input.addEventListener(\"input\", function () {\n                    let newCell9Value = computeCell9Value();\n                    cell9Array.push(newCell9Value);\n                    let newCell9 = row.cells[8];\n                    newCell9.textContent = newCell9Value;\n                });   \n            }\n\n        });\n\n        checkbox2.addEventListener(\"click\", function () {\n            if (this.checked) {\n                // チェックボックス2がチェックされた場合の処理\n                let tableBody = document.getElementById(\"table-body\");\n                let rows = tableBody.getElementsByTagName(\"tr\");\n\n                for (let i = 0; i < rows.length; i++) {\n                    let currentRow = rows[i];\n\n                    // クリックされた行かどうかを確認\n                    if (currentRow.contains(checkbox2)) {\n                        let quantityCell = currentRow.cells[4];\n                        let confirmationCell = currentRow.cells[8];\n\n                        let quantityValue = quantityCell.textContent.trim();\n                        let confirmationValue = confirmationCell.textContent.trim();\n\n                        if (quantityValue !== confirmationValue) {\n                            // 4番目と8番目のセルの値が異なる場合の処理\n                            alert('確定出荷数量と数量に違いがあります。');\n                            confirmationCell.style.backgroundColor = \"yellow\";\n                        } else {\n                            // 違いがない場合の処理\n                            confirmationCell.style.backgroundColor = \"\"; // 色をクリア\n                        }\n                    }\n                }\n            }\n        });\n\n        if(item.checkcompleted === 1){\n            checkbox2.checked = true;\n        } else {\n            checkbox2.checked = false;\n        }\n\n        if (item.stockcheck === 1) {\n            checkbox3.checked = true;\n        } else {\n            checkbox3.checked = false;\n        }\n\n        if (item.status === '2') {\n            checkbox.disabled = false;\n            checkbox2.disabled = false;\n            // チェックボックスのクリックイベントを追加\n            checkbox.addEventListener(\"click\", function () {\n                // チェックボックスがクリックされたときの処理\n                if (this.checked) {\n                    // チェックが入っている場合、セル6およびセル7を編集可能にする\n                    cell7.innerHTML = '<input type=\"number\" style=\"width: 100px;\" />';\n                    cell8.innerHTML = '<input type=\"number\" style=\"width: 100px;\" />';\n\n                    let cell7Input = cell7.querySelector(\"input\");\n                    let cell8Input = cell8.querySelector(\"input\");\n                    cell7InputsArray = [cell7Input];\n                    cell8InputsArray = [cell8Input];\n\n                    initialResult = parseFloat(cell7Input.value || 0) * parseFloat(cell8Input.value || 0);\n\n                    cell7Input.addEventListener(\"input\", function () {\n                        let newCell9Value = computeCell9Value();\n                        cell9Array = [newCell9Value];\n                        cell9.textContent = newCell9Value;\n                    });\n                    cell8Input.addEventListener(\"input\", function () {\n                        let newCell9Value = computeCell9Value();\n                        cell9Array = [newCell9Value];\n                        cell9.textContent = newCell9Value;\n                    });\n\n                    let newCell9Value = computeCell9Value();\n                    cell9Array = [newCell9Value];\n                    cell9.textContent = newCell9Value;\n\n                } else {\n                    cell7.innerHTML = '';\n                    cell8.innerHTML = '';\n                    cell9.textContent = '';\n                    initialResult = 0;\n                    cell7InputsArray = [];\n                    cell8InputsArray = [];\n                    cell9Array = [];\n                }\n            });\n        } else {\n            checkbox.disabled = true;\n            checkbox2.disabled = true;\n        }\n\n        cell6.appendChild(checkbox);\n        cell6.appendChild(addButton);\n\n        if (item.boxed) {\n\n            checkbox.checked = true;\n            if (item.boxed.includes(',')) {\n                // カンマが含まれている場合\n                let boxedValues = item.boxed.split(',');\n                cell7.innerHTML = '';\n\n                for (let i = 0; i < boxedValues.length; i++) {\n                    let numberInput = document.createElement(\"input\");\n                    numberInput.type = \"number\";\n                    numberInput.style.width = \"100px\";\n                    numberInput.value = boxedValues[i];\n                    numberInput.setAttribute(\"readonly\", \"true\");\n                    cell7.appendChild(numberInput);\n                }\n            } else {\n                // カンマが含まれていない場合\n                let numberInput = document.createElement(\"input\");\n                numberInput.type = \"number\";\n                numberInput.style.width = \"100px\";\n                numberInput.value = item.boxed;\n                numberInput.setAttribute(\"readonly\", \"true\");\n                cell7.appendChild(numberInput);\n            }\n\n            if (item.packing.includes(',')) {\n                // カンマが含まれている場合\n                let packingValues = item.packing.split(',');\n                cell8.innerHTML = '';\n\n                for (let i = 0; i < packingValues.length; i++) {\n                    let numberInput = document.createElement(\"input\");\n                    numberInput.type = \"number\";\n                    numberInput.style.width = \"100px\";\n                    numberInput.value = packingValues[i];\n                    numberInput.setAttribute(\"readonly\", \"true\");\n                    cell8.appendChild(numberInput);\n                }\n            } else {\n                // カンマが含まれていない場合\n                let numberInput = document.createElement(\"input\");\n                numberInput.type = \"number\";\n                numberInput.style.width = \"100px\";\n                numberInput.value = item.packing;\n                numberInput.setAttribute(\"readonly\", \"true\");\n                cell8.appendChild(numberInput);\n            }\n\n            cell9.innerHTML = item.confirmed;\n                    \n        }else{\n            cell7.innerHTML = '';\n            cell8.innerHTML = '';\n            cell9.innerHTML = '';\n\n        }\n        \n        cell1.appendChild(checkbox3);\n        function escapeHTML(str) {\n            return str.replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;');\n        }\n\n        cell3.innerHTML = escapeHTML(item.productnumber);\n        cell4.innerHTML = item.ordernumber;\n        cell5.innerHTML = item.quantity;\n        cell10.appendChild(checkbox2);\n        cell11.innerHTML = item.directdelivery;\n        cell12.innerHTML = item.delivery1;\n        cell13.innerHTML = item.delivery2;\n        cell14.innerHTML = formattedDate;\n        cell15.innerHTML = item.cipsnumber;\n        cell16.innerHTML = item.remarks;\n\n        let textbox = document.createElement(\"input\");\n        textbox.type = \"text\";\n        textbox.value = item.remarks2;\n        cell17.appendChild(textbox);\n\n        cell18.innerHTML = item.groupname;\n\n        if (item.inspection === 1) {\n            const button = document.createElement(\"button\");\n            button.type = \"button\";\n            button.className = \"btn btn-sm btn-danger\";\n            button.id = \"requiredQuantityButton\";    \n            button.innerHTML = \"要\";\n            \n            cell19.appendChild(button);\n\n            button.addEventListener(\"click\", function () {\n\n                let row = cell19.parentElement;\n                let productNumber = row.cells[2].textContent.trim();\n                let customer = document.getElementById(\"customer\").value.trim();\n                let shippingDate = document.getElementById(\"shipping-date\").value.trim();\n\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/inspection-infor`);\n\n                socket.onopen = function (event) {\n                    let requestData = {\n                        productNumber: productNumber,\n                        shippingDate: shippingDate,\n                        customer: customer\n                    };\n                    socket.send(JSON.stringify(requestData));\n                }\n\n                socket.onmessage = function (event) {\n                    let responseData = JSON.parse(event.data);\n                    socket.close();\n\n                    if (Array.isArray(responseData) && responseData.length === 0) {\n                        // responseDataが空の場合の処理\n                        alert(\"出荷日が変更されたので検査情報を取得できません。\");\n                    } else {\n                        let formattedContent = formatResponseData(responseData[0]);\n                        alert(`検査提出製品情報:\\n${formattedContent}`);\n                    }    \n                };\n\n                socket.onerror = function (error) {\n                    console.error('WebSocket error: ', error);\n                    socket.close();\n                };\n            });\n\n        }\n\n        // オブジェクトから必要な情報をフォーマットして返す関数\n        function formatResponseData(data) {\n            let productNumber = data.ProductNumber || \"N/A\";\n            let serialNumber = data.SerialNumber || \"N/A\"; // SerialNumberが存在しない場合のデフォルト値\n            let arrivalDay = data.ArrivalDay ? formatDate(data.ArrivalDay) : \"N/A\"; // ArrivalDayをフォーマット\n            return `品番：${productNumber}\\n加工指図書No.：${serialNumber}\\n納入日：${arrivalDay}`;\n        }\n\n        // ArrivalDayをフォーマットする関数\n        function formatDate(dateTimeString) {\n            var dbDateTime = new Date(dateTimeString);\n            // 例: yyyy-mm-dd\n            var formattedDate = dbDateTime.getFullYear() + '-' +\n                (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n                dbDateTime.getDate().toString().padStart(2, '0');\n\n            return formattedDate;\n        }\n\n    });\n\n}\n\nfunction getQueryParameter(name) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // クエリパラメータを取得\n    let workingday = getQueryParameter(\"workingday\");\n    let shippingDate = getQueryParameter(\"formattedDate\");\n    let deliveryto = getQueryParameter(\"deliveryto\");\n    let workername = getQueryParameter(\"workername\");\n    let customer = getQueryParameter(\"customer\");\n\n    // クエリパラメータが存在する場合、テーブルに表示\n    if (workingday || shippingDate || deliveryto || workername || customer) {\n        document.getElementById(\"shipping-date\").value = shippingDate;\n        document.getElementById(\"working-date\").value = workingday;\n        document.getElementById(\"deliveryto\").value = deliveryto;\n        document.getElementById(\"workername\").value = workername;\n        document.getElementById(\"customer\").value = customer;\n\n        // データベースに選択情報を送信\n        sendDataToNodeRED(workingday, deliveryto, shippingDate, customer);\n        sendDataToNodeRED2(workingday, deliveryto, shippingDate, customer);\n    }\n\n    const tableBody = document.getElementById(\"table-body\");\n    const popupMenu = document.getElementById(\"popup-menu\");\n    let selectedCell = null;\n\n    // セルをクリックしたときの処理\n    tableBody.addEventListener(\"click\", function (event) {\n        const clickedCell = event.target;\n        const columnIndex = clickedCell.cellIndex;\n\n        if (columnIndex === 1) {\n            selectedCell = clickedCell;\n            const cellText = selectedCell.textContent.trim();\n\n            if (cellText !== \"出荷準備へ\") {\n                // ポップアップメニューを表示\n                showPopupMenu(event.clientX, event.clientY);\n            }\n        }\n    });\n\n    // スクロール時の処理\n    window.addEventListener(\"scroll\", function () {\n        if (popupMenu.style.display === \"block\") {\n            // ポップアップメニューが表示されている場合、位置を再調整\n            showPopupMenu(popupMenu.offsetLeft, popupMenu.offsetTop);\n        }\n    });\n\n    // 「return-action」がクリックされたときの処理\n    document.getElementById(\"return-action\").addEventListener(\"click\", function () {\n        if (selectedCell) {\n            const cipsNumberCell = selectedCell.parentElement.cells[14];\n            const cipsNumber = cipsNumberCell.textContent.trim();\n\n            let requestData = {\n                cipsNumber: cipsNumber,\n            }\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/shipping-putitback`);\n\n            socket.onopen = function (event) {\n                socket.send(JSON.stringify(requestData));\n            };\n            socket.onerror = function (event) {\n                console.error(\"WebSocketエラー:\", event);\n            };\n            socket.onmessage = function (event) {\n                socket.close();\n            };\n            socket.onclose = function (event) {\n                console.log(\"Socket connection closed.\");\n            };\n        }\n\n        hidePopupMenu(); // ポップアップメニューを非表示\n    });\n\n    // ポップアップメニューを表示する関数\n    function showPopupMenu(x, y) {\n        // ポップアップメニューの幅と高さを取得\n        const menuWidth = popupMenu.offsetWidth;\n        const menuHeight = popupMenu.offsetHeight;\n\n        // クリックしたセルの位置にポップアップメニューを表示\n        const menuX = x - menuWidth / 2; // メニューを中央に配置\n        const menuY = y - menuHeight - 10; // クリックしたセルの上に表示 (10 ピクセルの余白を設けています)\n\n        popupMenu.style.left = menuX + \"px\";\n        popupMenu.style.top = menuY + \"px\";\n        popupMenu.style.display = \"block\";\n    }\n\n    // ポップアップメニューを非表示にする関数\n    function hidePopupMenu() {\n        popupMenu.style.display = \"none\";\n    }\n\n\n});\n\nfunction gatherTableData(clickButton) {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    let currentDate = new Date();\n    let formattedDate = currentDate.toISOString().split('T')[0];\n    let formattedTime = currentDate.toTimeString().split(' ')[0];\n    let datetimeValue = formattedDate + 'T' + formattedTime;\n    datetimeValue = datetimeValue.slice(0, -1);\n    let checkedTime = datetimeValue;\n\n    let dataToSubmit = {\n        tableData: [],\n        textFields: {\n            storedStaffCode: storedStaffCode,\n            storedStaffName: storedStaffName,\n            shippingDate: document.getElementById(\"shipping-date\").value,\n            koguchi: document.getElementById(\"koguchi\").value,\n            customer: document.getElementById(\"customer\").value,\n            workingDate: document.getElementById(\"working-date\").value,\n            workerName: document.getElementById(\"workername\").value,\n            deliveryTo: document.getElementById(\"deliveryto\").value,\n            palletQuantity: document.getElementById(\"pallet\").value,\n            remarks: document.getElementById(\"remarks\").value,\n            checkedTime: checkedTime,\n        }\n    };\n\n    let tableBody = document.getElementById(\"table-body\");\n    let rows = tableBody.getElementsByTagName(\"tr\");\n\n    if (clickButton === 'save'){\n\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let rowData = {};\n            let completed = 0;\n            let stockcheck = 0;\n\n            let checkbox1 = row.cells[0].querySelector(\"input[type='checkbox']\");\n            if (checkbox1 && checkbox1.checked) {\n                stockcheck = 1; // checkbox1がチェックされている場合、stockcheckに1を代入\n            }\n\n            let checkbox9 = row.cells[9].querySelector(\"input[type='checkbox']\");\n            if (checkbox9 && checkbox9.checked) {\n                completed = 1; // checkbox9がチェックされている場合、completedに1を代入\n            }\n\n            // 各セルを処理\n            let cells = row.getElementsByTagName(\"td\");\n            for (let j = 0; j < cells.length; j++) {\n                let cell = cells[j];\n                let cellData = \"\";\n\n                let inputElements = cell.querySelectorAll(\"input\");\n                if (inputElements.length > 0) {\n                    // input要素が存在する場合\n                    if (inputElements[0].type === 'number') {\n                        // 数値入力の場合、各テキストボックスの値を取得\n                        let values = [];\n                        for (let k = 0; k < inputElements.length; k++) {\n                            values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                        }\n                        cellData = values;\n                    } else if (inputElements[0].type === 'text') {\n                        // テキスト入力の場合、最初のテキストボックスの値を取得\n                        cellData = inputElements[0].value.trim();\n                    }\n                } else {\n                    cellData = cell.textContent.trim();\n                }\n\n                \n                rowData[\"column\" + j] = cellData;\n            }\n            // 1つの行のデータを配列に追加\n            rowData.checkCompleted = completed;\n            rowData.stockcheck = stockcheck;\n            dataToSubmit.tableData.push(rowData);\n        }\n        \n    }else{\n\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let rowData = {};\n\n            // 各セルを処理\n            let cells = row.getElementsByTagName(\"td\");\n            for (let j = 0; j < cells.length; j++) {\n                let cell = cells[j];\n                let cellData = \"\";\n\n                let inputElements = cell.querySelectorAll(\"input[type='number']\");\n                if (inputElements.length > 0) {\n                    // テキストボックスが存在する場合、各テキストボックスの値を取得\n                    let values = [];\n                    for (let k = 0; k < inputElements.length; k++) {\n                        values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                    }\n                    cellData = values;\n                } else {\n                    cellData = cell.textContent.trim();\n                }\n\n                rowData[\"column\" + j] = cellData;\n            }\n            // 1つの行のデータを配列に追加\n            dataToSubmit.tableData.push(rowData);\n        }\n    }\n\n    return dataToSubmit;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    document.getElementById(\"save\").addEventListener(\"click\", function () {\n\n        let tableBody = document.getElementById(\"table-body\");\n        let rows = tableBody.getElementsByTagName(\"tr\");\n        \n        if (rows.length === 0) {\n            // テーブルのデータがない場合の処理\n            return; // 処理を中止\n        }\n\n        let clickButton = 'save';\n        let dataToSubmit = gatherTableData(clickButton);\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/savesto`);\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(dataToSubmit));\n        };\n        socket.onmessage = function (event) {\n            alert('作業内容を保存しました。');\n            socket.close();\n        };    \n    });    \n    \n    document.getElementById(\"lastCompleted\").addEventListener(\"click\", function () {\n\n        const finalConfirmation = window.confirm(\"出荷報告書を生成してよろしいでしょうか。\");\n\n        if(finalConfirmation){\n\n            let tableBody = document.getElementById(\"table-body\");\n            let rows = tableBody.getElementsByTagName(\"tr\");\n\n            if (rows.length === 0) {\n                // テーブルのデータがない場合の処理\n                return; // 処理を中止\n            }\n\n            let count = 0;\n            for (let i = 0; i < rows.length; i++) {\n                let quantityCell = rows[i].cells[4];\n                let confirmationCell = rows[i].cells[8];\n\n                let quantityValue = quantityCell.textContent.trim();\n                let confirmationValue = confirmationCell.textContent.trim();\n\n                if (quantityValue !== confirmationValue) {\n                    // 4番目と8番目のセルの値が異なる場合の処理\n                    count++;\n                    confirmationCell.style.backgroundColor = \"yellow\";\n                } else {\n                    // 違いがない場合の処理\n                    confirmationCell.style.backgroundColor = \"\"; // 色をクリア\n                }\n            }\n\n            // パレット数量テキストの値を取得\n            let palletQuantityInput = document.getElementById(\"pallet\");\n            let palletQuantityValue = palletQuantityInput.value.trim();\n\n            let koguchiInput = document.getElementById(\"koguchi\");\n            let koguchiValue = koguchiInput.value.trim();\n\n            if (palletQuantityValue || koguchiValue) {\n                if (count > 0) {\n\n                    const confirmation = window.confirm(\"確定出荷数量と数量に違いがある品番があります。出荷報告書を生成してよろしいでしょうか。\");\n                    if (confirmation) {\n                        let clickButton = 'lastCompleted';\n                        let dataToSubmit = gatherTableData(clickButton);\n                        const hostname = window.location.hostname;\n                        let socket = new WebSocket(`wss://${hostname}/shipping-report`);\n                        socket.onopen = function (event) {\n                            socket.send(JSON.stringify(dataToSubmit));\n                        };\n                        socket.onmessage = function (event) {\n                            alert('出荷報告書を生成しました。');\n                            socket.close();\n\n                            setTimeout(function () {\n                                let redirectURL = '/page7';\n                                window.location.href = redirectURL;\n                            }, 0);\n                        };\n                    } else {\n                        return;\n                    }\n                } else {\n                    let clickButton = 'lastCompleted';\n                    let dataToSubmit = gatherTableData(clickButton);\n                    const hostname = window.location.hostname;\n                    let socket = new WebSocket(`wss://${hostname}/shipping-report`);\n                    socket.onopen = function (event) {\n                        socket.send(JSON.stringify(dataToSubmit));\n                    };\n                    socket.onmessage = function (event) {\n                        alert('出荷報告書を生成しました。');\n                        socket.close();\n\n                        setTimeout(function () {\n                            let redirectURL = '/page7';\n                            window.location.href = redirectURL;\n                        }, 0);\n                    };\n                }\n            } else {\n                alert(\"パレット数量と個口がどちらも選択されていません。処理を中止します。\");\n                return;\n            }\n\n        } else{\n            return;\n        }        \n    });\n\n    document.getElementById('group-filter').addEventListener('change', function () {\n        let selectedGroup = this.value; // 選択されたグループの値\n\n        // テーブルの行を取得\n        let rows = document.getElementById('mytable').querySelectorAll('tbody tr');\n\n        // 各行に対して処理を行う\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let groupCell = row.cells[17].textContent; // グループのセルのテキスト内容\n\n            // グループが選択された値と一致する場合は表示、一致しない場合は非表示にする\n            if (selectedGroup === '全て' || groupCell === selectedGroup) {\n                row.style.display = 'table-row';\n            } else {\n                row.style.display = 'none';\n            }\n        }\n    });\n\n    document.getElementById(\"admin\").addEventListener(\"click\", function () {\n        // パスワードの入力をアラートで求める\n        let enteredPassword = prompt(\"管理者パスワードを入力してください:\");\n\n        // ここで入力されたパスワードを取得し、必要な認証処理を行う\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = (today.getMonth() + 1).toString().padStart(2, '0');\n        let day = today.getDate().toString().padStart(2, '0');\n        let currentDate = `${year}${month}${day}`;\n\n        \n        // 例: パスワードが \"admin\" の場合にだけ認証成功とみなす\n        if (enteredPassword === currentDate) {\n\n\n            let tableBody = document.getElementById(\"table-body\");\n\n            // テーブルの各行に対して処理を行う\n            for (let i = 0; i < tableBody.rows.length; i++) {\n                // 各行に新しいセルを作成し、18番目のセルとして追加\n                let cell20 = tableBody.rows[i].insertCell(19);\n\n                // 生成したチェックリストをセル18に追加\n                let checkbox = document.createElement(\"input\");\n                checkbox.type = \"checkbox\";\n                checkbox.style.width = \"20px\";\n                checkbox.style.height = \"20px\";\n\n                cell20.appendChild(checkbox);\n\n            }\n\n            document.getElementById(\"delete\").style.display = \"inline-block\";\n            document.getElementById(\"change\").style.display = \"inline-block\";\n\n        } else if (enteredPassword === null){\n\n         return;\n\n        } else {\n            alert(\"認証失敗！正しいパスワードを入力してください。\");\n        }\n\n        \n    });\n\n    function checkedRow(selectedButton, enteredDate){\n\n        let storedStaffCode = sessionStorage.getItem('staffCode');\n        let storedStaffName = sessionStorage.getItem('staffName');\n\n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        datetimeValue = datetimeValue.slice(0, -1);\n        let checkedTime = datetimeValue;\n\n        let dataToSubmit = {\n            checkedRow: [],\n            tableData: [],\n            textFields: {\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                enteredDate: enteredDate,\n                selectedButton: selectedButton,\n                shippingDate: document.getElementById(\"shipping-date\").value,\n                customer: document.getElementById(\"customer\").value,\n                workingDate: document.getElementById(\"working-date\").value,\n                workerName: document.getElementById(\"workername\").value,\n                deliveryTo: document.getElementById(\"deliveryto\").value,\n                koguchi: document.getElementById(\"koguchi\").value,\n                palletQuantity: document.getElementById(\"pallet\").value,\n                remarks: document.getElementById(\"remarks\").value,\n                checkedTime: checkedTime,\n            }\n        };\n\n        let tableBody = document.getElementById(\"table-body\");\n        let rows = tableBody.getElementsByTagName(\"tr\");\n\n        // チェックがついている行の数\n        let checkedRowCount = 0;\n\n\n        for (let i = 0; i < tableBody.rows.length; i++) {\n\n            let cell20 = tableBody.rows[i].cells[19];\n\n\n\n            if (cell20.querySelector(\"input[type='checkbox']\").checked) {\n                checkedRowCount++;\n            }\n        }\n\n        // テーブルの行数がチェックがついている行の数と一致するか判断\n        let allRowsChecked = checkedRowCount === tableBody.rows.length;\n\n        if (allRowsChecked) {\n\n            let checkedRow = \"all\";\n\n            for (let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n                let rowData = {};\n\n                // 各セルを処理\n                let cells = row.getElementsByTagName(\"td\");\n                for (let j = 0; j < cells.length; j++) {\n                    let cell = cells[j];\n                    let cellData = \"\";\n\n                    let inputElements = cell.querySelectorAll(\"input[type='number']\");\n                    if (inputElements.length > 0) {\n                        // テキストボックスが存在する場合、各テキストボックスの値を取得\n                        let values = [];\n                        for (let k = 0; k < inputElements.length; k++) {\n                            values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                        }\n                        cellData = values;\n                    } else {\n                        cellData = cell.textContent.trim();\n                    }\n\n                    rowData[\"column\" + j] = cellData;\n                }\n                // 1つの行のデータを配列に追加\n                dataToSubmit.tableData.push(rowData);\n            }\n\n            dataToSubmit.checkedRow.push(checkedRow);    \n\n        } else {\n\n            let checkedRow = \"part\";\n\n            let selectedRows = Array.from(rows).filter(row => {\n                let checkbox = row.cells[19].querySelector(\"input[type='checkbox']\");\n\n                return (checkbox && checkbox.checked);\n            });\n\n            for (let i = 0; i < selectedRows.length; i++) {\n                let row = selectedRows[i];\n                let rowData = {};\n\n                let cells = row.getElementsByTagName(\"td\");\n                for (let j = 0; j < cells.length; j++) {\n                    let cell = cells[j];\n                    let cellData = \"\";\n\n                    let inputElements = cell.querySelectorAll(\"input\");\n                    if (inputElements.length > 0) {\n                        // input要素が存在する場合\n                        if (inputElements[0].type === 'number') {\n                            // 数値入力の場合、各テキストボックスの値を取得\n                            let values = [];\n                            for (let k = 0; k < inputElements.length; k++) {\n                                values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                            }\n                            cellData = values;\n                        } else if (inputElements[0].type === 'text') {\n                            // テキスト入力の場合、最初のテキストボックスの値を取得\n                            cellData = inputElements[0].value.trim();\n                        }\n                    } else {\n                        cellData = cell.textContent.trim();\n                    }\n\n                    rowData[\"column\" + j] = cellData;\n                }\n\n                dataToSubmit.tableData.push(rowData);\n            }\n\n            dataToSubmit.checkedRow.push(checkedRow);\n        }\n\n        return dataToSubmit;\n\n    }\n\n    function sendDataToNodeRED3(checkedRowData) {\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/shipping-admin`);\n\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(checkedRowData));\n        };\n        socket.onerror = function (event) {\n            console.error(\"WebSocketエラー:\", event);\n        };\n        socket.onmessage = function (event) {\n            alert(\"処理しました。管理者モードを解除します。\")\n            socket.close();\n\n            document.location.reload()\n        };\n        socket.onclose = function (event) {\n            console.log(\"Socket connection closed.\");\n        };\n    }\n\n    document.getElementById(\"delete\").addEventListener(\"click\", function () {\n\n        let enteredDate = \"\";\n\n        let selectedButton = \"delete\";\n        let checkedRowData = checkedRow(selectedButton, enteredDate);\n        sendDataToNodeRED3(checkedRowData);\n        \n    });\n\n    document.getElementById(\"change\").addEventListener(\"click\", function () {\n\n        let enteredDate = prompt(\"変更日を入力してください（YYYY/MM/DD）:\");\n\n        if (enteredDate === null) {\n\n        return;\n\n        }\n\n        let selectedButton = \"change\";\n        let checkedRowData = checkedRow(selectedButton, enteredDate);\n        sendDataToNodeRED3(checkedRowData);\n\n    });\n\n    \n\n    \n    \n});",
        "output": "str",
        "x": 1240,
        "y": 520,
        "wires": [
            [
                "a5d68825c94a11c3"
            ]
        ]
    },
    {
        "id": "05175519edd1bab0",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "ecc37325a6bd9f0f",
        "client": "",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "40ea42d0191867b9"
            ]
        ]
    },
    {
        "id": "40ea42d0191867b9",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "c9af97b0d33e7286"
            ]
        ]
    },
    {
        "id": "968dbbf160b19402",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from shipping WHERE ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM shipping WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer' ORDER BY groupname, productnumber ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 580,
        "wires": [
            [
                "1dc4d1b6515872db"
            ]
        ]
    },
    {
        "id": "1dc4d1b6515872db",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "74f819cf8adc4070"
            ]
        ]
    },
    {
        "id": "74f819cf8adc4070",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 620,
        "wires": [
            [
                "b4aef06ee8355c8b"
            ]
        ]
    },
    {
        "id": "b4aef06ee8355c8b",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "ecc37325a6bd9f0f",
        "client": "",
        "x": 1350,
        "y": 620,
        "wires": []
    },
    {
        "id": "f7b18a0d1acfa3b3",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "update shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = '1' WHERE status = '0' AND deliveryto = 'Deliveryto' AND workingday = 'Workingday' AND shippingdate = 'Shippingdate' AND customer = 'Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "667c61e84de7e397"
            ]
        ]
    },
    {
        "id": "667c61e84de7e397",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "6d7e47614c842624",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "19295b283a270506",
        "client": "",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "e868c5cf5bae800d"
            ]
        ]
    },
    {
        "id": "e868c5cf5bae800d",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 720,
        "wires": [
            [
                "93872d4e211f14a2"
            ]
        ]
    },
    {
        "id": "93872d4e211f14a2",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "put it back shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = '1' WHERE cipsnumber = 'Cipsnumber';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Cipsnumber",
                "fromt": "str",
                "to": "payload.cipsNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 720,
        "wires": [
            [
                "07c7042d9cb10ea4"
            ]
        ]
    },
    {
        "id": "07c7042d9cb10ea4",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "4c8d66214c146815"
            ]
        ]
    },
    {
        "id": "bd9f7dd7919ca548",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "19295b283a270506",
        "client": "",
        "x": 1210,
        "y": 840,
        "wires": []
    },
    {
        "id": "07df19b1229b452d",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "c5fb3aecbaa43f9c",
        "client": "",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "0c693196e6090e73"
            ]
        ]
    },
    {
        "id": "0c693196e6090e73",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 900,
        "wires": [
            [
                "eb8884e199992901"
            ]
        ]
    },
    {
        "id": "9e57065451ad993d",
        "type": "http in",
        "z": "6e800843b8042cf7",
        "name": "出荷報告書",
        "url": "/page7-2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2180,
        "wires": [
            [
                "b1dfec6e2c8f0170"
            ]
        ]
    },
    {
        "id": "f46e59920158e157",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>    \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                 <a class=\"nav-link white-text\" href=\"/page7\">出荷情報へ戻る</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">出荷報告書</h1>\n      </div>\n      \n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info\">\n          \n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"checked-time\" class=\"col-6 col-form-label fs-5\">出荷確認日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"checked-time\" name=\"checked-time\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"checker-name\" class=\"col-6 col-form-label fs-5\">出荷確認者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"checker-name\" name=\"checker-name\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"working-date\" class=\"col-6 col-form-label fs-5\">指示書発行日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"working-date\" name=\"working-date\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"workername\" class=\"col-6 col-form-label fs-5\">指示書発行者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"workername\" name=\"workername\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"shipping-date\" class=\"col-6 col-form-label fs-5\">出荷日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"shipping-date\" name=\"shipping-date\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"customer\" class=\"col-6 col-form-label fs-5\">客先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"customer\" name=\"customer\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"deliveryto\" class=\"col-6 col-form-label fs-5\">納入先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"deliveryto\" name=\"deliveryto\" readonly>\n            </div>\n              \n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-4\">\n              <label for=\"koguchi\" class=\"col-5 col-form-label fs-5\">個口数:</label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"koguchi\" name=\"koguchi\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"pallet\" class=\"col-7 col-form-label fs-5\">パレット枚数:</label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"pallet\" name=\"pallet\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"remarks\" class=\"col-5 col-form-label fs-5\">備考:</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"remarks\" name=\"remarks\" readonly>\n            </div>\n          </div>\n          \n        </div>\n        <div class=\"col col-sm-12 mt-3\"> \n            <input type=\"button\" value=\"出荷完了\" class=\"btn btn-success btn-lg\" id=\"complete\">\n            <input type=\"button\" value=\"検査書\" class=\"btn btn-warning btn-lg\" id=\"inspection\">  \n        </div>\n        \n      </form>\n\n      <div class=\"table-container\">\n        \n          <table id=\"mytable\" class=\"table table-hover mt-4\">\n            <thead class=\"table-light\">\n              <tr>\n\n                <th scope=\"col\" class=\"fs-6\">進捗状況</th>\n                <th scope=\"col\" class=\"fixed-left fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">注文番号</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>              \n                <th scope=\"col\" class=\"fs-6\">荷姿</th>\n                <th scope=\"col\" class=\"fs-6\">(入数)</th>\n                <th scope=\"col\" class=\"fs-6\">(梱包数)</th>\n                <th scope=\"col\" class=\"fs-6\">(確定出荷数量)</th>\n                <th scope=\"col\" class=\"fs-6\">現場名/直送先</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所1</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所2</th>\n                <th scope=\"col\" class=\"fs-6\">客先納期</th>\n                <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">受注番号</th>\n                <th scope=\"col\" class=\"fs-6\">備考</th>\n                <th scope=\"col\" class=\"fs-6\">備考2</th>\n                <th scope=\"col\" class=\"fs-6\">グループ</th>\n                <th scope=\"col\" class=\"fs-6\">検査書</th>\n\n              </tr> \n            </thead>  \n            <tbody id=\"table-body\"></tbody>\n          </table>\n        \n      </div>  \n\n      <!-- ポップアップメニュー -->\n      <div id=\"popup-menu\" class=\"popup-menu\">\n        <ul>\n          <li><a href=\"#\" id=\"cancel-action\">キャンセル</a></li>\n          <li><a href=\"#\" id=\"split-action\">分納</a></li>\n          <li><a href=\"#\" id=\"return-action\">出荷指示書に戻す</a></li>\n          <li><a href=\"#\" id=\"etc-action\">その他</a></li>\n        </ul>\n      </div>\n\n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 550,
        "y": 2180,
        "wires": [
            [
                "505abd9633f359fe"
            ]
        ]
    },
    {
        "id": "539bd47a931b4eb0",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "指示書と報告書の条件分岐",
        "func": "\nvar selectedAction = msg.payload.selectedAction;\nvar shippingDate = msg.payload.shippingDate;\nvar customer = msg.payload.customer;\nvar delivery = msg.payload.delivery;\n\nif (selectedAction === '指示書'){  \n    msg.status = 0  \n} else if (selectedAction === '報告書'){  \n    msg.status = 1\n}\n\nvar status = msg.status;\n\n// データを変数に保存\nflow.set('status', status);\nflow.set('shippingDate', shippingDate);\nflow.set('customer', customer);\nflow.set('delivery', delivery);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "0226dd517da013e7"
            ]
        ]
    },
    {
        "id": "b1dfec6e2c8f0170",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function formatDateTime(dateTimeString) {\n    \n    let dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction checkedRow() {\n\n    let tableData=[] \n    \n    let tableBody = document.getElementById(\"table-body\");\n    let rows = tableBody.getElementsByTagName(\"tr\");\n\n    // チェックがついている行の数\n    let checkedRowCount = 0;\n\n    for (let i = 0; i < tableBody.rows.length; i++) {\n\n        let checkedCell = tableBody.rows[i].cells[16];\n        if (checkedCell.querySelector(\"input[type='checkbox']\").checked) {\n            checkedRowCount++;\n        }\n    }\n\n    if (checkedRowCount === 0){\n        alert('チェックを入れてください。')\n    }\n\n    // テーブルの行数がチェックがついている行の数と一致するか判断\n    let allRowsChecked = checkedRowCount === tableBody.rows.length;\n\n    if (allRowsChecked) {\n\n        for (let i = 0; i < rows.length; i++) {\n            let row = rows[i];\n            let rowData = {};\n\n            // 各セルを処理\n            let cells = row.getElementsByTagName(\"td\");\n            for (let j = 0; j < cells.length; j++) {\n                let cell = cells[j];\n                let cellData = \"\";\n\n                let inputElements = cell.querySelectorAll(\"input[type='number']\");\n                if (inputElements.length > 0) {\n                    // テキストボックスが存在する場合、各テキストボックスの値を取得\n                    let values = [];\n                    for (let k = 0; k < inputElements.length; k++) {\n                        values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                    }\n                    cellData = values;\n                } else {\n                    cellData = cell.textContent.trim();\n                }\n\n                rowData[\"column\" + j] = cellData;\n            }\n            // 1つの行のデータを配列に追加\n            tableData.push(rowData);\n        }\n\n    } else {\n\n        let selectedRows = Array.from(rows).filter(row => {\n            let checkbox = row.cells[16].querySelector(\"input[type='checkbox']\");\n\n            return (checkbox && checkbox.checked);\n        });\n\n        for (let i = 0; i < selectedRows.length; i++) {\n            let row = selectedRows[i];\n            let rowData = {};\n\n            let cells = row.getElementsByTagName(\"td\");\n            for (let j = 0; j < cells.length; j++) {\n                let cell = cells[j];\n                let cellData = \"\";\n\n                let inputElements = cell.querySelectorAll(\"input\");\n                if (inputElements.length > 0) {\n                    // input要素が存在する場合\n                    if (inputElements[0].type === 'number') {\n                        // 数値入力の場合、各テキストボックスの値を取得\n                        let values = [];\n                        for (let k = 0; k < inputElements.length; k++) {\n                            values.push(inputElements[k].value === \"\" ? 0 : parseFloat(inputElements[k].value));\n                        }\n                        cellData = values;\n                    } else if (inputElements[0].type === 'text') {\n                        // テキスト入力の場合、最初のテキストボックスの値を取得\n                        cellData = inputElements[0].value.trim();\n                    }\n                } else {\n                    cellData = cell.textContent.trim();\n                }\n\n                rowData[\"column\" + j] = cellData;\n            }\n\n            tableData.push(rowData);\n        }\n\n    }\n\n    return tableData;\n\n}\n\nfunction sendDataToNodeRED3() {\n\n    let currentDate = new Date();\n    let formattedDate = currentDate.toISOString().split('T')[0];\n    let formattedTime = currentDate.toTimeString().split(' ')[0];\n    let datetimeValue = formattedDate + 'T' + formattedTime;\n    datetimeValue = datetimeValue.slice(0, -1);\n    let checkedTime = datetimeValue;\n\n    \n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/InspectionReport-copy`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            shippingDate: document.getElementById(\"shipping-date\").value,\n            customer: document.getElementById(\"customer\").value,\n            checkedTime: checkedTime,\n            tabledata: checkedRow()\n        }\n        \n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n\n//出荷確認者と時刻とﾊﾟﾚｯﾄ枚数を抽出\nfunction sendDataToNodeRED2(workingday, deliveryto, shippingDate, customer) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shippingheader-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        let checkedTime = formatDateTime(responseData[0].checkedtime);\n        document.getElementById(\"pallet\").value = responseData[0].pallet;\n        document.getElementById(\"koguchi\").value = responseData[0].koguchi;\n        document.getElementById(\"checked-time\").value = checkedTime;\n        document.getElementById(\"checker-name\").value = responseData[0].checkername;\n        document.getElementById(\"remarks\").value = responseData[0].remarks;\n        document.getElementById(\"workername\").value = responseData[0].workername;\n\n        socket.close();\n    };\n    \n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction sendDataToNodeRED(workingday, deliveryto, shippingDate, customer) {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/shipping-infor`);\n    \n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: '報告書',\n            storedStaffCode: storedStaffCode,\n            storedStaffName: storedStaffName,\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction displayDataInTable(data) {\n    let tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n    \n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);//進捗状況status\n        let cell2 = row.insertCell(1);//品番productnumber\n        let cell3 = row.insertCell(2);//注文番号ordernumber\n        let cell4 = row.insertCell(3);//数量quantity\n        let cell5 = row.insertCell(4);//荷姿\n        let cell6 = row.insertCell(5);//入数\n        let cell7 = row.insertCell(6);//梱包数\n        let cell8 = row.insertCell(7);//確定出荷数量\n        let cell9 = row.insertCell(8);//現場名直送先directdelivery\n        let cell10 = row.insertCell(9);//引渡し場所1delivery1\n        let cell11 = row.insertCell(10);//引渡し場所2delivery2\n        let cell12 = row.insertCell(11);//客先納期customerdate\n        let cell13 = row.insertCell(12);//受注番号cipsnumber\n        let cell14 = row.insertCell(13);//備考remarks\n        let cell15 = row.insertCell(14);//備考2remarks2\n        let cell16 = row.insertCell(15);//ｸﾞﾙｰﾌﾟ\n        let cell17 = row.insertCell(16);//ｸﾞﾙｰﾌﾟ\n\n        let databaseDate = new Date(item.customerdate.toLocaleString());\n        let year = databaseDate.getFullYear();\n        let month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        let day = databaseDate.getDate().toString().padStart(2, '0');\n        let formattedDate = `${year}/${month}/${day}`;\n\n        cell2.innerHTML = item.productnumber;\n        cell3.innerHTML = item.ordernumber;\n        cell4.innerHTML = item.quantity;\n        cell8.innerHTML = item.confirmed;\n        cell9.innerHTML = item.directdelivery;\n        cell10.innerHTML = item.delivery1;\n        cell11.innerHTML = item.delivery2;\n        cell12.innerHTML = formattedDate;\n        cell13.innerHTML = item.cipsnumber;\n        cell14.innerHTML = item.remarks;\n        cell15.innerHTML = item.remarks2;\n        cell16.innerHTML = item.groupname;\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\"; \n\n        cell17.appendChild(checkbox);\n\n        if (item.status === '1') {\n            let text = document.createTextNode(\"出荷不可\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'red';\n        } else if (item.status === '2') {\n            let text = document.createTextNode(\"出荷準備完了\");\n            cell1.appendChild(text);\n        } else if (item.status === '3') {\n            let text = document.createTextNode(\"出荷確認済\");\n            cell1.appendChild(text);\n            \n        } else if (item.status === '4') {\n            let text = document.createTextNode(\"分納\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '5') {\n            let text = document.createTextNode(\"出荷キャンセル\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '6') {\n            let text = document.createTextNode(\"出荷指示書に戻す\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '7') {\n            let text = document.createTextNode(\"その他\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray';     \n        }\n\n        if (cell4.textContent.trim() !== cell8.textContent.trim()) {\n            cell4.style.backgroundColor = 'yellow';\n            cell8.style.backgroundColor = 'yellow';\n        }    \n        \n        cell5.innerHTML = '';\n        if (item.boxed.includes(',')) {\n            // カンマが含まれている場合\n            let boxedValues = item.boxed.split(',');\n            cell6.innerHTML = '';\n\n            for (let i = 0; i < boxedValues.length; i++) {\n                let textBox = document.createElement(\"input\");\n                textBox.type = \"text\";\n                textBox.style.width = \"100px\"; \n                textBox.value = boxedValues[i];\n                textBox.setAttribute(\"readonly\", \"true\");\n                cell6.appendChild(textBox);\n            }\n        } else {\n            // カンマが含まれていない場合\n            let textBox = document.createElement(\"input\");\n            textBox.type = \"text\";\n            textBox.style.width = \"100px\"; \n            textBox.value = item.boxed;\n            textBox.setAttribute(\"readonly\", \"true\"); \n            cell6.appendChild(textBox);\n        }\n\n        if (item.packing.includes(',')) {\n            // カンマが含まれている場合\n            let packingValues = item.packing.split(',');\n            cell7.innerHTML = ''; \n\n            for (let i = 0; i < packingValues.length; i++) {\n                let textBox = document.createElement(\"input\");\n                textBox.type = \"text\";\n                textBox.style.width = \"100px\"; \n                textBox.value = packingValues[i];\n                textBox.setAttribute(\"readonly\", \"true\"); \n                cell7.appendChild(textBox);\n            }\n        } else {\n            // カンマが含まれていない場合\n            let textBox = document.createElement(\"input\");\n            textBox.type = \"text\";\n            textBox.style.width = \"100px\"; \n            textBox.value = item.packing;\n            textBox.setAttribute(\"readonly\", \"true\"); \n            cell7.appendChild(textBox);\n        }        \n    });\n}\n\nfunction getQueryParameter(name) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n    let workingday = getQueryParameter(\"workingday\");\n    let shippingDate = getQueryParameter(\"formattedDate\");\n    let deliveryto = getQueryParameter(\"deliveryto\");\n    let groupname = getQueryParameter(\"groupname\");\n    let workername = getQueryParameter(\"workername\");\n    let customer = getQueryParameter(\"customer\");\n    \n    document.getElementById(\"shipping-date\").value = shippingDate;\n    //document.getElementById(\"group-name\").value = groupname;\n    document.getElementById(\"working-date\").value = workingday;\n    document.getElementById(\"deliveryto\").value = deliveryto;\n    document.getElementById(\"customer\").value = customer;\n\n    //データベースから選択情報を抽出してテーブルに表示\n    sendDataToNodeRED2(workingday, deliveryto, shippingDate, customer);\n    sendDataToNodeRED(workingday, deliveryto, shippingDate, customer);\n\n    const tableBody = document.getElementById(\"table-body\");\n    const popupMenu = document.getElementById(\"popup-menu\");\n    let selectedCell = null;\n\n    tableBody.addEventListener(\"click\", function (event) {\n        const clickedCell = event.target;\n        const columnIndex = clickedCell.cellIndex;\n\n        if (columnIndex === 0) {\n            selectedCell = clickedCell;\n            const cellText = selectedCell.textContent.trim();\n\n            if (cellText) {\n                // ポップアップメニューを表示\n                showPopupMenu(event.clientX, event.clientY);\n            }\n        }\n    });\n\n    // スクロール時の処理\n    window.addEventListener(\"scroll\", function () {\n        if (selectedCell) {\n            // クリックしたセルがあれば、ポップアップメニューを再表示\n            showPopupMenu(selectedCell.getBoundingClientRect().x, selectedCell.getBoundingClientRect().y);\n        }\n    });\n\n    function showPopupMenu(x, y) {\n        // ポップアップメニューの幅と高さを取得\n        const menuWidth = popupMenu.offsetWidth;\n        const menuHeight = popupMenu.offsetHeight;\n\n        // クリックしたセルの位置にポップアップメニューを表示\n        const menuX = x - menuWidth / 2; // メニューを中央に配置\n        const menuY = y - menuHeight - 10; // クリックしたセルの上に表示 (10 ピクセルの余白を設けています)\n\n        popupMenu.style.left = menuX + \"px\";\n        popupMenu.style.top = menuY + \"px\";\n        popupMenu.style.display = \"block\";\n    }\n\n    // 共通の処理関数\n    function performAction(selectedAction) {\n        if (selectedCell) {\n            // 選択された行を取得\n            const cipsNumberCell = selectedCell.parentElement.cells[12];\n            const workingday = document.getElementById(\"working-date\").value;\n            const cipsNumber = cipsNumberCell.textContent.trim();\n\n            let currentDate = new Date();\n            let formattedDate = currentDate.toISOString().split('T')[0];\n            let formattedTime = currentDate.toTimeString().split(' ')[0];\n            let datetimeValue = formattedDate + 'T' + formattedTime;\n            let newWorkingday = datetimeValue;\n\n\n            let requestData = {\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                selectedAction: selectedAction,\n                workingday: workingday,\n                newWorkingday: newWorkingday,\n                cipsNumber: cipsNumber,\n                shippingDate: document.getElementById(\"shipping-date\").value,              \n                workerName: document.getElementById(\"workername\").value,\n                deliveryTo: document.getElementById(\"deliveryto\").value,\n                customer: document.getElementById(\"customer\").value\n            }\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/shippingreport-update`);\n\n            socket.onopen = function (event) {\n                socket.send(JSON.stringify(requestData));\n            };\n\n            socket.onerror = function (event) {\n                console.error(\"WebSocketエラー:\", event);\n            };\n\n            socket.onmessage = function (event) {\n                sendDataToNodeRED(groupname, workingday, deliveryto, shippingDate, customer);\n                socket.close();\n            };\n\n            socket.onclose = function (event) {\n                console.log(\"Socket connection closed.\");\n            };\n        }\n        popupMenu.style.display = \"none\";\n    }\n\n    // キャンセルボタンのクリックイベント\n    document.getElementById(\"cancel-action\").addEventListener(\"click\", function () {\n        performAction(\"cancel\");\n    });\n\n    // 分納ボタンのクリックイベント\n    document.getElementById(\"split-action\").addEventListener(\"click\", function () {\n        performAction(\"split\");\n    });\n\n    // 出荷指示書に戻すのクリックイベント\n    document.getElementById(\"return-action\").addEventListener(\"click\", function () {\n        const confirmation = window.confirm(\"新しい出荷データを生成します。よろしいでしょうか。\");\n        if (confirmation) {\n            performAction(\"return\");\n        }else{\n            return;\n        }    \n    });\n\n    // その他のクリックイベント\n    document.getElementById(\"etc-action\").addEventListener(\"click\", function () {\n        performAction(\"etc\");\n    });\n\n    document.getElementById(\"complete\").addEventListener(\"click\", function () {\n\n        let tableBody = document.getElementById(\"table-body\");\n        let rows = tableBody.getElementsByTagName(\"tr\");\n\n        let count = 0;\n        for (let i = 0; i < rows.length; i++) {\n            let statusCell = rows[i].cells[0];\n\n            let statusValue = statusCell.textContent.trim();\n\n            if (statusValue === '出荷不可') {\n                // 4番目と8番目のセルの値が異なる場合の処理\n                count++;\n            }\n        }\n\n        \n        if (count>0){\n            alert(\"未処理があります。処理を完了させてください。\")\n            return;\n        }else{\n            const confirmation = window.confirm(\"出荷を完了させます。よろしいでしょうか。\");\n            if (confirmation) {\n\n                let currentDate = new Date();\n                let formattedDate = currentDate.toISOString().split('T')[0];\n                let formattedTime = currentDate.toTimeString().split(' ')[0];\n                let datetimeValue = formattedDate + 'T' + formattedTime;\n                let newWorkingday = datetimeValue;\n\n                let dataToSubmit = {\n                    storedStaffCode: storedStaffCode,\n                    storedStaffName: storedStaffName,\n                    newWorkingday: newWorkingday,\n                    shippingDate: document.getElementById(\"shipping-date\").value,\n                    koguchi: document.getElementById(\"koguchi\").value,\n                    workingDate: document.getElementById(\"working-date\").value,\n                    workerName: document.getElementById(\"workername\").value,\n                    deliveryTo: document.getElementById(\"deliveryto\").value,\n                    palletQuantity: document.getElementById(\"pallet\").value,\n                    customer: document.getElementById(\"customer\").value\n\n                }\n                const hostname = window.location.hostname;\n                let socket = new WebSocket(`wss://${hostname}/shippingreport-log`);\n                socket.onopen = function (event) {\n                    socket.send(JSON.stringify(dataToSubmit));\n                };\n                socket.onmessage = function (event) {\n                    alert('出荷を完了させました。');\n                    socket.close();\n\n                    setTimeout(function () {\n                        let redirectURL = '/page7';\n                        window.location.href = redirectURL;\n                    }, 0);\n                };\n\n            } else {\n                return;\n            }\n        }   \n    });\n\n    document.getElementById(\"inspection\").addEventListener(\"click\", function () {\n\n        sendDataToNodeRED3();\n        \n    });\n\n\n}); ",
        "output": "str",
        "x": 300,
        "y": 2180,
        "wires": [
            [
                "a3b3efeae4c2d0c5"
            ]
        ]
    },
    {
        "id": "a3b3efeae4c2d0c5",
        "type": "template",
        "z": "6e800843b8042cf7",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    width: 100%;\n    overflow: auto;\n    height: 600px;\n    position: relative;\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#mytable th.fixed-left, #mytable tbody td:nth-child(2) {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable td:nth-child(13) {\n  display: none;\n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n/* CSSスタイル（ポップアップメニューを非表示に） */\n.popup-menu {\n    z-index: 9999;\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.popup-menu ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n.popup-menu ul li {\n    padding: 10px;\n    text-align: center;\n}\n\n.popup-menu ul li:hover {\n    background-color: #f0f0f0;\n    cursor: pointer;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 430,
        "y": 2180,
        "wires": [
            [
                "f46e59920158e157"
            ]
        ]
    },
    {
        "id": "505abd9633f359fe",
        "type": "http response",
        "z": "6e800843b8042cf7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 2180,
        "wires": []
    },
    {
        "id": "fc14128f7faa079c",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "f88ad96a249145b8",
        "client": "",
        "x": 190,
        "y": 2300,
        "wires": [
            [
                "971f1289a1082d4e"
            ]
        ]
    },
    {
        "id": "971f1289a1082d4e",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 2300,
        "wires": [
            [
                "866437da4c9d1b10"
            ]
        ]
    },
    {
        "id": "b895e5916041155e",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "update shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = 'Status' WHERE  cipsnumber = 'Cipsnumber' AND workingday = 'Workingday';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Cipsnumber",
                "fromt": "str",
                "to": "payload.cipsNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2280,
        "wires": [
            [
                "08e9ec8387b11767"
            ]
        ]
    },
    {
        "id": "866437da4c9d1b10",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "selectedAction",
        "func": "var storedStaffName = msg.payload.storedStaffName;\nvar storedStaffCode = msg.payload.storedStaffCode;\nvar workingday = msg.payload.workingday;\nvar cipsNumber = msg.payload.cipsNumber;\nvar newWorkingday = msg.payload.newWorkingday;\nvar shippingDate = msg.payload.shippingDate;\nvar deliveryTo = msg.payload.deliveryTo;\nvar customer = msg.payload.customer;\n\n\n// データを変数に保存\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('workingday', workingday);\nflow.set('cipsNumber', cipsNumber);\nflow.set('newWorkingday', newWorkingday);\nflow.set('shippingDate', shippingDate);\nflow.set('deliveryTo', deliveryTo);\nflow.set('customer', customer);\n\n\n\n\nvar selectedAction = msg.payload.selectedAction\n\nif (selectedAction === 'cancel'){\n    msg.status = \"5\";    \n} else if (selectedAction === 'split'){\n    msg.status = \"4\";   \n} else if (selectedAction === 'return') {\n    msg.status = \"6\"; \n} else if (selectedAction === 'etc') {\n    msg.status = \"7\";     \n}      \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2300,
        "wires": [
            [
                "3f123ab5c3489790"
            ]
        ]
    },
    {
        "id": "08e9ec8387b11767",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2280,
        "wires": [
            [
                "b2ee22253c621a7a"
            ]
        ]
    },
    {
        "id": "b2ee22253c621a7a",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "f88ad96a249145b8",
        "client": "",
        "x": 1220,
        "y": 2300,
        "wires": []
    },
    {
        "id": "eb8884e199992901",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shipping",
        "func": "var workingDate = msg.payload.textFields.workingDate;\nvar groupName = msg.payload.textFields.groupName;\nvar deliveryTo = msg.payload.textFields.deliveryTo;\nvar shippingDate = msg.payload.textFields.shippingDate;\nvar storedStaffName = msg.payload.textFields.storedStaffName;\nvar storedStaffCode = msg.payload.textFields.storedStaffCode;\nvar palletQuantity = msg.payload.textFields.palletQuantity;\nvar checkedTime = msg.payload.textFields.checkedTime;\nvar customer = msg.payload.textFields.customer;\nvar remarks = msg.payload.textFields.remarks;\nvar koguchi = msg.payload.textFields.koguchi;\n\n// データを変数に保存\nflow.set('workingDate', workingDate);\nflow.set('groupName', groupName);\nflow.set('deliveryTo', deliveryTo);\nflow.set('shippingDate', shippingDate);\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('palletQuantity', palletQuantity);\nflow.set('checkedTime', checkedTime);\nflow.set('customer', customer);\nflow.set('remarks', remarks);\nflow.set('koguchi', koguchi);\n\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record.column13 = record.column13.replace(/\\//g, '-');\n    record.column6 = (record.column6 !== null && record.column6 !== undefined) ? record.column6.toString() : '';\n    record.column7 = (record.column7 !== null && record.column7 !== undefined) ? record.column7.toString() : '';\n});\n\n\nvar updateQueries = [];\n\nrecords.forEach(function (record, index) {\n\n    if(record.column1 === '出荷準備完了'){\n\n        var updateQuery = \"UPDATE shipping SET status = '3', boxed = '\" + record.column6 + \"', packing = '\" + record.column7 + \"', confirmed = '\" + record.column8 + \"' WHERE cipsnumber = '\" + record.column14 + \"'\";\n        \n    }else{\n\n        var updateQuery = \"UPDATE shipping SET boxed = '\" + record.column6 + \"', packing = '\" + record.column7 + \"', confirmed = '\" + record.column8 + \"' WHERE cipsnumber = '\" + record.column14 + \"'\";\n\n    }\n\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 900,
        "wires": [
            [
                "ed602c317e47dc88"
            ]
        ]
    },
    {
        "id": "ed602c317e47dc88",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 900,
        "wires": [
            [
                "acdb31c826e74760"
            ]
        ]
    },
    {
        "id": "9659b72123287db4",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "53b538411ee09057"
            ]
        ]
    },
    {
        "id": "acdb31c826e74760",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 900,
        "wires": [
            [
                "9659b72123287db4"
            ]
        ]
    },
    {
        "id": "53b538411ee09057",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 960,
        "wires": [
            [
                "6c9d315e7e831678"
            ]
        ]
    },
    {
        "id": "3f123ab5c3489790",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "条件分岐",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 2300,
        "wires": [
            [
                "b895e5916041155e"
            ],
            [
                "5737d3c2aaef1c95"
            ]
        ]
    },
    {
        "id": "ea73e23cd7a2c3f9",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippinglog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO shippinglog SELECT * FROM shipping WHERE  cipsnumber = 'Cipsnumber' AND workingday = 'Workingday';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Cipsnumber",
                "fromt": "str",
                "to": "payload.cipsNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2380,
        "wires": [
            [
                "597256664d8ab90a"
            ]
        ]
    },
    {
        "id": "ac252aacf4b1f3eb",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "update shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = '0', workingday = 'newday', workercode = 'Wokercode', workername = 'Wokername' WHERE  cipsnumber = 'Cipsnumber' AND workingday = 'Workingday' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Cipsnumber",
                "fromt": "str",
                "to": "payload.cipsNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "newday",
                "fromt": "str",
                "to": "payload.newWorkingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Wokercode",
                "fromt": "str",
                "to": "payload.storedStaffCode",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Wokername",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2440,
        "wires": [
            [
                "8434b14e99f751e2"
            ]
        ]
    },
    {
        "id": "8434b14e99f751e2",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2440,
        "wires": [
            [
                "95deca5803cb4144"
            ]
        ]
    },
    {
        "id": "5737d3c2aaef1c95",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "update shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shipping SET status = 'Status' WHERE  cipsnumber = 'Cipsnumber' AND workingday = 'Workingday';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Cipsnumber",
                "fromt": "str",
                "to": "payload.cipsNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 2320,
        "wires": [
            [
                "903f507b45486bea"
            ]
        ]
    },
    {
        "id": "903f507b45486bea",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2320,
        "wires": [
            [
                "b2ee22253c621a7a",
                "a106e25a6ce08652"
            ]
        ]
    },
    {
        "id": "597256664d8ab90a",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2380,
        "wires": [
            [
                "a7fcd762cc63042c"
            ]
        ]
    },
    {
        "id": "a7fcd762cc63042c",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "入力日更新",
        "func": "\nvar storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar workingday = flow.get('workingday');\nvar cipsNumber = flow.get('cipsNumber');\nvar newWorkingday = flow.get('newWorkingday');\n\nmsg.payload.storedStaffCode = storedStaffCode;\nmsg.payload.storedStaffName = storedStaffName;\nmsg.payload.newWorkingday = newWorkingday;\nmsg.payload.workingday = workingday;\nmsg.payload.cipsNumber = cipsNumber;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2440,
        "wires": [
            [
                "ac252aacf4b1f3eb"
            ]
        ]
    },
    {
        "id": "a106e25a6ce08652",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "指示書に戻す",
        "func": "\nvar storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar workingday = flow.get('workingday');\nvar cipsNumber = flow.get('cipsNumber')\n\nmsg.payload.storedStaffCode = storedStaffCode;\nmsg.payload.storedStaffName = storedStaffName;\nmsg.payload.workingday = workingday;\nmsg.payload.cipsNumber = cipsNumber;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2380,
        "wires": [
            [
                "ea73e23cd7a2c3f9"
            ]
        ]
    },
    {
        "id": "3bb1703098946abb",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "59baf45b8909c74b",
        "client": "",
        "x": 180,
        "y": 2560,
        "wires": [
            [
                "0b6aff65e3371525"
            ]
        ]
    },
    {
        "id": "0b6aff65e3371525",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 2560,
        "wires": [
            [
                "600d8a3569f02364"
            ]
        ]
    },
    {
        "id": "86b5672c3216e0c9",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2560,
        "wires": [
            [
                "50f99725a4d375c8"
            ]
        ]
    },
    {
        "id": "600d8a3569f02364",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "var newWorkingday = msg.payload.newWorkingday;\nvar workingday = msg.payload.workingDate;\nvar koguchi = msg.payload.koguchi;\nvar deliveryto = msg.payload.deliveryTo;\nvar shippingDate = msg.payload.shippingDate;\nvar storedStaffName = msg.payload.storedStaffName;\nvar storedStaffCode = msg.payload.storedStaffCode;\nvar customer = msg.payload.customer;\n\n\n// データを変数に保存\nflow.set('newWorkingday', newWorkingday);\nflow.set('workingday', workingday);\nflow.set('koguchi', koguchi);\nflow.set('deliveryto', deliveryto);\nflow.set('shippingDate', shippingDate);\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('customer', customer);\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2560,
        "wires": [
            [
                "dfa027ed3a59d9d9"
            ]
        ]
    },
    {
        "id": "a592d08f57f3225e",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2980,
        "wires": [
            [
                "b15ff98995707dde"
            ]
        ]
    },
    {
        "id": "526c59c9e5fe1612",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "パレット",
        "filename": "/home/kuwata/ktrg/パレット.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 300,
        "y": 520,
        "wires": [
            [
                "a9362e2441e507d6"
            ]
        ]
    },
    {
        "id": "a9362e2441e507d6",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicespallet = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicespallet.push(row); \n}\n\nmsg.choicespallet = choicespallet;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "f5657433cc222e7f"
            ]
        ]
    },
    {
        "id": "4ba936549e6fe70c",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 960,
        "wires": [
            [
                "c3380fb1ba7f372d"
            ]
        ]
    },
    {
        "id": "7b1948d296e41635",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from shippingheader",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "b4ed6bcd0245fcfc",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "3d93135a8fd86ba5",
        "client": "",
        "x": 200,
        "y": 2240,
        "wires": [
            [
                "047428e0629c5ad0"
            ]
        ]
    },
    {
        "id": "047428e0629c5ad0",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "8415b3ae02fcf447"
            ]
        ]
    },
    {
        "id": "c9af97b0d33e7286",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "指示書or報告書",
        "property": "payload.selectedAction",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "指示書",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "報告書",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "968dbbf160b19402",
                "f7b18a0d1acfa3b3"
            ],
            [
                "a652b7caf8a5a718"
            ]
        ]
    },
    {
        "id": "b6c6ea3c8094bf7a",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "74f819cf8adc4070"
            ]
        ]
    },
    {
        "id": "4add914e852206fc",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2240,
        "wires": [
            [
                "2443a6b4a9aec7ef"
            ]
        ]
    },
    {
        "id": "2443a6b4a9aec7ef",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1150,
        "y": 2240,
        "wires": [
            [
                "d2bf29db4f071a4f"
            ]
        ]
    },
    {
        "id": "8415b3ae02fcf447",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from shippingheader where",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT workername, remarks, pallet, koguchi, checkername, checkedtime FROM shippingheader WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 2240,
        "wires": [
            [
                "4add914e852206fc"
            ]
        ]
    },
    {
        "id": "a652b7caf8a5a718",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from shipping WHERE",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM shipping WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer' ORDER BY delivery1;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 660,
        "wires": [
            [
                "b6c6ea3c8094bf7a"
            ]
        ]
    },
    {
        "id": "d2bf29db4f071a4f",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "3d93135a8fd86ba5",
        "client": "",
        "x": 1360,
        "y": 2240,
        "wires": []
    },
    {
        "id": "dfa027ed3a59d9d9",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippinglog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO shippinglog SELECT * FROM shipping  WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2560,
        "wires": [
            [
                "86b5672c3216e0c9"
            ]
        ]
    },
    {
        "id": "50f99725a4d375c8",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "\nmsg.payload.workingDate =  flow.get('workingday');\nmsg.payload.koguchi = flow.get('koguchi');\nmsg.payload.deliveryTo = flow.get('deliveryto');\nmsg.payload.shippingDate = flow.get('shippingDate');\nmsg.payload.storedStaffName = flow.get('storedStaffName');\nmsg.payload.storedStaffCode = flow.get('storedStaffCode');\nmsg.payload.customer = flow.get('customer');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2620,
        "wires": [
            [
                "a56238ff4956c877"
            ]
        ]
    },
    {
        "id": "a56238ff4956c877",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippingheaderlog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO shippingheaderlog SELECT * FROM shippingheader  WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 2620,
        "wires": [
            [
                "0c8232a52fc10015"
            ]
        ]
    },
    {
        "id": "0c8232a52fc10015",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2620,
        "wires": [
            [
                "d8baca0187d042b9"
            ]
        ]
    },
    {
        "id": "d8baca0187d042b9",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "\n\nmsg.payload.newWorkingday = flow.get('newWorkingday');\nmsg.payload.workingDate =  flow.get('workingday');\nmsg.payload.koguchi = flow.get('koguchi');\nmsg.payload.deliveryTo = flow.get('deliveryto');\nmsg.payload.shippingDate = flow.get('shippingDate');\nmsg.payload.storedStaffName = flow.get('storedStaffName');\nmsg.payload.storedStaffCode = flow.get('storedStaffCode');\nmsg.payload.customer = flow.get('customer');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2680,
        "wires": [
            [
                "c6997322a5babb70"
            ]
        ]
    },
    {
        "id": "c6997322a5babb70",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "UPDATE shippingheaderlog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shippingheaderlog SET completiontime = 'Completiontime' , completer = 'StoredStaffName' , status = '2' WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "StoredStaffName",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Completiontime",
                "fromt": "str",
                "to": "payload.newWorkingday",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2680,
        "wires": [
            [
                "10be212e33dcf950"
            ]
        ]
    },
    {
        "id": "10be212e33dcf950",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2680,
        "wires": [
            [
                "008d617d9338860c"
            ]
        ]
    },
    {
        "id": "903c52a38e0af70f",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "\n// データを変数に保存\nmsg.payload.workingDate =  flow.get('workingday');\nmsg.payload.koguchi = flow.get('koguchi');\nmsg.payload.deliveryTo = flow.get('deliveryto');\nmsg.payload.shippingDate = flow.get('shippingDate');\nmsg.payload.storedStaffName = flow.get('storedStaffName');\nmsg.payload.storedStaffCode = flow.get('storedStaffCode');\nmsg.payload.customer = flow.get('customer');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2980,
        "wires": [
            [
                "697ea11c66091334"
            ]
        ]
    },
    {
        "id": "697ea11c66091334",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "DELETE FROM shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM shipping  WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2980,
        "wires": [
            [
                "a592d08f57f3225e"
            ]
        ]
    },
    {
        "id": "b15ff98995707dde",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "\n// データを変数に保存\nmsg.payload.workingDate =  flow.get('workingday');\nmsg.payload.koguchi = flow.get('koguchi');\nmsg.payload.deliveryTo = flow.get('deliveryto');\nmsg.payload.shippingDate = flow.get('shippingDate');\nmsg.payload.storedStaffName = flow.get('storedStaffName');\nmsg.payload.storedStaffCode = flow.get('storedStaffCode');\nmsg.payload.customer = flow.get('customer');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3040,
        "wires": [
            [
                "ad60156a7e7889d6"
            ]
        ]
    },
    {
        "id": "ad60156a7e7889d6",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "DELETE FROM shippingheader",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM shippingheader  WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 3040,
        "wires": [
            [
                "ee59d659465f35c3"
            ]
        ]
    },
    {
        "id": "ee59d659465f35c3",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 3040,
        "wires": [
            [
                "54ee8406e6a6ec4c"
            ]
        ]
    },
    {
        "id": "1e66026e3d443028",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,koguchi;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 220,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "0e65b5a562ef3eb0",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND customer='Customer' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 260,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "74b572d180e46f6a",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where customer AND delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND customer='Customer' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,koguchi;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "487d14ff8cbf1848",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where shippingdate",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND shippingdate='Shippingdate' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "9993fbced28837e9",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where shippingdate",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE  status ='Status' AND shippingdate='Shippingdate' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "53b7a54621f4a698",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where shippingdate AND customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND shippingdate='Shippingdate' AND customer='Customer' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 420,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "be86c529cbfc9c28",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where shippingdate AND customer AND delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks FROM shippingheader WHERE status ='Status' AND shippingdate='Shippingdate' AND customer='Customer' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Status",
                "fromt": "str",
                "to": "status",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 460,
        "wires": [
            [
                "9ba7e2bc51398ce1"
            ]
        ]
    },
    {
        "id": "b1f25d1d35dcfaf1",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "INSERT INTO shippingheader ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO shippingheader (workingday, workername, shippingdate, customer, deliveryto, status, orderquantity, readyquantity) VALUES ('Workingday', 'Wokername', 'Shippingdate', 'Customer', 'Deliveryto', '0',1,0);",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "msg.payload.newWorkingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Wokername",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 2500,
        "wires": [
            [
                "4176cc0811ad0abd"
            ]
        ]
    },
    {
        "id": "95deca5803cb4144",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "var storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar workingday = flow.get('workingday');\nvar newWorkingday = flow.get('newWorkingday');\nvar shippingDate = flow.get('shippingDate');\nvar groupName = flow.get('groupName');\nvar deliveryTo = flow.get('deliveryTo');\nvar customer = flow.get('customer');\n\nmsg.payload.storedStaffCode = storedStaffCode;\nmsg.payload.storedStaffName = storedStaffName;\nmsg.payload.workingday = workingday;\nmsg.payload.newWorkingday = newWorkingday;\nmsg.payload.shippingDate = shippingDate;\nmsg.payload.groupName = groupName;\nmsg.payload.deliveryTo = deliveryTo;\nmsg.payload.customer = customer;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2500,
        "wires": [
            [
                "b1f25d1d35dcfaf1"
            ]
        ]
    },
    {
        "id": "4176cc0811ad0abd",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "5bab1cc528f379e2",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from where",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM shipping WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer' AND confirmed<>'';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryTo",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2740,
        "wires": [
            [
                "90e6d77af60e1a7a"
            ]
        ]
    },
    {
        "id": "90e6d77af60e1a7a",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2740,
        "wires": [
            [
                "84b604f94a3fa348"
            ]
        ]
    },
    {
        "id": "84b604f94a3fa348",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update stock",
        "func": "var records = msg.payload; \nvar updateQueries = [];\nvar cipsnumbers = [];\nvar confirmed = [];\nvar newWorkingday = [];\nvar storedStaffCode = [];\nvar storedStaffName = [];\nvar customer = [];\nvar shippingDate = [];\nvar productNumber = [];\nvar orderNumber = [];\n\n\nrecords.forEach(function (record, index) {\n\n    var updateQuery = \"UPDATE stock SET quantity = quantity-\" + parseInt(record.confirmed) + \" WHERE cipsnumber = '\" + record.cipsnumber  + \"'\";\n    updateQueries.push(updateQuery);\n    cipsnumbers.push(record.cipsnumber);\n    confirmed.push(record.confirmed);\n    newWorkingday.push(flow.get('newWorkingday'));\n    storedStaffCode.push(flow.get('storedStaffCode'));\n    storedStaffName.push(flow.get('storedStaffName'));\n    customer.push(record.customer);\n    shippingDate.push(record.shippingdate);\n    productNumber.push(record.productnumber);\n    orderNumber.push(record.ordernumber);\n\n});\n\nmsg.payload = updateQueries;\nmsg.cipsnumbers = cipsnumbers;\nmsg.confirmed = confirmed;\nmsg.newWorkingday = newWorkingday;\nmsg.storedStaffCode = storedStaffCode;\nmsg.storedStaffName = storedStaffName;\nmsg.customer = customer;\nmsg.shippingDate = shippingDate;\nmsg.productNumber = productNumber;\nmsg.orderNumber = orderNumber;\n\n\nflow.set('cipsnumbers', cipsnumbers);\nflow.set('confirmed', confirmed);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2800,
        "wires": [
            [
                "120bdb2ec0e7ed26"
            ]
        ]
    },
    {
        "id": "120bdb2ec0e7ed26",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 2800,
        "wires": [
            [
                "84090976255ff4b1"
            ]
        ]
    },
    {
        "id": "84090976255ff4b1",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2800,
        "wires": [
            [
                "658aa201a5df7426"
            ]
        ]
    },
    {
        "id": "658aa201a5df7426",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2800,
        "wires": [
            [
                "d00b62b96c7e1925"
            ]
        ]
    },
    {
        "id": "d00b62b96c7e1925",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 2860,
        "wires": [
            [
                "e131fe6056314de1"
            ]
        ]
    },
    {
        "id": "9768e4e95c9dfae4",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build Insert Issue",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar insertQuery = \"INSERT INTO Issue (workingday, location, category, customer, productnumber, quantity, serialnumber, workercode, workername, goto, shipdate, ordernumber, id, cipsnumber) VALUES \";\nvar valueStrings = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    for (var j = 0; j < msg.payload[i].length; j++) {\n\n        var serialnumber = msg.payload[i][j] && msg.payload[i][j].serialnumber != null ? msg.payload[i][j].serialnumber : 0;\n\n        var values = [\n            msg.newWorkingday[i],\n            msg.payload[i][j].location,\n            msg.payload[i][j].category,\n            msg.customer[i],\n            msg.productNumber[i],\n            msg.confirmed[i],\n            serialnumber,\n            msg.storedStaffCode[i],\n            msg.storedStaffName[i],\n            '出荷 / CIPS発注番号:' + msg.cipsnumbers[i],\n            formatDate(msg.shippingDate[i]),\n            msg.orderNumber[i],\n            msg.payload[i][j].id,\n            msg.cipsnumbers[i]\n        ];\n\n        var valueString = \"(\" + values.map(function (value) {\n            return typeof value === 'number' ? value : \"'\" + value + \"'\";\n        }).join(\", \") + \")\";\n\n        valueStrings.push(valueString);\n    }\n}\n\ninsertQuery += valueStrings.join(\", \") + \";\";\n\n\n\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2920,
        "wires": [
            [
                "c51423f77d0ebdf4"
            ]
        ]
    },
    {
        "id": "e131fe6056314de1",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT FROM stock",
        "func": "\nvar cipsnumbers = flow.get('cipsnumbers');\n\n\nvar queries = [];\n\nfor (var i = 0; i < cipsnumbers.length; i++) {\n    var cipsnumber = cipsnumbers[i];\n\n    // クエリを生成し、queries 配列に追加\n    var query = \"SELECT location, category, serialnumber, id FROM stock WHERE cipsnumber = '\" + cipsnumber + \"';\";\n    queries.push(query);\n}\n\nmsg.payload = queries\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2860,
        "wires": [
            [
                "35acdce73bc94c1a"
            ]
        ]
    },
    {
        "id": "9dcd02e906ca8e5c",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2860,
        "wires": [
            [
                "b8feee4a31787053"
            ]
        ]
    },
    {
        "id": "35acdce73bc94c1a",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 2860,
        "wires": [
            [
                "78f8cf23f2303cdb"
            ]
        ]
    },
    {
        "id": "78f8cf23f2303cdb",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2860,
        "wires": [
            [
                "9dcd02e906ca8e5c"
            ]
        ]
    },
    {
        "id": "b8feee4a31787053",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 2920,
        "wires": [
            [
                "9768e4e95c9dfae4"
            ]
        ]
    },
    {
        "id": "c51423f77d0ebdf4",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 2920,
        "wires": [
            [
                "903c52a38e0af70f"
            ]
        ]
    },
    {
        "id": "73013028862abf5e",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "c5fb3aecbaa43f9c",
        "client": "",
        "x": 1200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "008d617d9338860c",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "\n\nmsg.payload.newWorkingday = flow.get('newWorkingday');\nmsg.payload.workingDate =  flow.get('workingday');\nmsg.payload.koguchi = flow.get('koguchi');\nmsg.payload.deliveryTo = flow.get('deliveryto');\nmsg.payload.shippingDate = flow.get('shippingDate');\nmsg.payload.storedStaffName = flow.get('storedStaffName');\nmsg.payload.storedStaffCode = flow.get('storedStaffCode');\nmsg.payload.customer = flow.get('customer');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2740,
        "wires": [
            [
                "5bab1cc528f379e2"
            ]
        ]
    },
    {
        "id": "f5657433cc222e7f",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "備考",
        "filename": "/home/kuwata/ktrg/備考.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "463f46f42491173b"
            ]
        ]
    },
    {
        "id": "463f46f42491173b",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicesRemarks = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicesRemarks.push(row); \n}\n\nmsg.choicesRemarks = choicesRemarks;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 520,
        "wires": [
            [
                "9e4b06e725d4f412"
            ]
        ]
    },
    {
        "id": "54ee8406e6a6ec4c",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "59baf45b8909c74b",
        "client": "",
        "x": 1230,
        "y": 3040,
        "wires": []
    },
    {
        "id": "9e4b06e725d4f412",
        "type": "file in",
        "z": "6e800843b8042cf7",
        "name": "グループ",
        "filename": "/home/kuwata/ktrg/グループ.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 920,
        "y": 520,
        "wires": [
            [
                "da77a121752170bd"
            ]
        ]
    },
    {
        "id": "da77a121752170bd",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicesgroup = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicesgroup.push(row); \n}\n\nmsg.choicesgroup = choicesgroup;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 520,
        "wires": [
            [
                "17605d50556b4156"
            ]
        ]
    },
    {
        "id": "6c9d315e7e831678",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "条件データ",
        "func": "var workingday = flow.get('workingDate');\nvar koguchi = flow.get('koguchi');\nvar deliveryto = flow.get('deliveryTo');\nvar shippingDate = flow.get('shippingDate').replace(/\\//g, '-');\nvar storedStaffName = flow.get('storedStaffName');\nvar storedStaffCode = flow.get('storedStaffCode');\nvar palletQuantity = flow.get('palletQuantity');\nvar checkedTime = flow.get('checkedTime');\nvar customer = flow.get('customer');\nvar remarks = flow.get('remarks');\n\n\nmsg.workingday = workingday;\nmsg.koguchi = koguchi;\nmsg.deliveryto = deliveryto;\nmsg.shippingDate = shippingDate;\nmsg.storedStaffName = storedStaffName;\nmsg.storedStaffCode = storedStaffCode;\nmsg.palletQuantity = palletQuantity;\nmsg.checkedTime = checkedTime;\nmsg.customer = customer;\nmsg.remarks = remarks;\n\nmsg.koguchi = (koguchi !== '' && koguchi !== undefined) ? koguchi.toString() : null;\nmsg.palletQuantity = (palletQuantity !== '' && palletQuantity !== undefined) ? palletQuantity.toString() : null;\nmsg.remarks = (remarks !== null && remarks !== undefined) ? remarks.toString() : '';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 960,
        "wires": [
            [
                "3512e207cc45c57f"
            ]
        ]
    },
    {
        "id": "3512e207cc45c57f",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "UPDATE shippingheader",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE shippingheader SET remarks = 'Remarks', pallet = Pallet, koguchi = Koguchi, checkername = 'Workername', checkedtime = 'Checkedtime', status = '1' WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND customer = 'Customer' AND shippingdate = 'Shippingdate';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Pallet",
                "fromt": "str",
                "to": "palletQuantity",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Remarks",
                "fromt": "str",
                "to": "remarks",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Koguchi",
                "fromt": "str",
                "to": "koguchi",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workername",
                "fromt": "str",
                "to": "storedStaffName",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Checkedtime",
                "fromt": "str",
                "to": "checkedTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 960,
        "wires": [
            [
                "4ba936549e6fe70c"
            ]
        ]
    },
    {
        "id": "de0d7dba2c99c6f6",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1080,
        "wires": [
            [
                "73013028862abf5e"
            ]
        ]
    },
    {
        "id": "392755ee97d6f6e9",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"' WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1080,
        "wires": [
            [
                "31e24432e979f14d"
            ]
        ]
    },
    {
        "id": "31e24432e979f14d",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "f29ee17a1c83afd5"
            ]
        ]
    },
    {
        "id": "f29ee17a1c83afd5",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "de0d7dba2c99c6f6"
            ]
        ]
    },
    {
        "id": "b29e5cf52b10f8e3",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1020,
        "wires": [
            [
                "392755ee97d6f6e9"
            ]
        ]
    },
    {
        "id": "c3380fb1ba7f372d",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 3 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "b29e5cf52b10f8e3"
            ]
        ]
    },
    {
        "id": "83068fde13b2b7d0",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"' WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "69939e3523d12be4"
            ]
        ]
    },
    {
        "id": "69939e3523d12be4",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 840,
        "wires": [
            [
                "5dd5d9201e8c8de1"
            ]
        ]
    },
    {
        "id": "5dd5d9201e8c8de1",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 840,
        "wires": [
            [
                "f3821733a54ff809"
            ]
        ]
    },
    {
        "id": "f3821733a54ff809",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "bd9f7dd7919ca548"
            ]
        ]
    },
    {
        "id": "ebedd935b695d9c5",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "ad414dbe18e00e99",
        "client": "",
        "x": 490,
        "y": 4000,
        "wires": [
            [
                "098d7911f976bb1b"
            ]
        ]
    },
    {
        "id": "098d7911f976bb1b",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 4000,
        "wires": [
            [
                "9589ce02d0c72468"
            ]
        ]
    },
    {
        "id": "9589ce02d0c72468",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT FROM stock",
        "func": "var data = msg.payload\n\nvar selectQuery = `SELECT\n                 ProductNumber,\n                 SerialNumber,\n                 ArrivalDay\n             FROM\n                 InspectionRequest\n             WHERE\n                 ProductNumber = ? \n                 AND CompletionDate = ?\n                 AND Customer = ?`;\n\nmsg.topic = selectQuery;\n\nmsg.payload = [\n    data.productNumber,\n    data.shippingDate,\n    data.customer\n    \n];\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 4000,
        "wires": [
            [
                "f3aa0c525387d998"
            ]
        ]
    },
    {
        "id": "f3aa0c525387d998",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 4000,
        "wires": [
            [
                "9c742e0612eb614d"
            ]
        ]
    },
    {
        "id": "9c742e0612eb614d",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "ad414dbe18e00e99",
        "client": "",
        "x": 1200,
        "y": 4000,
        "wires": []
    },
    {
        "id": "664e9b541476f21b",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "2ae1f8db4a6be615",
        "client": "",
        "x": 200,
        "y": 4100,
        "wires": [
            [
                "cf3404b547fab4f6"
            ]
        ]
    },
    {
        "id": "cf3404b547fab4f6",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 4100,
        "wires": [
            [
                "bf279996b1d256d8"
            ]
        ]
    },
    {
        "id": "198f5e0bde22eb5a",
        "type": "file",
        "z": "6e800843b8042cf7",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "Shift_JIS",
        "x": 740,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "bf279996b1d256d8",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "jsonfileGeneration",
        "func": "function formatDateTime(dateTimeString) {\n\n    if (dateTimeString.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{1}$/)) {\n        dateTimeString += '0';\n    }\n\n    var dbDateTime = new Date(dateTimeString);\n\n    if (isNaN(dbDateTime.getTime())) {\n        console.error(\"Invalid date string:\", dateTimeString);\n        return \"Invalid date\";\n    }\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + '_' +\n        dbDateTime.getHours().toString().padStart(2, '0') +\n        dbDateTime.getMinutes().toString().padStart(2, '0') +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nconst JASON_PATH = '/mnt/katuragi36_inspection/copy_json_data/' + formatDateTime(msg.payload.checkedTime) + '.json'\n\nmsg.filename = JASON_PATH;\n\nlet tabledata = msg.payload.tabledata;\n\n// 新しいデータを保存するための配列を作成\nlet newData = tabledata.map(item => {\n    return {\n        productNumber: item.column1,\n        orderNumber: item.column2,\n        deliveryQuantity: item.column7,\n        deliveryDate: item.column11\n    };\n});\n\n// 新しいデータをペイロードにセット\nmsg.payload = newData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 4100,
        "wires": [
            [
                "c3f7ac22f00eadfa"
            ]
        ]
    },
    {
        "id": "c3f7ac22f00eadfa",
        "type": "file",
        "z": "6e800843b8042cf7",
        "name": "",
        "filename": "/home/kuwata/test.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 780,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "a13e5d2eb60889ba",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT * FROM shippingheader",
        "func": "let workingDate = flow.get('workingDate');\nlet storedStaffName = flow.get('storedStaffName');\nlet customer = flow.get('customer');\nlet deliveryTo = flow.get('deliveryTo');\nlet enteredDate = flow.get('enteredDate');\n\n\nvar selectQuery = \"SELECT * from shippingheader WHERE workingday = '\" + workingDate + \"' AND customer = '\" + customer + \"' AND deliveryto = '\" + deliveryTo + \"' AND shippingdate = '\" + enteredDate+\"'\";\nmsg.topic = selectQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1580,
        "wires": [
            [
                "47895e564c324e91"
            ]
        ]
    },
    {
        "id": "488e8f0af0a42e13",
        "type": "link in",
        "z": "6e800843b8042cf7",
        "name": "select * from shippingheader",
        "links": [],
        "x": 605,
        "y": 1580,
        "wires": [
            [
                "a13e5d2eb60889ba"
            ]
        ]
    },
    {
        "id": "47895e564c324e91",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1580,
        "wires": [
            [
                "eb12795a2512142a"
            ]
        ]
    },
    {
        "id": "eb12795a2512142a",
        "type": "link out",
        "z": "6e800843b8042cf7",
        "name": "link out 8",
        "mode": "return",
        "links": [],
        "x": 1095,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c7799bfd135239d9",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "488e8f0af0a42e13"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 640,
        "y": 1740,
        "wires": [
            [
                "7b83453510ef70f8"
            ]
        ]
    },
    {
        "id": "7b83453510ef70f8",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 1800,
        "wires": [
            [
                "038bf40759a0d8a5"
            ],
            [
                "cbe22f020ff371ee"
            ]
        ],
        "info": "検索したshippingheaderにデータがあれば消す\r\n無ければ更新する。"
    },
    {
        "id": "cbe22f020ff371ee",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "UPDATE shippingheader",
        "func": "let workingDate = flow.get('workingDate');\nlet storedStaffName = flow.get('storedStaffName');\nlet customer = flow.get('customer');\nlet deliveryTo = flow.get('deliveryTo');\nlet shippingDate = flow.get('shippingDate');\nlet enteredDate = flow.get('enteredDate');\n\nvar updateQuery = \"UPDATE shippingheader SET shippingdate = '\" + enteredDate + \"' WHERE workingday = '\" + workingDate + \"' AND customer = '\" + customer + \"' AND deliveryto = '\" + deliveryTo + \"' AND shippingdate = '\" + shippingDate+\"'\";\nmsg.topic = updateQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1820,
        "wires": [
            [
                "cf6af978a2623172"
            ]
        ]
    },
    {
        "id": "038bf40759a0d8a5",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "DELETE shippingheader",
        "func": "let workingDate = flow.get('workingDate');\nlet storedStaffName = flow.get('storedStaffName');\nlet customer = flow.get('customer');\nlet deliveryTo = flow.get('deliveryTo');\nlet shippingDate = flow.get('shippingDate');\nlet enteredDate = flow.get('enteredDate');\n\nvar deleteQuery = \"DELETE FROM shippingheader WHERE workingday = '\" + workingDate + \"' AND customer = '\" + customer + \"' AND deliveryto = '\" + deliveryTo + \"' AND shippingdate = '\" + shippingDate+\"'\";\nmsg.topic = deleteQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1780,
        "wires": [
            [
                "cf6af978a2623172"
            ]
        ]
    },
    {
        "id": "727463b2cbced7ac",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT A.shippingdate,  A.customer,  A.deliveryto,  A.workingday,  A.workername,  A.注文件数, B.出荷準備完了件数 FROM (SELECT shippingdate, customer, deliveryto, workingday, workername, COUNT(*) AS 注文件数 FROM shipping GROUP BY  shippingdate,  customer,  deliveryto, workingday,  workername) A LEFT JOIN (SELECT shippingdate, customer, deliveryto,  workingday, workername, COUNT(*) AS 出荷準備完了件数 FROM shipping WHERE status = 2 GROUP BY shippingdate, customer, deliveryto, workingday,  workername) B ON A.shippingdate = B.shippingdate  AND A.customer = B.customer  AND A.deliveryto = B.deliveryto  AND A.workingday = B.workingday AND A.workername = B.workername;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1860,
        "wires": [
            [
                "0ed433897b82c0ef"
            ]
        ]
    },
    {
        "id": "0ed433897b82c0ef",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1860,
        "wires": [
            [
                "e67dba6fa8aaefd4"
            ]
        ]
    },
    {
        "id": "8cad2785ed5aa86f",
        "type": "link in",
        "z": "6e800843b8042cf7",
        "name": "update shipping",
        "links": [],
        "x": 405,
        "y": 1620,
        "wires": [
            [
                "8fd0e05bfd6f10ff"
            ]
        ]
    },
    {
        "id": "8fd0e05bfd6f10ff",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shipping",
        "func": "\nvar records = msg.payload.tableData; \nrecords.forEach(function (record) {\n    record.column13 = record.column13.replace(/\\//g, '-');\n    record.column6 = (record.column6 !== null && record.column6 !== undefined) ? record.column6.toString() : '';\n    record.column7 = (record.column7 !== null && record.column7 !== undefined) ? record.column7.toString() : '';\n});\n\n\nvar deleteQueries = [];\n\nmsg.payload.tableData.forEach(function (record, index) {\n\n    var deleteQuery = \"UPDATE shipping SET shippingdate = '\" + msg.payload.textFields.enteredDate +\"' WHERE cipsnumber = '\" + record.column14 + \"'\";\n    deleteQueries.push(deleteQuery);\n});\n\nmsg.payload = deleteQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1620,
        "wires": [
            [
                "a0f13d55c3e13fa3"
            ]
        ]
    },
    {
        "id": "a0f13d55c3e13fa3",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1620,
        "wires": [
            [
                "2053207420ba68cc"
            ]
        ]
    },
    {
        "id": "2053207420ba68cc",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1620,
        "wires": [
            [
                "f58cc8807e4c49bc"
            ]
        ]
    },
    {
        "id": "f58cc8807e4c49bc",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1620,
        "wires": [
            [
                "8deb289012180ea0"
            ]
        ]
    },
    {
        "id": "8deb289012180ea0",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 1620,
        "wires": [
            [
                "97a9dee4cc44a1d3"
            ]
        ]
    },
    {
        "id": "97a9dee4cc44a1d3",
        "type": "link out",
        "z": "6e800843b8042cf7",
        "name": "link out 9",
        "mode": "return",
        "links": [],
        "x": 1215,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2d97b60d22e2490a",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "8cad2785ed5aa86f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "c7799bfd135239d9"
            ]
        ]
    },
    {
        "id": "d5c496f0f7e6ea51",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "8cad2785ed5aa86f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 420,
        "y": 1960,
        "wires": [
            [
                "b8be51e4b5dcf0ce"
            ]
        ]
    },
    {
        "id": "b8be51e4b5dcf0ce",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "488e8f0af0a42e13"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 640,
        "y": 1960,
        "wires": [
            [
                "7f6ce72b12618ab9"
            ]
        ]
    },
    {
        "id": "7f6ce72b12618ab9",
        "type": "switch",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 2020,
        "wires": [
            [
                "384d0bdca0484ead"
            ],
            [
                "fd7506d6cee25498"
            ]
        ],
        "info": "検索したshippingheaderにデータが\r\n無ければつくる。"
    },
    {
        "id": "7aa032014c5ab965",
        "type": "link in",
        "z": "6e800843b8042cf7",
        "name": "update shippingheader",
        "links": [],
        "x": 365,
        "y": 1660,
        "wires": [
            [
                "6b0af2756680d221"
            ]
        ]
    },
    {
        "id": "6b0af2756680d221",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "Build update shippingheader",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n\n    var readyQuantity = record.出荷準備完了件数 == null ? 0 : record.出荷準備完了件数;\n    var orderQuantity = record.注文件数 == null ? 0 : record.注文件数;\n\n    var workingday = formatDateTime(record.workingday);\n    var shippingDate =  formatDate(record.shippingdate);\n\n    var updateQuery = \"UPDATE shippingheader SET readyquantity = '\" + readyQuantity + \"', orderquantity = '\" + orderQuantity + \"'  WHERE workingday = '\" + workingday + \"' AND deliveryto = '\" + record.deliveryto + \"' AND shippingdate = '\" + shippingDate + \"' AND customer = '\" + record.customer + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1660,
        "wires": [
            [
                "69a9c337c4d92248"
            ]
        ]
    },
    {
        "id": "69a9c337c4d92248",
        "type": "split",
        "z": "6e800843b8042cf7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 1660,
        "wires": [
            [
                "7d6ea74bdd91f80c"
            ]
        ]
    },
    {
        "id": "7d6ea74bdd91f80c",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1660,
        "wires": [
            [
                "0757192816fa94f3"
            ]
        ]
    },
    {
        "id": "0757192816fa94f3",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 1660,
        "wires": [
            [
                "22e5bbeb69cca3a5"
            ]
        ]
    },
    {
        "id": "22e5bbeb69cca3a5",
        "type": "join",
        "z": "6e800843b8042cf7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 1660,
        "wires": [
            [
                "66cd232936c72c93"
            ]
        ]
    },
    {
        "id": "66cd232936c72c93",
        "type": "link out",
        "z": "6e800843b8042cf7",
        "name": "link out 10",
        "mode": "return",
        "links": [],
        "x": 1215,
        "y": 1660,
        "wires": []
    },
    {
        "id": "e67dba6fa8aaefd4",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "7aa032014c5ab965"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 820,
        "y": 1900,
        "wires": [
            [
                "f729dbbfacc261ba"
            ]
        ]
    },
    {
        "id": "fd51bc43592984c0",
        "type": "link call",
        "z": "6e800843b8042cf7",
        "name": "",
        "links": [
            "7aa032014c5ab965"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 820,
        "y": 2080,
        "wires": [
            [
                "f729dbbfacc261ba"
            ]
        ]
    },
    {
        "id": "50965bfc4c30cca7",
        "type": "change",
        "z": "6e800843b8042cf7",
        "name": "select*from shipping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT customer AS 客先名, shippingdate AS 出荷日, deliveryto AS 出庫先, productnumber AS 品番, ordernumber AS オーダー番号, quantity AS 受注数, customerdate AS 客先納期 FROM shipping WHERE workingday = 'Workingday' AND shippingdate = 'Shippingdate' AND customer ='Customer' AND deliveryto = 'Deliveryto' AND groupname='Groupname';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Groupname",
                "fromt": "str",
                "to": "payload.groupName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "d2787f6cb3f5cae0",
        "type": "mysql",
        "z": "6e800843b8042cf7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1860,
        "y": 700,
        "wires": [
            [
                "f55c7843e2e2fc7d"
            ]
        ]
    },
    {
        "id": "f55c7843e2e2fc7d",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1990,
        "y": 700,
        "wires": [
            [
                "a49353dd33f70888"
            ]
        ]
    },
    {
        "id": "a49353dd33f70888",
        "type": "csv",
        "z": "6e800843b8042cf7",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2110,
        "y": 700,
        "wires": [
            [
                "89b4c004727de0e4"
            ]
        ]
    },
    {
        "id": "f660ec811919dd32",
        "type": "websocket in",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "52c14b0459bc694f",
        "client": "",
        "x": 1260,
        "y": 700,
        "wires": [
            [
                "1d17a4bafc4bae6d"
            ]
        ]
    },
    {
        "id": "89b4c004727de0e4",
        "type": "websocket out",
        "z": "6e800843b8042cf7",
        "name": "",
        "server": "52c14b0459bc694f",
        "client": "",
        "x": 2280,
        "y": 700,
        "wires": []
    },
    {
        "id": "1d17a4bafc4bae6d",
        "type": "json",
        "z": "6e800843b8042cf7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1430,
        "y": 700,
        "wires": [
            [
                "f6404cce49273696"
            ]
        ]
    },
    {
        "id": "f6404cce49273696",
        "type": "function",
        "z": "6e800843b8042cf7",
        "name": "SELECT * FROM shippingheader",
        "func": "var baseQuery = `\nSELECT customer AS 客先名,DATE_FORMAT(shippingdate, '%Y-%m-%d') AS 出荷日,deliveryto AS 出庫先,\n       productnumber AS 品番,ordernumber AS オーダー番号,\n       quantity AS 受注数,DATE_FORMAT(customerdate, '%Y-%m-%d') AS 客先納期        \nFROM shipping\nWHERE workingday = '${msg.payload.workingday}'\nAND shippingdate = '${msg.payload.shippingDate}'\nAND customer = '${msg.payload.customer}'\n`;\n                      \n//動的に追加する条件\nif (msg.payload.deliveryto != ''){\n    baseQuery += ` AND deliveryto = '${msg.payload.deliveryto}'`;\n}\n    \nif (msg.payload.groupName != '全て'){\n    baseQuery += ` AND groupname = '${msg.payload.groupName}'`;\n}\n\nmsg.topic = baseQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 700,
        "wires": [
            [
                "d2787f6cb3f5cae0"
            ]
        ]
    },
    {
        "id": "40e5b05d00416e2f",
        "type": "websocket out",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "63be7dd91989552b",
        "client": "",
        "x": 1800,
        "y": 200,
        "wires": []
    },
    {
        "id": "8f5aa727eb2e433f",
        "type": "websocket out",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "e047175b1b715e41",
        "client": "",
        "x": 1540,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f214b7185d29394b",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "select*from warehousing where workingday and productnumber and location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT id, workingday, location, category, productnumber, quantity, cast(serialnumber as char) as serialnumber, workername FROM warehousing WHERE CAST(workingday AS DATE) >= 'startDate'   AND CAST(workingday AS DATE) <= 'endDate'   AND productnumber = 'productNumber'   AND location = 'Location';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 120,
        "wires": [
            [
                "9a7a5dbbdd9b74d6"
            ]
        ]
    },
    {
        "id": "91a4aeb557de2a2e",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "select*from warehousing where workingday and productnumber",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT id, workingday, location, category, productnumber, quantity, cast(serialnumber as char) as serialnumber, workername  FROM warehousing WHERE CAST(workingday AS DATE) >= 'startDate'   AND CAST(workingday AS DATE) <= 'endDate'   AND productnumber = 'productNumber';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "9a7a5dbbdd9b74d6"
            ]
        ]
    },
    {
        "id": "d6263d3ebdb3c32b",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "select*from warehousing where workingday and location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT id, workingday, location, category, productnumber, quantity, cast(serialnumber as char) as serialnumber, workername FROM warehousing WHERE CAST(workingday AS DATE) >= 'startDate'   AND CAST(workingday AS DATE) <= 'endDate'  AND location = 'Location';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "9a7a5dbbdd9b74d6"
            ]
        ]
    },
    {
        "id": "4fa3ec4a9cf051f3",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "select*from warehousing where workingday",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT id, workingday, location, category, productnumber, quantity, cast(serialnumber as char) as serialnumber, workername FROM warehousing WHERE CAST(workingday AS DATE) >= 'startDate' AND CAST(workingday AS DATE) <= 'endDate' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 240,
        "wires": [
            [
                "9a7a5dbbdd9b74d6"
            ]
        ]
    },
    {
        "id": "c367e54cff999691",
        "type": "http response",
        "z": "79cb1d1dae22282f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "66f968ee575942ce",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">入出庫移動履歴<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">入出庫移動履歴</h1>\n        <button class=\"btn btn-success ms-3\" id=\"product-infor\" onclick=\"saveFormDataAndRedirect(this.id)\">品番を読込</button>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\">\n        <div class=\"info\">\n          \n          <label for=\"location\"  class=\"col-6 col-form-label fs-5\">ｽﾄｯｸ置場所：</label>\n          <div class=\"col-10\">\n              <select id=\"location\" name=\"location\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                \n                {{#choices}}\n                <option>{{.}}</option>\n                {{/choices}}\n\n              </select>\n          </div>\n          \n          <div class=\"col-10\">\n            <label for=\"product-number\" class=\"col col-2 col-form-label fs-5\">品番：</label>\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\" placeholder=\"(※完全一致)\">\n          </div>\n          <div class=\"date-range mt-3\">\n            <label for=\"product-number\" class=\"col col-6 col-form-label fs-5\">入出庫移動日：</label>\n            <div class=\"border p-2\">\n              <div class=\"d-flex align-items-center\">\n                <input type=\"date\" class=\"form-control\" id=\"start-date\" name=\"start-date\">\n                <span class=\"mx-2\">から</span>\n                <input type=\"date\" class=\"form-control\" id=\"end-date\" name=\"end-date\">\n                <span class=\"ms-2\">まで</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-12 mt-3\">\n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"検索条件クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n\n        </div>  \n      </form>\n\n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6 id-column\">id</th>\n              <th scope=\"col\" class=\"fs-6\">入庫日</th>\n              <th scope=\"col\" class=\"fs-6\">ｽﾄｯｸ置場所</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">数量</th>\n              <th scope=\"col\" class=\"fs-6\">製造番号</th>\n              <th scope=\"col\" class=\"fs-6 id-column\">作業者</th>\n            </tr> \n          </thead>\n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>  \n    </div> \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script> \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "c367e54cff999691"
            ]
        ]
    },
    {
        "id": "2b019c18d66ef69e",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#mytable thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "66f968ee575942ce"
            ]
        ]
    },
    {
        "id": "4f24b744689d02e1",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    let productNumber = document.getElementById(\"product-number\").value;\n    let location = document.getElementById(\"location\").value;\n    let selectedButton = buttonId;\n    let currentPageURL = window.location.href;\n\n    sessionStorage.setItem('productNumber', productNumber);\n    sessionStorage.setItem('location', location);\n    sessionStorage.setItem('selectedButton', selectedButton);\n    sessionStorage.setItem('currentPageURL', currentPageURL);\n\n    window.location.href = '/qr-reader';\n}\n\nfunction setTodaysDate() {\n\n    let startdate = document.getElementById(\"start-date\");\n    let enddate = document.getElementById(\"end-date\");\n\n    // 現在のUTC日付を取得\n    let currentDate = new Date();\n    // 日付フォーマット（YYYY-MM-DD）に変換\n    let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n    \n\n    // 日付入力フィールドに設定\n    startdate.value = formattedDate;\n    enddate.value = formattedDate;\n}\n\nwindow.onload = function () {\n    setTodaysDate();\n};\n\nfunction clearForm() {\n    \n    document.getElementById(\"location\").value = \"\";\n    document.getElementById(\"product-number\").value = \"\";\n    setTodaysDate();    \n}\n\nfunction formatDateTime(dateTimeString) {\n    // データベースから取得した日時のフォーマットに合わせて変換を行う\n    var dbDateTime = new Date(dateTimeString);\n\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // セッションストレージからQRコードの読み取り情報を取得\n    const qrData = sessionStorage.getItem('qrData');\n    const storedSelectedButton = sessionStorage.getItem('selectedButton')\n\n    if (qrData) {\n\n        if (storedSelectedButton === 'product-infor') {\n\n            let locationValue = sessionStorage.getItem('location')\n\n            if (locationValue.trim() !== '') {\n\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            // qrDataを元のページで処理\n            console.log('QRコードの読み取り情報:', qrData);\n\n            let array = qrData.split(\",\");\n            document.getElementById(\"product-number\").value = array[0];\n\n        } else if (storedSelectedButton === 'stock-storage') {\n\n            let productValue = sessionStorage.getItem('productNumber')\n\n            if (productValue.trim() !== '') {\n                document.getElementById(\"product-number\").value = productValue;\n            }\n\n            let array = qrData.split(\",\");\n            let locationValue = array[0];\n\n            let locationSelect = document.getElementById(\"location\");\n            for (let i = 0; i < locationSelect.options.length; i++) {\n                if (locationSelect.options[i].value === locationValue) {\n                    locationSelect.selectedIndex = i;\n                    break;\n                }\n            }\n        }\n\n    } else {\n        // セッションストレージにQRコードの読み取り情報がない場合の処理\n        console.log('セッションストレージにQRコードの読み取り情報がありません。');\n    }\n\n    let searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        let productNumber = document.getElementById(\"product-number\").value;\n        let location = document.getElementById(\"location\").value;\n        let startDate = document.getElementById(\"start-date\").value;\n        let endDate = document.getElementById(\"end-date\").value;\n\n        sendDataToNodeRED(productNumber,location,startDate,endDate);\n    });\n\n    function sendDataToNodeRED(productNumber, location, startDate, endDate) {\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/log`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                selectedAction: 'search',\n                productNumber: productNumber,\n                location: location,\n                startDate: startDate,\n                endDate: endDate\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onerror = function (event) {\n            console.error(\"WebSocketエラー:\", event);\n        };\n\n        socket.onmessage = function (event) {\n            var responseData = JSON.parse(event.data);\n            displayDataInTable(responseData);\n            socket.close();\n        };\n\n        socket.onclose = function (event) {\n            console.log(\"Socket connection closed.\");\n        };\n    }\n\n});\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"table-body\");\n\n    // テーブルのtbody要素をクリア\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        if (item.stock === \"在庫なし\") {\n            row.style.backgroundColor = \"#d3d3d3\";  // 薄いグレー\n        }\n        \n        let cell1 = row.insertCell(0);\n        let cell2 = row.insertCell(1);\n        let cell3 = row.insertCell(2);\n        let cell4 = row.insertCell(3);\n        let cell5 = row.insertCell(4);\n        let cell6 = row.insertCell(5);\n        let cell7 = row.insertCell(6);\n        let cell8 = row.insertCell(7);\n\n        cell1.innerHTML = item.id;\n        cell1.style.display = \"none\";\n        cell2.innerHTML = formatDateTime(item.workingday);\n        cell3.innerHTML = item.location;\n        cell4.innerHTML = item.category;\n        cell5.innerHTML = item.productnumber;\n        cell6.innerHTML = item.quantity;\n        cell7.innerHTML = item.serialnumber\n        cell8.innerHTML = item.workername;\n        cell8.style.display = \"none\";\n    });\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let table = document.getElementById(\"mytable\");\n    table.addEventListener(\"click\", function (event) {\n        // クリックされた行を取得\n        const clickedRow = event.target.closest(\"tr\");\n        \n        if (clickedRow) {\n\n            let id = clickedRow.cells[0].textContent.trim();\n            let workingday = clickedRow.cells[1].textContent.trim();\n            let location = clickedRow.cells[2].textContent.trim();\n            let category = clickedRow.cells[3].textContent.trim();\n            let productnumber = clickedRow.cells[4].textContent.trim();\n            let quantity = clickedRow.cells[5].textContent.trim();\n            let serialnumber = clickedRow.cells[6].textContent.trim();\n            let workername = clickedRow.cells[7].textContent.trim();\n\n            let encodedid = encodeURIComponent(id);\n            let encodedworkingday = encodeURIComponent(workingday);\n            let encodedLocation = encodeURIComponent(location);\n            let encodedCategory = encodeURIComponent(category);\n            let encodedProductNumber = encodeURIComponent(productnumber);\n            let encodedquantity = encodeURIComponent(quantity);\n            let encodedSerialNumber = encodeURIComponent(serialnumber);\n            let encodedworkername = encodeURIComponent(workername);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page4-1\" +\n                \"?id=\" + encodedid +\n                \"&workingday=\" + encodedworkingday +\n                \"&location=\" + encodedLocation +\n                \"&category=\" + encodedCategory +\n                \"&productnumber=\" + encodedProductNumber +\n                \"&quantity=\" + encodedquantity +\n                \"&serialnumber=\" + encodedSerialNumber+\n                \"&workername=\" + encodedworkername;\n\n            window.location.href = destinationURL;\n        }    \n    });\n});\n\n       ",
        "output": "str",
        "x": 680,
        "y": 60,
        "wires": [
            [
                "2b019c18d66ef69e"
            ]
        ]
    },
    {
        "id": "d407af48c2990658",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "4f24b744689d02e1"
            ]
        ]
    },
    {
        "id": "1c05cfe32e217fc8",
        "type": "file in",
        "z": "79cb1d1dae22282f",
        "name": "ストック置場所読込",
        "filename": "/home/kuwata/ktrg/棚番.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "d407af48c2990658"
            ]
        ]
    },
    {
        "id": "3e1ab2dfb73f8934",
        "type": "http in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "url": "/page4",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "1c05cfe32e217fc8"
            ]
        ]
    },
    {
        "id": "b4b546feac544cb6",
        "type": "websocket in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "63be7dd91989552b",
        "client": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "8e1fd3f4158755e7"
            ]
        ]
    },
    {
        "id": "8e1fd3f4158755e7",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "eb476d7210e54ff6"
            ]
        ]
    },
    {
        "id": "eb476d7210e54ff6",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "条件分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "0ead2531e38e9180"
            ],
            [
                "23bf087afde27cf0"
            ]
        ]
    },
    {
        "id": "0ead2531e38e9180",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "f214b7185d29394b"
            ],
            [
                "91a4aeb557de2a2e"
            ]
        ]
    },
    {
        "id": "23bf087afde27cf0",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "d6263d3ebdb3c32b"
            ],
            [
                "4fa3ec4a9cf051f3"
            ]
        ]
    },
    {
        "id": "9a7a5dbbdd9b74d6",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1260,
        "y": 200,
        "wires": [
            [
                "0bd1e008681fcffc"
            ]
        ]
    },
    {
        "id": "6f46cbc104d115c3",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1670,
        "y": 200,
        "wires": [
            [
                "40e5b05d00416e2f"
            ]
        ]
    },
    {
        "id": "fe10252d5161508d",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴へ戻る</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <div class=\"col-2\">\n          <h1 class=\"pb-2 mb-0 me-3\" id=\"title\">在庫管理表</h1>\n        </div>  \n\n        <div class=\"col-2 offset-md-9\">\n          <button type=\"button\" class=\"btn btn-secondary\" id=\"admin\">管理者モード</button>\n        </div>  \n        \n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-8 mt-3\">\n          <label for=\"product-number\" class=\"col col-sm col-form-label fs-5\">品番：</label>\n          <div class=\"col\">\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\" readonly>\n          </div>  \n        </div>\n        <div class=\"col-sm-4 mt-3\">\n          <label for=\"category\" class=\"col col-sm col-form-label fs-5\">ものの区分：</label>\n          <div class=\"col\">\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"category\" name=\"category\" readonly>\n          </div>  \n        </div>\n        <div class=\"col-sm-6 mt-3\">\n          <label for=\"location\" class=\"col col-sm col-form-label fs-5\">ｽﾄｯｸ置場所：</label>\n          <div class=\"col\">\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"location\" name=\"location\" readonly>\n          </div>  \n        </div>  \n        <div class=\"col-sm-6 mt-3\">\n          <label for=\"serial-number\" class=\"col col-sm col-form-label fs-5\">製造番号：</label>\n          <div class=\"col\">\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"serial-number\" name=\"serial-number\" readonly>\n          </div> \n        </div> \n\n      </div>\n      \n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-bordered table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6 id-column\">id</th>\n              <th scope=\"col\" class=\"fs-6\">日付</th>\n              <th scope=\"col\" class=\"fs-6\">入庫</th>\n              <th scope=\"col\" class=\"fs-6\">出庫</th>\n              <th scope=\"col\" class=\"fs-6\">在庫</th>\n              <th scope=\"col\" class=\"fs-6\">備考</th>\n              <th scope=\"col\" class=\"fs-6\">作業者</th>\n            </tr> \n          </thead>\n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>  \n\n      <!-- ポップアップメニュー -->\n      <div id=\"popup-menu\" class=\"popup-menu\">\n        <ul>\n          <li><a href=\"#\" id=\"delete-action\">削除</a></li>\n        </ul>\n      </div>\n\n      <div id=\"popup-menu2\" class=\"popup-menu\">\n        <ul>\n          <li><a href=\"#\" id=\"edit-action\">変更</a></li>\n        </ul>\n      </div>\n\n      <div id=\"popup-menu3\" class=\"popup-menu\">\n        <ul>\n          <li><a href=\"#\" id=\"edit-action2\">変更</a></li>\n        </ul>\n      </div>\n      \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 550,
        "y": 640,
        "wires": [
            [
                "5a2b208f2f6475a3"
            ]
        ]
    },
    {
        "id": "5a2b208f2f6475a3",
        "type": "http response",
        "z": "79cb1d1dae22282f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 640,
        "wires": []
    },
    {
        "id": "a49f094dd59ddaec",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\n.table-container {\n    max-height: 600px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n.table-container thead {\n    white-space: nowrap;\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n/* CSSスタイル（ポップアップメニューを非表示に） */\n.popup-menu {\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.popup-menu ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n.popup-menu ul li {\n    padding: 10px;\n    text-align: center;\n}\n\n.popup-menu ul li:hover {\n    background-color: #f0f0f0;\n    cursor: pointer;\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 430,
        "y": 640,
        "wires": [
            [
                "fe10252d5161508d"
            ]
        ]
    },
    {
        "id": "fe77d543054e4a68",
        "type": "http in",
        "z": "79cb1d1dae22282f",
        "name": "在庫管理表",
        "url": "/page4-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "52b2a54932bc9cf3"
            ]
        ]
    },
    {
        "id": "52b2a54932bc9cf3",
        "type": "template",
        "z": "79cb1d1dae22282f",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function formatDateTime(dateTimeString) {\n\n    let dbDateTime = new Date(dateTimeString);\n\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    let formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction getQueryParameter(name) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\nfunction sendDataToNodeRED() {\n\n    let id = getQueryParameter(\"id\");\n    \n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/history-extraction`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: 'search',\n            id: id,\n            \n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction displayDataInTable(data) {\n\n    let id = getQueryParameter(\"id\");\n    let workingday = getQueryParameter(\"workingday\");\n    let quantity = getQueryParameter(\"quantity\");\n    let workerName = getQueryParameter(\"workername\");\n\n    //テーブルの1行目に入庫情報を記入\n    let tableBody = document.getElementById(\"table-body\");\n\n    tableBody.innerHTML = \"\";\n    let row = tableBody.insertRow();\n    let cell1 = row.insertCell(0);\n    let cell2 = row.insertCell(1);\n    let cell3 = row.insertCell(2);\n    let cell4 = row.insertCell(3);\n    let cell5 = row.insertCell(4);\n    let cell6 = row.insertCell(5);\n    let cell7 = row.insertCell(6);\n\n    cell1.innerHTML = id;\n    cell1.style.display = \"none\";\n\n    cell2.innerHTML = workingday;\n    cell3.innerHTML = quantity;\n    cell4.innerHTML = \"\";\n    cell5.innerHTML = quantity;\n    cell6.innerHTML = \"\";\n    cell7.innerHTML = workerName;\n\n    let index = 1;\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);\n        let cell2 = row.insertCell(1);\n        let cell3 = row.insertCell(2);\n        let cell4 = row.insertCell(3);\n        let cell5 = row.insertCell(4);\n        let cell6 = row.insertCell(5);\n        let cell7 = row.insertCell(6);\n\n        cell1.innerHTML = item.id;\n        cell1.style.display = \"none\";\n        cell2.innerHTML = formatDateTime(item.workingday);\n        cell3.innerHTML = \"\";\n        cell4.innerHTML = item.quantity;\n        let prevRowCell5Value = parseFloat(tableBody.rows[index - 1].cells[4].innerHTML);\n        let currentRowCell4Value = parseFloat(item.quantity);\n        cell5.innerHTML = prevRowCell5Value - currentRowCell4Value;\n        cell6.innerHTML = item.goto;\n        cell7.innerHTML = item.workername;\n\n        index++;\n    });\n}    \n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // クエリパラメータを取得\n    let productNumber = getQueryParameter(\"productnumber\");\n    let category = getQueryParameter(\"category\");\n    let location = getQueryParameter(\"location\");\n    let serialNumber = getQueryParameter(\"serialnumber\");\n    \n    document.getElementById(\"product-number\").value = productNumber;\n    document.getElementById(\"category\").value = category;\n    document.getElementById(\"location\").value = location;\n    document.getElementById(\"serial-number\").value = serialNumber;\n    \n    sendDataToNodeRED();\n\n\n    document.getElementById(\"admin\").addEventListener(\"click\", function () {\n        // パスワードの入力をアラートで求める\n        let enteredPassword = prompt(\"管理者パスワードを入力してください:\");\n\n        // ここで入力されたパスワードを取得し、必要な認証処理を行う\n        let today = new Date();\n        let year = today.getFullYear();\n        let month = (today.getMonth() + 1).toString().padStart(2, '0');\n        let day = today.getDate().toString().padStart(2, '0');\n        let currentDate = `${year}${month}${day}`;\n\n\n        // 例: パスワードが \"admin\" の場合にだけ認証成功とみなす\n        if (enteredPassword === currentDate) {\n\n            // 要素を取得する\n            let titleElement = document.getElementById(\"title\");\n\n            // スタイルを変更する\n            titleElement.style.color = \"red\";\n\n\n            //ポップメニュー\n            let popupMenu = document.getElementById(\"popup-menu\");\n            let popupMenu2 = document.getElementById(\"popup-menu2\");\n            let popupMenu3 = document.getElementById(\"popup-menu3\");\n            let selectedCell = null;\n\n            let tableBody = document.getElementById(\"table-body\");\n\n            // セルをクリックしたときの処理\n            tableBody.addEventListener(\"click\", function (event) {\n\n                let lastRowIndex = tableBody.rows.length;\n                console.log(lastRowIndex);\n\n                let clickedCell = event.target;\n                let columnIndex = clickedCell.cellIndex; // クリックされたセルの列インデックスを取得\n\n\n                if (columnIndex === 2 && clickedCell.parentNode.rowIndex === 1 || columnIndex === 3 && clickedCell.parentNode.rowIndex !== 1) { // 入庫または出庫列の場合のみ\n\n                    // クリックされたセルを記録\n                    selectedCell = clickedCell;\n\n                    // ポップアップメニューを表示\n                    let x = event.clientX;\n                    let y = event.clientY;\n                    popupMenu.style.left = x + \"px\";\n                    popupMenu.style.top = y + \"px\";\n                    popupMenu.style.display = \"block\";\n                    popupMenu2.style.display = \"none\";\n                    popupMenu3.style.display = \"none\";\n\n                } else if (columnIndex === 4 && clickedCell.parentNode.rowIndex === lastRowIndex) { // 在庫列かつ最終行のみ\n\n                    // クリックされたセルを記録\n                    selectedCell = clickedCell;\n\n                    // ポップアップメニューを表示\n                    let x = event.clientX;\n                    let y = event.clientY;\n                    popupMenu2.style.left = x + \"px\";\n                    popupMenu2.style.top = y + \"px\";\n                    popupMenu2.style.display = \"block\";\n                    popupMenu.style.display = \"none\";\n                    popupMenu3.style.display = \"none\";\n\n                } else if (columnIndex === 5 && clickedCell.parentNode.rowIndex !== 1) { // 備考\n\n                    // クリックされたセルを記録\n                    selectedCell = clickedCell;\n\n                    // ポップアップメニューを表示\n                    let x = event.clientX;\n                    let y = event.clientY;\n                    popupMenu3.style.left = x + \"px\";\n                    popupMenu3.style.top = y + \"px\";\n                    popupMenu3.style.display = \"block\";\n                    popupMenu.style.display = \"none\";\n                    popupMenu2.style.display = \"none\";\n\n                } else {\n\n                    popupMenu.style.display = \"none\";\n                    popupMenu2.style.display = \"none\";\n                    popupMenu3.style.display = \"none\";\n\n                }\n\n                // テーブルの最後の行にアクセス\n                let lastRow = tableBody.rows[tableBody.rows.length - 1];\n\n                // 最後の行のセルから在庫を取得\n                let lastStockCell = lastRow.cells[4];\n                let lastStockValue = lastStockCell.textContent;\n                let lastQuanitityinStock = parseInt(lastStockValue, 10);\n\n                // 現在の日時を表す Date オブジェクトを作成\n                let currentDate = new Date();\n                // 年、月、日を取得\n                let year = currentDate.getFullYear();\n                let month = currentDate.getMonth() + 1; // 0から始まるため、1を加えて補正\n                let day = currentDate.getDate();\n\n                // 出力例: YYYY-MM-DD の形式で表示\n                let formattedDate = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n\n\n                // 削除アクションを選択したときの処理\n                document.getElementById(\"delete-action\").addEventListener(\"click\", function () {\n\n                    if (selectedCell) {\n                        // 選択された行を取得\n                        let selectedRow = selectedCell.parentElement;\n                        // クリックされたセルの親行を取得\n                        let clickedRow = selectedCell.parentNode;\n                        // クリックされた行のインデックスを取得\n                        let rowIndex = clickedRow.rowIndex;\n\n                        // idを取得\n                        let idCell = selectedRow.cells[0];\n                        let idValue = idCell.textContent;\n\n                        // 作業日を取得\n                        let workingdayCell = selectedRow.cells[1];\n                        let workingdayValue = workingdayCell.textContent;\n\n                        // 出庫を取得\n                        let issueCell = selectedRow.cells[3];\n                        let issueValue = issueCell.textContent;\n                        let quanitityIssued = parseInt(issueValue, 10);\n\n                        // 入庫列または出庫列がクリックされた場合\n                        if ((rowIndex === 1 && !confirm(\"表示されているﾃﾞｰﾀも全て削除されます。ﾃﾞｰﾀを削除してよろしいでしょうか。\"))\n                            || (rowIndex !== 1 && !confirm(\"ﾃﾞｰﾀを削除してよろしいでしょうか。\"))) {\n                            popupMenu.style.display = \"none\";\n                            selectedCell = null;\n                            // 処理を中止\n                            return;\n                        }\n\n                        if (rowIndex === 1) { // 入庫列の削除が選択された場合、すべての行を削除\n                            while (tableBody.firstChild) {\n\n                                tableBody.removeChild(tableBody.firstChild);\n                            }\n\n                        }\n\n                        const hostname = window.location.hostname;\n                        let socket = new WebSocket(`wss://${hostname}/delete-action`);\n\n                        socket.onopen = function (event) {\n                            let requestData = {\n                                selectedAction: '削除',\n                                rowIndex: rowIndex,\n                                id: idValue,\n                                quanitityIssued: quanitityIssued,\n                                lastQuanitityinStock: lastQuanitityinStock,\n                                workingday: workingdayValue,\n                                formattedDate: formattedDate\n                            };\n                            socket.send(JSON.stringify(requestData));\n                        };\n\n                        socket.onmessage = function (event) {\n                            alert(\"処理しました。管理者モードを解除します。\")\n                            sendDataToNodeRED();\n                            socket.close();\n                            document.location.reload()\n                        };\n\n                    }\n                    popupMenu.style.display = \"none\"; // ポップアップメニューを非表示\n                    selectedCell = null;\n                });\n\n                // 変更アクションを選択したときの処理(在庫)\n                document.getElementById(\"edit-action\").addEventListener(\"click\", function () {\n\n                    if (selectedCell) {\n                        // 選択された行を取得\n                        let selectedRow = selectedCell.parentElement;\n                        // クリックされたセルの親行を取得\n                        let clickedRow = selectedCell.parentNode;\n                        // クリックされた行のインデックスを取得\n                        let rowIndex = clickedRow.rowIndex;\n\n                        // idを取得\n                        let idCell = selectedRow.cells[0];\n                        let idValue = idCell.textContent;\n                        let idQuanitity = parseInt(idValue, 10);\n\n                        // 作業日を取得\n                        let workingdayCell = selectedRow.cells[1];\n                        let workingdayValue = workingdayCell.textContent;\n\n                        // 在庫を取得\n                        let stockCell = selectedRow.cells[4];\n                        let stockValue = stockCell.textContent;\n                        let stockQuanitity = parseInt(stockValue, 10);\n\n                        if (!confirm(\"在庫を修正します。よろしいでしょうか。\")) {\n                            popupMenu2.style.display = \"none\";\n                            selectedCell = null;\n                            // 処理を中止\n                            return;\n                        }\n\n                        const currentValue = selectedCell.textContent;\n                        let newValue = prompt(\"変更後の数量を入力してください:\", currentValue);\n                        // 入力が空白または半角数字以外の場合は繰り返し入力を求める\n                        while (newValue === null || isNaN(newValue) || newValue === \"\") {\n                            newValue = prompt(\"半角数字で変更する数量を入力してください:\", currentValue);\n                        }\n\n                        let comment = prompt(\"変更理由を入力してください:\");\n\n                        // 入力された値を整数に変換\n                        let newQuanitity = parseInt(newValue, 10);\n\n                        let differenceQuantity = stockQuanitity - newQuanitity;\n\n                        const hostname = window.location.hostname;\n                        let socket = new WebSocket(`wss://${hostname}/edit-action`);\n\n                        let currentDate = new Date();\n                        let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n                        let formattedTime = currentDate.getHours().toString().padStart(2, '0') + ':' + currentDate.getMinutes().toString().padStart(2, '0') + ':' + currentDate.getSeconds().toString().padStart(2, '0');\n                        let datetimeValue = formattedDate + 'T' + formattedTime;\n\n                        let storedStaffName = sessionStorage.getItem('staffName');\n                        let storedStaffCode = sessionStorage.getItem('staffCode');\n\n                        socket.onopen = function (event) {\n                            let requestData = {\n                                selectedAction: '変更',\n                                rowIndex: rowIndex,\n                                id: idQuanitity,\n                                workingday: workingdayValue,\n                                currentDate: datetimeValue,\n                                formattedDate: formattedDate,\n                                stockQuanitity: stockQuanitity,\n                                newQuanitity: newQuanitity,\n                                differenceQuantity: differenceQuantity,\n                                comment: comment,\n                                productNumber: productNumber,\n                                category: category,\n                                location: location,\n                                serialNumber: serialNumber,\n                                storedStaffName: storedStaffName,\n                                storedStaffCode: storedStaffCode\n\n                            };\n                            socket.send(JSON.stringify(requestData));\n                        };\n\n                        socket.onmessage = function (event) {\n                            alert(\"処理しました。管理者モードを解除します。\")\n                            sendDataToNodeRED();\n                            socket.close();\n                            document.location.reload()\n                        };\n                    }\n                    popupMenu2.style.display = \"none\"; // ポップアップメニューを非表示\n                    selectedCell = null;\n                });\n\n                // 変更アクションを選択したときの処理(備考)\n                document.getElementById(\"edit-action2\").addEventListener(\"click\", function () {\n\n                    if (selectedCell) {\n                        // 選択された行を取得\n                        let selectedRow = selectedCell.parentElement;\n                        // クリックされたセルの親行を取得\n                        let clickedRow = selectedCell.parentNode;\n                        // クリックされた行のインデックスを取得\n                        let rowIndex = clickedRow.rowIndex;\n\n                        // idを取得\n                        let idCell = selectedRow.cells[0];\n                        let idValue = idCell.textContent;\n                        let idQuanitity = parseInt(idValue, 10);\n\n                        // 作業日を取得\n                        let workingdayCell = selectedRow.cells[1];\n                        let workingdayValue = workingdayCell.textContent;\n\n                        // 在庫を取得\n                        let stockCell = selectedRow.cells[4];\n                        let stockValue = stockCell.textContent;\n                        let stockQuanitity = parseInt(stockValue, 10);\n\n                        if (!confirm(\"備考を修正します。よろしいでしょうか。\")) {\n                            popupMenu3.style.display = \"none\";\n                            selectedCell = null;\n                            // 処理を中止\n                            return;\n                        }\n\n                        let comment = prompt(\"変更内容を入力してください:\");\n\n                        const hostname = window.location.hostname;\n                        let socket = new WebSocket(`wss://${hostname}/edit-action2`);\n\n                        let currentDate = new Date();\n                        let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n                        let formattedTime = currentDate.getHours().toString().padStart(2, '0') + ':' + currentDate.getMinutes().toString().padStart(2, '0') + ':' + currentDate.getSeconds().toString().padStart(2, '0');\n                        let datetimeValue = formattedDate + 'T' + formattedTime;\n\n                        let storedStaffName = sessionStorage.getItem('staffName');\n                        let storedStaffCode = sessionStorage.getItem('staffCode');\n\n                        socket.onopen = function (event) {\n                            let requestData = {\n                                selectedAction: '変更',\n                                rowIndex: rowIndex,\n                                id: idQuanitity,\n                                workingday: workingdayValue,\n                                currentDate: datetimeValue,\n                                formattedDate: formattedDate,\n                                stockQuanitity: stockQuanitity,\n                                comment: comment,\n                                productNumber: productNumber,\n                                category: category,\n                                location: location,\n                                serialNumber: serialNumber,\n                                storedStaffName: storedStaffName,\n                                storedStaffCode: storedStaffCode\n\n                            };\n                            socket.send(JSON.stringify(requestData));\n                        };\n\n                        socket.onmessage = function (event) {\n                            alert(\"処理しました。管理者モードを解除します。\")\n                            sendDataToNodeRED();\n                            socket.close();\n                            document.location.reload()\n                        };\n                    }\n                    popupMenu3.style.display = \"none\"; // ポップアップメニューを非表示\n                    selectedCell = null;\n                });\n            });\n\n        } else if (enteredPassword === null) {\n\n            return;\n\n        } else {\n            alert(\"認証失敗！正しいパスワードを入力してください。\");\n        }\n\n\n    });\n\n    \n\n});    \n    ",
        "output": "str",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "a49f094dd59ddaec"
            ]
        ]
    },
    {
        "id": "ef9a96e33eba1ff1",
        "type": "websocket in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "86a5928820d35da2",
        "client": "",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "0d9e6a47894c6749"
            ]
        ]
    },
    {
        "id": "0d9e6a47894c6749",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "6e72d360acfb496c"
            ]
        ]
    },
    {
        "id": "f6f56eca8d7e89a4",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 700,
        "wires": [
            [
                "a80f8247db731e05"
            ]
        ]
    },
    {
        "id": "a80f8247db731e05",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1370,
        "y": 700,
        "wires": [
            [
                "4795e1ac056474d0"
            ]
        ]
    },
    {
        "id": "4795e1ac056474d0",
        "type": "websocket out",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "86a5928820d35da2",
        "client": "",
        "x": 1560,
        "y": 700,
        "wires": []
    },
    {
        "id": "6e72d360acfb496c",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "select*from Issue where id",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM Issue WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 700,
        "wires": [
            [
                "f6f56eca8d7e89a4"
            ]
        ]
    },
    {
        "id": "4d5ff63488ef46a9",
        "type": "websocket in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "c0782716b9f95dfa",
        "client": "",
        "x": 150,
        "y": 860,
        "wires": [
            [
                "f8c4550c6de54cc6"
            ]
        ]
    },
    {
        "id": "f8c4550c6de54cc6",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 860,
        "wires": [
            [
                "c9085962fe212bcc"
            ]
        ]
    },
    {
        "id": "c9085962fe212bcc",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "条件分岐",
        "property": "payload.rowIndex",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 860,
        "wires": [
            [
                "46cb3f1de8b0aac4",
                "68f594f8034efe22",
                "a32021107fa6b01b"
            ],
            [
                "0eefae3813e5a3d4",
                "73b07e874bc27df0"
            ]
        ]
    },
    {
        "id": "68f594f8034efe22",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM Issue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM Issue WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "df3722860fc87a8f"
            ]
        ]
    },
    {
        "id": "46cb3f1de8b0aac4",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM warehousing",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM warehousing WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "df3722860fc87a8f"
            ]
        ]
    },
    {
        "id": "a32021107fa6b01b",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM stock WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 840,
        "wires": [
            [
                "df3722860fc87a8f"
            ]
        ]
    },
    {
        "id": "0eefae3813e5a3d4",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM Issue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM Issue WHERE id = ID AND workingday = 'Workingday';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 880,
        "wires": [
            [
                "b9eaf138e31b35c7"
            ]
        ]
    },
    {
        "id": "20f61139a6f58758",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "\n// Date オブジェクトに変換\nlet date1 = new Date(msg.payload.workingday);\nlet date2 = new Date(msg.payload.formattedDate);\n\n// 2つの日付が同じかどうかを比較\nlet areDatesEqual = date1.toDateString() === date2.toDateString();\n\nif (areDatesEqual) {\n    msg.dateConfirmationResults = \"同じ\";\n} else {\n    msg.dateConfirmationResults = \"違う\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1000,
        "wires": [
            [
                "9915cabf10c80cc1"
            ]
        ]
    },
    {
        "id": "6ff827bfa3d09e65",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "在庫数",
        "property": "payload.lastQuanitityinStock",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 960,
        "wires": [
            [
                "f7040741c2b32515"
            ],
            [
                "20f61139a6f58758"
            ]
        ]
    },
    {
        "id": "f7040741c2b32515",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stock SET quantity = quantity + Quantityissued WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantityissued",
                "fromt": "str",
                "to": "payload.quanitityIssued",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "9f33c428dffc46f9"
            ]
        ]
    },
    {
        "id": "9915cabf10c80cc1",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "今日の日付",
        "property": "dateConfirmationResults",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "同じ",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "違う",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "635a2e9d4ebb4ad1"
            ],
            [
                "4ab14a4ac7de35d2"
            ]
        ]
    },
    {
        "id": "635a2e9d4ebb4ad1",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stock SET quantity = quantity + Quantityissued WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantityissued",
                "fromt": "str",
                "to": "payload.quanitityIssued",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "42953e702c88e298"
            ]
        ]
    },
    {
        "id": "4ab14a4ac7de35d2",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stocklog SET quantity = quantity + Quantityissued  WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantityissued",
                "fromt": "str",
                "to": "payload.quanitityIssued",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1020,
        "wires": [
            [
                "1f1855a3f53e8204"
            ]
        ]
    },
    {
        "id": "1f1855a3f53e8204",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1020,
        "wires": [
            [
                "d73d61fdbd54508a"
            ]
        ]
    },
    {
        "id": "73b07e874bc27df0",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "var id = msg.payload.id;\n\n// データを変数に保存\nflow.set('id', id);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 960,
        "wires": [
            [
                "6ff827bfa3d09e65"
            ]
        ]
    },
    {
        "id": "d73d61fdbd54508a",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "msg.payload.id = flow.get('id');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1080,
        "wires": [
            [
                "e7c82653715e1a7b"
            ]
        ]
    },
    {
        "id": "e7c82653715e1a7b",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "INSERT INTO stock SELECT FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO stock SELECT * FROM stocklog WHERE  id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1080,
        "wires": [
            [
                "ea143b1d434f30a5"
            ]
        ]
    },
    {
        "id": "ea143b1d434f30a5",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1080,
        "wires": [
            [
                "c06819b8de0c11f5"
            ]
        ]
    },
    {
        "id": "3e6c8b844d4bd0dc",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM stocklog WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1140,
        "wires": [
            [
                "c46749ae0f88d76b"
            ]
        ]
    },
    {
        "id": "c06819b8de0c11f5",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "msg.payload.id = flow.get('id');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1140,
        "wires": [
            [
                "3e6c8b844d4bd0dc"
            ]
        ]
    },
    {
        "id": "b9eaf138e31b35c7",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "c46749ae0f88d76b",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1140,
        "wires": [
            [
                "f2bd8aaf638cb7f9"
            ]
        ]
    },
    {
        "id": "42953e702c88e298",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 980,
        "wires": [
            [
                "f2bd8aaf638cb7f9"
            ]
        ]
    },
    {
        "id": "9f33c428dffc46f9",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 940,
        "wires": [
            [
                "f2bd8aaf638cb7f9"
            ]
        ]
    },
    {
        "id": "df3722860fc87a8f",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "f2bd8aaf638cb7f9"
            ]
        ]
    },
    {
        "id": "f2bd8aaf638cb7f9",
        "type": "websocket out",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "c0782716b9f95dfa",
        "client": "",
        "x": 1550,
        "y": 960,
        "wires": []
    },
    {
        "id": "328dee42b66aa578",
        "type": "websocket in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "e047175b1b715e41",
        "client": "",
        "x": 140,
        "y": 1240,
        "wires": [
            [
                "3384411c8bdd8bd5"
            ]
        ]
    },
    {
        "id": "3384411c8bdd8bd5",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1240,
        "wires": [
            [
                "a3e0fd178e2124f4"
            ]
        ]
    },
    {
        "id": "a3e0fd178e2124f4",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "var id = msg.payload.id;\nvar productNumber = msg.payload.productNumber;\nvar category = msg.payload.category;\nvar location = msg.payload.location;\nvar serialNumber = msg.payload.serialNumber;\n\n\n// データを変数に保存\nflow.set('id', id);\nflow.set('productNumber', productNumber);\nflow.set('category', category);\nflow.set('location', location);\nflow.set('serialNumber', serialNumber);\n\n// Date オブジェクトに変換\nlet date1 = new Date(msg.payload.workingday);\nlet date2 = new Date(msg.payload.formattedDate);\n\n// 2つの日付が同じかどうかを比較\nlet areDatesEqual = date1.toDateString() === date2.toDateString();\n\nif (areDatesEqual) {\n    msg.dateConfirmationResults = \"同じ\";\n} else {\n    msg.dateConfirmationResults = \"違う\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1240,
        "wires": [
            [
                "bb634f569d41e6c9",
                "fd1b1fdc98162d0f"
            ]
        ]
    },
    {
        "id": "bb634f569d41e6c9",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "在庫数",
        "property": "payload.stockQuanitity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1240,
        "wires": [
            [
                "1649de295972b40e"
            ],
            [
                "aebc5e620e207823"
            ]
        ]
    },
    {
        "id": "1649de295972b40e",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stock SET quantity = newQuanitity WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "newQuanitity",
                "fromt": "str",
                "to": "payload.newQuanitity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1200,
        "wires": [
            [
                "16d1fec06e14fe79"
            ]
        ]
    },
    {
        "id": "aebc5e620e207823",
        "type": "switch",
        "z": "79cb1d1dae22282f",
        "name": "今日の日付",
        "property": "dateConfirmationResults",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "同じ",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "違う",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1260,
        "wires": [
            [
                "31870b6a042d433e"
            ],
            [
                "b370d228d526d237"
            ]
        ]
    },
    {
        "id": "31870b6a042d433e",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stock SET quantity = newQuanitity WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "newQuanitity",
                "fromt": "str",
                "to": "payload.newQuanitity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1240,
        "wires": [
            [
                "c367e2a5f05519fc"
            ]
        ]
    },
    {
        "id": "b370d228d526d237",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE stocklog SET quantity = newQuanitity WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "newQuanitity",
                "fromt": "str",
                "to": "payload.newQuanitity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1280,
        "wires": [
            [
                "892725ac5d010260"
            ]
        ]
    },
    {
        "id": "9964ab03919d5767",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "msg.payload.id = flow.get('id');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1320,
        "wires": [
            [
                "51b701ccddf55d86"
            ]
        ]
    },
    {
        "id": "51b701ccddf55d86",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "INSERT INTO stock SELECT FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO stock SELECT * FROM stocklog WHERE  id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1320,
        "wires": [
            [
                "bbb58af44ea63eeb"
            ]
        ]
    },
    {
        "id": "bbb58af44ea63eeb",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1320,
        "wires": [
            [
                "0bef99dff0611b53"
            ]
        ]
    },
    {
        "id": "0bef99dff0611b53",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "条件データ",
        "func": "msg.payload.id = flow.get('id');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1360,
        "wires": [
            [
                "d080c29b7da0bd9f"
            ]
        ]
    },
    {
        "id": "d080c29b7da0bd9f",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "DELETE FROM stocklog",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DELETE FROM stocklog WHERE id = ID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1360,
        "wires": [
            [
                "c88fd5a54430e468"
            ]
        ]
    },
    {
        "id": "c88fd5a54430e468",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1360,
        "wires": [
            [
                "8f5aa727eb2e433f"
            ]
        ]
    },
    {
        "id": "16d1fec06e14fe79",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1200,
        "wires": [
            [
                "8f5aa727eb2e433f"
            ]
        ]
    },
    {
        "id": "c367e2a5f05519fc",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1240,
        "wires": [
            [
                "8f5aa727eb2e433f"
            ]
        ]
    },
    {
        "id": "892725ac5d010260",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1280,
        "wires": [
            [
                "9964ab03919d5767"
            ]
        ]
    },
    {
        "id": "fd1b1fdc98162d0f",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "INSERT INTO Issue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO Issue (workingday, location, category, productnumber, quantity, serialnumber, workercode, workername, goto, id) values('Workingday','Location','Category','Productnumber','Quantity','Serialnumber','Workercode','Workername','Goto','ID');",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.currentDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Category",
                "fromt": "str",
                "to": "payload.category",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Productnumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Quantity",
                "fromt": "str",
                "to": "payload.differenceQuantity",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Serialnumber",
                "fromt": "str",
                "to": "payload.serialNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workercode",
                "fromt": "str",
                "to": "payload.storedStaffCode",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workername",
                "fromt": "str",
                "to": "payload.storedStaffName",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Goto",
                "fromt": "str",
                "to": "payload.comment",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1400,
        "wires": [
            [
                "a2dbe844ba220b62"
            ]
        ]
    },
    {
        "id": "a2dbe844ba220b62",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1400,
        "wires": [
            [
                "8f5aa727eb2e433f"
            ]
        ]
    },
    {
        "id": "6942b5b07705905c",
        "type": "websocket in",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "38bb0eb9fc4184e6",
        "client": "",
        "x": 140,
        "y": 1440,
        "wires": [
            [
                "1b9c7d01aed5d2d2"
            ]
        ]
    },
    {
        "id": "1b9c7d01aed5d2d2",
        "type": "json",
        "z": "79cb1d1dae22282f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1440,
        "wires": [
            [
                "240ed3b5bc4b63e8"
            ]
        ]
    },
    {
        "id": "240ed3b5bc4b63e8",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "UPDATE FROM Issue",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE Issue SET goto = 'Comment' WHERE id = ID AND workingday = 'Workingday';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ID",
                "fromt": "str",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Comment",
                "fromt": "str",
                "to": "payload.comment",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1440,
        "wires": [
            [
                "86dfe85dbbe40cba"
            ]
        ]
    },
    {
        "id": "86dfe85dbbe40cba",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1240,
        "y": 1440,
        "wires": [
            [
                "470c4a0244352781"
            ]
        ]
    },
    {
        "id": "470c4a0244352781",
        "type": "websocket out",
        "z": "79cb1d1dae22282f",
        "name": "",
        "server": "38bb0eb9fc4184e6",
        "client": "",
        "x": 1550,
        "y": 1440,
        "wires": []
    },
    {
        "id": "0bd1e008681fcffc",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "SELECT * FROM stocklog WHERE id",
        "func": "\nvar selectedWarehousingDate = msg.payload;\nflow.set(\"selectedWarehousingDate\", selectedWarehousingDate);\n\nvar selectQueries = [];\nmsg.payload.forEach(function (record) {\n    var selectQuery = \"SELECT * FROM stocklog WHERE id = \" + record.id + \"\";\n    selectQueries.push(selectQuery);\n});\n\nmsg.payload = selectQueries;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "54afd4481105c430"
            ]
        ]
    },
    {
        "id": "27db0f6fd912ccbf",
        "type": "mysql",
        "z": "79cb1d1dae22282f",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "1c5b24b0e168dc82"
            ]
        ]
    },
    {
        "id": "54afd4481105c430",
        "type": "split",
        "z": "79cb1d1dae22282f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "7660f427def23599"
            ]
        ]
    },
    {
        "id": "7660f427def23599",
        "type": "change",
        "z": "79cb1d1dae22282f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 300,
        "wires": [
            [
                "27db0f6fd912ccbf"
            ]
        ]
    },
    {
        "id": "1c5b24b0e168dc82",
        "type": "join",
        "z": "79cb1d1dae22282f",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1390,
        "y": 300,
        "wires": [
            [
                "fee7598a6ee74eba"
            ]
        ]
    },
    {
        "id": "fee7598a6ee74eba",
        "type": "function",
        "z": "79cb1d1dae22282f",
        "name": "Table data generation",
        "func": "var originalData = msg.payload\nvar flatData = [].concat(...originalData);\nvar selectedWarehousingDate = flow.get(\"selectedWarehousingDate\");\n\nfunction addStock(warehousingDates, flatDates) {\n    // warehousingDatesの各要素をループ\n    warehousingDates.forEach(warehousingDate => {\n        let stockStatus = '在庫あり';\n\n        // flatDatesの各要素をループ\n        flatDates.forEach(flatDate => {\n            // IDが一致する場合にstockを更新\n            if (warehousingDate.id === flatDate.id) {\n                stockStatus = '在庫なし';\n            }\n        });\n        warehousingDate.stock = stockStatus;\n    });\n    return warehousingDates;\n}\n\nvar updatedData = addStock(selectedWarehousingDate, flatData );\n\nmsg.payload = updatedData;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 140,
        "wires": [
            [
                "6f46cbc104d115c3"
            ]
        ]
    },
    {
        "id": "a8cb69f739018a43",
        "type": "http response",
        "z": "598b8043837fd2de",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 60,
        "wires": []
    },
    {
        "id": "514bfdd6f23720d7",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">出荷情報履歴<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴</a>\n              </li>\n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">出荷情報履歴</h1>\n        <div class=\"col-4\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"bulk\">選択行CSV取得</button>\n        </div>        \n      </div>\n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info my-4\">\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"shipping-date\" class=\"col-6 col-form-label fs-5\">出荷日：</label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"shipping-date\" name=\"shipping-date\">\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"deliveryto\"  class=\"col-6 col-form-label fs-5\">納入先：</label>\n              <select id=\"deliveryto\" name=\"deliveryto\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicesdelivery}}\n                <option>{{.}}</option>\n                {{/choicesdelivery}}\n              </select>\n            </div>\n          </div>\n\n          <div class=\"col-12 mt-3\"> \n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\"> \n          </div>\n          \n        </div>\n        \n      </form>\n\n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n\n              <th scope=\"col\" class=\"fs-6 id-column\">データ取込日</th>\n              <th scope=\"col\" class=\"fs-6\">出荷日</th>\n              <th scope=\"col\" class=\"fs-6\">客先</th>\n              <th scope=\"col\" class=\"fs-6\">納入先</th>\n              <th scope=\"col\" class=\"fs-6\">件数</th>\n              <th scope=\"col\" class=\"fs-6 id-column\">発行者</th>\n              <th scope=\"col\" class=\"fs-6\">準備完了件数</th>\n              <th scope=\"col\" class=\"fs-6\">個口数</th>\n              <th scope=\"col\" class=\"fs-6\">パレット枚数</th>\n              <th scope=\"col\" class=\"fs-6\">備考</th>\n              <th scope=\"col\" class=\"fs-6\">選択</th>\n              <th scope=\"col\" class=\"fs-6\">csv取得</th>\n\n            </tr> \n          </thead>  \n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>        \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "a8cb69f739018a43"
            ]
        ]
    },
    {
        "id": "8ad66c94bda59fc6",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\n/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 600px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 1010,
        "y": 60,
        "wires": [
            [
                "514bfdd6f23720d7"
            ]
        ]
    },
    {
        "id": "934b039e7bdeb1e2",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    var storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction formatDateTime(dateTimeString) {\n    \n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction sendDataToNodeRED(shippingDate, customer, delivery) {\n\n    const hostname = window.location.hostname;\n    var socket = new WebSocket(`wss://${hostname}/shippinglog-search`);\n\n    socket.onopen = function (event) {\n        var requestData = {\n            \n            shippingDater: shippingDate,\n            customer: customer,\n            delivery: delivery,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    var searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        var shippingDate = document.getElementById(\"shipping-date\").value;\n        var customer = document.getElementById(\"customer\").value;\n        var delivery = document.getElementById(\"deliveryto\").value;\n        \n\n        sendDataToNodeRED(shippingDate, customer, delivery);\n    });\n\n    \n\n});\n\nfunction clearForm() {\n\n    // 出荷日フィールドを初期化\n    document.getElementById('shipping-date').value = '';\n\n    // 客先と納入先のセレクトボックスを初期化\n    document.getElementById('customer').selectedIndex = 0;\n    document.getElementById('deliveryto').selectedIndex = 0;\n\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n    var tableBody = document.getElementById(\"table-body\");\n\n    // テーブルのtbody要素をクリア\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        var row = tableBody.insertRow();\n        let cell1 = row.insertCell(0); //データ取込日workingday\n        let cell2 = row.insertCell(1); //出荷日shippingdate\n        let cell3 = row.insertCell(2); //客先customer\n        let cell4 = row.insertCell(3); //納入先deliverto\n        let cell5 = row.insertCell(4); //件数\n        let cell6 = row.insertCell(5); //発行者workername\n        let cell7 = row.insertCell(6); //準備完了件数\n        let cell8 = row.insertCell(7); //個口数\n        let cell9 = row.insertCell(8); //パレット枚数\n        let cell10 = row.insertCell(9); //備考\n        let cell11 = row.insertCell(10); //選択\n        let cell12 = row.insertCell(11); //csv取得\n        \n        var databaseDate = new Date(item.shippingdate.toLocaleString());\n        var year = databaseDate.getFullYear();\n        var month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        var day = databaseDate.getDate().toString().padStart(2, '0');\n        var formattedDate = `${year}/${month}/${day}`;\n\n        cell1.innerHTML = formatDateTime(item.workingday);\n        cell1.style.display = \"none\";\n        cell2.innerHTML = formattedDate;\n        cell3.innerHTML = item.customer;\n        cell4.innerHTML = item.deliveryto;\n        cell5.innerHTML = item.orderquantity;\n        cell6.innerHTML = item.workername;\n        cell6.style.display = \"none\";\n        cell7.innerHTML = item.readyquantity;\n        cell8.innerHTML = item.koguchi;\n        cell9.innerHTML = item.pallet;\n        cell10.innerHTML = item.remarks;\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\";   \n\n        cell11.appendChild(checkbox);    \n\n        if(item.status === '2'){\n            cell12.innerHTML = '未取得';\n        } else if (item.status === '3'){\n            cell12.innerHTML = '取得済';\n        } \n\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const table = document.getElementById(\"mytable\");\n    \n    table.addEventListener(\"click\", function (event) {\n\n        const clickedCellIndex = event.target.cellIndex;\n        console.log(clickedCellIndex)\n\n        // 11番目のセル（インデックス10）がクリックされた場合\n        if (clickedCellIndex === 10 || event.target.tagName.toLowerCase() === \"input\" || event.target.type === \"checkbox\") {\n            // クリックイベントを停止して何もしない\n            event.stopPropagation();\n            console.log(\"Checkbox clicked. Do nothing.\");\n            return;\n        }\n\n        // クリックされた行を取得\n        const clickedRow = event.target.closest(\"tr\");\n\n            if (clickedRow) {\n                var workingday = clickedRow.cells[0].textContent.trim();\n                var formattedDate = clickedRow.cells[1].textContent.trim();\n                var customer = clickedRow.cells[2].textContent.trim();\n                var deliveryto = clickedRow.cells[3].textContent.trim();\n                //var groupname = clickedRow.cells[4].textContent.trim();\n                var workername = clickedRow.cells[5].textContent.trim();\n\n                var encodedworkingday = encodeURIComponent(workingday);\n                var encodedformattedDate = encodeURIComponent(formattedDate);\n                var encodedcustomer = encodeURIComponent(customer);\n                var encodeddeliveryto = encodeURIComponent(deliveryto);\n                //var encodedgroupname = encodeURIComponent(groupname);\n                var encodedworkername = encodeURIComponent(workername);\n\n                // エンコードされた変数を使用してURLを構築\n                var destinationURL = \"/page8-1\" +\n                    \"?workingday=\" + encodedworkingday +\n                    \"&formattedDate=\" + encodedformattedDate +\n                    \"&customer=\" + encodedcustomer +\n                    \"&deliveryto=\" + encodeddeliveryto +\n                    //\"&groupname=\" + encodedgroupname +\n                    \"&workername=\" + encodedworkername;\n\n                window.location.href = destinationURL;\n            }       \n    });\n\n\n    const bulk = document.getElementById(\"bulk\");\n    bulk.addEventListener(\"click\", function (event) {\n\n        let checkedRowsData = [];\n        let tableRows = document.querySelectorAll(`#table-body tr`);\n        tableRows.forEach(function (row) {\n            let checkbox = row.querySelector('input[type=\"checkbox\"]');\n            if (checkbox && checkbox.checked) {\n                let rowData = {};\n                // 各セルのデータを取得して rowData に追加\n                rowData.workingDay = row.cells[0].textContent;\n                rowData.shippingDate = row.cells[1].textContent;\n                rowData.customer = row.cells[2].textContent;\n                rowData.deliveryTo = row.cells[3].textContent;\n                checkedRowsData.push(rowData);\n            }\n        });\n\n\n        const hostname = window.location.hostname;\n        var socket = new WebSocket(`wss://${hostname}/get-selectedrowscsv`);\n\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(checkedRowsData));\n        };\n\n        socket.onerror = function (event) {\n            console.error(\"WebSocketエラー:\", event);\n        };\n\n        socket.onmessage = function (event) {\n\n            var text;\n            if (typeof event.data === 'string') {\n                // すでに文字列の場合\n                text = event.data;\n            } else {\n                // バイナリデータの場合\n                text = new TextDecoder('utf-8').decode(event.data);\n            }\n\n            var blob = new Blob([new Uint8Array([0xEF, 0xBB, 0xBF]), text], { type: 'text/csv; charset=UTF-8' });\n            console.log(blob)\n            var link = document.createElement('a');\n            var currentTime = new Date();\n            var fileName = 'data_' + currentTime.getFullYear() + (currentTime.getMonth() + 1) + currentTime.getDate() +\n                currentTime.getHours() + currentTime.getMinutes() + currentTime.getSeconds() + '.csv';\n\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n            link.click();\n\n            socket.close();\n        };\n\n        socket.onclose = function (event) {\n            console.log(\"Socket connection closed.\");\n        };\n        \n    });\n    \n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 880,
        "y": 60,
        "wires": [
            [
                "8ad66c94bda59fc6"
            ]
        ]
    },
    {
        "id": "c63f9186d81eb17a",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicesdelivery = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicesdelivery.push(row); \n}\n\nmsg.choicesdelivery = choicesdelivery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 60,
        "wires": [
            [
                "934b039e7bdeb1e2"
            ]
        ]
    },
    {
        "id": "6748218991562c05",
        "type": "file in",
        "z": "598b8043837fd2de",
        "name": "納入先",
        "filename": "/home/kuwata/ktrg/納入先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "c63f9186d81eb17a"
            ]
        ]
    },
    {
        "id": "5973a21f31958656",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "6748218991562c05"
            ]
        ]
    },
    {
        "id": "0833706693125c27",
        "type": "file in",
        "z": "598b8043837fd2de",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "5973a21f31958656"
            ]
        ]
    },
    {
        "id": "af1115b6c59a793c",
        "type": "http in",
        "z": "598b8043837fd2de",
        "name": "",
        "url": "/page8",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "0833706693125c27"
            ]
        ]
    },
    {
        "id": "2f37a36e0ab546ed",
        "type": "websocket in",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "73e1367b81857c97",
        "client": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "5b676e8612ef5f70"
            ]
        ]
    },
    {
        "id": "5b676e8612ef5f70",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "081660b6e38da6af"
            ]
        ]
    },
    {
        "id": "7565bf23ca95ec9a",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "出荷日分岐",
        "property": "payload.shippingDater",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "58ebf912b5fe08a0"
            ],
            [
                "e326e69bc18d1a91"
            ]
        ]
    },
    {
        "id": "58ebf912b5fe08a0",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "50c549835d8943eb"
            ],
            [
                "2f9c8bf4d7f1a97d"
            ]
        ]
    },
    {
        "id": "e326e69bc18d1a91",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "3b4aa51fb261d91d"
            ],
            [
                "ea45f902468c7fe3"
            ]
        ]
    },
    {
        "id": "2f9c8bf4d7f1a97d",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "87bd536a4e3765fc"
            ],
            [
                "0f9b3ef09be7f74d"
            ]
        ]
    },
    {
        "id": "3b4aa51fb261d91d",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "19fc662d6fa77558"
            ],
            [
                "fdb55d6dc1f61786"
            ]
        ]
    },
    {
        "id": "ea45f902468c7fe3",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "8a2172ecaae4d030"
            ],
            [
                "ec944127bf0ea807"
            ]
        ]
    },
    {
        "id": "d3ecc8fb0fe27e5d",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "8af612de64435996"
            ]
        ]
    },
    {
        "id": "8af612de64435996",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "5d0394ba8c175024"
            ]
        ]
    },
    {
        "id": "081660b6e38da6af",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "指示書と報告書の条件分岐",
        "func": "\nvar selectedAction = msg.payload.selectedAction;\nvar shippingDater = msg.payload.shippingDater;\nvar customer = msg.payload.customer;\nvar delivery = msg.payload.delivery;\n\nvar tbname = msg.tbname;\nvar status = msg.status;\n\n// データを変数に保存\nflow.set('tbname', tbname);\nflow.set('status', status);\nflow.set('shippingDater', shippingDater);\nflow.set('customer', customer);\nflow.set('delivery', delivery);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "7565bf23ca95ec9a"
            ]
        ]
    },
    {
        "id": "58181275e70cf742",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 180,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "d08cfec816016602",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 220,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "87bd536a4e3765fc",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE customer='Customer' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 260,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "0f9b3ef09be7f74d",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where customer AND delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE customer='Customer' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "19fc662d6fa77558",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where shippingdate",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE shippingdate='Shippingdate' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDater",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "fdb55d6dc1f61786",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where shippingdate",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE shippingdate='Shippingdate' AND deliveryto='Delivery' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDater",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "8a2172ecaae4d030",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where shippingdate AND customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE shippingdate='Shippingdate' AND customer='Customer' ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDater",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 420,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "ec944127bf0ea807",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where shippingdate AND customer AND delivery",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT shippingdate, customer, deliveryto, workingday, workername, orderquantity, readyquantity, koguchi, pallet, remarks, status FROM shippingheaderlog WHERE shippingdate='Shippingdate' AND customer='Customer' AND deliveryto='Delivery'  ORDER BY shippingdate,customer,deliveryto,remarks;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDater",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Delivery",
                "fromt": "str",
                "to": "payload.delivery",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 460,
        "wires": [
            [
                "d3ecc8fb0fe27e5d"
            ]
        ]
    },
    {
        "id": "5d0394ba8c175024",
        "type": "websocket out",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "73e1367b81857c97",
        "client": "",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "094cbae1116898c1",
        "type": "http response",
        "z": "598b8043837fd2de",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 660,
        "wires": []
    },
    {
        "id": "859e2493985fec54",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n               <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴へ戻る</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">出荷履歴書</h1>\n        <div class=\"col-4\">\n          <button class=\"btn btn-success ms-2 mb-1\" id=\"stock-storage\" onclick=\"saveFormDataAndRedirect(this.id)\">CSV取得</button>\n        </div>\n      </div>\n      \n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info\">\n          \n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"working-date\" class=\"col-6 col-form-label fs-5\">指示書発行日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"working-date\" name=\"working-date\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"workername\" class=\"col-6 col-form-label fs-5\">指示書発行者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"workername\" name=\"workername\" readonly>\n            </div>\n\n            <div class=\"col-6\">\n              <label for=\"checked-time\" class=\"col-6 col-form-label fs-5\">出荷確認日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"checked-time\" name=\"checked-time\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"checker-name\" class=\"col-6 col-form-label fs-5\">出荷確認者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"checker-name\" name=\"checker-name\" readonly>\n            </div>\n\n            <div class=\"col-6\">\n              <label for=\"completion-time\" class=\"col-6 col-form-label fs-5\">出荷完了日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"completion-time\" name=\"completion-time\" readonly>\n            </div>\n            <div class=\"col-6\">\n              <label for=\"completer-name\" class=\"col-6 col-form-label fs-5\">出荷完了者：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"completer-name\" name=\"completer-name\" readonly>\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"shipping-date\" class=\"col-6 col-form-label fs-5\">出荷日：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"shipping-date\" name=\"shipping-date\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"customer\" class=\"col-6 col-form-label fs-5\">客先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"customer\" name=\"customer\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"deliveryto\" class=\"col-6 col-form-label fs-5\">納入先：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"deliveryto\" name=\"deliveryto\" readonly>\n            </div>\n              \n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-4\">\n              <label for=\"koguchi\" class=\"col-5 col-form-label fs-5\">個口数:</label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"koguchi\" name=\"koguchi\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"pallet\" class=\"col-7 col-form-label fs-5\">パレット数量:</label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"pallet\" name=\"pallet\" readonly>\n            </div>\n            <div class=\"col-4\">\n              <label for=\"remarks\" class=\"col-7 col-form-label fs-5\">備考:</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"remarks\" name=\"remarks\" readonly>\n            </div>\n          </div>\n      </form>\n\n      <div class=\"table-container\">\n        \n          <table id=\"mytable\" class=\"table table-hover mt-4\">\n            <thead class=\"table-light\">\n              <tr>\n\n                <th scope=\"col\" class=\"fs-6\">進捗状況</th>\n                <th scope=\"col\" class=\"fixed-left fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">注文番号</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>              \n                <th scope=\"col\" class=\"fs-6\">荷姿</th>\n                <th scope=\"col\" class=\"fs-6\">(入数)</th>\n                <th scope=\"col\" class=\"fs-6\">(梱包数)</th>\n                <th scope=\"col\" class=\"fs-6\">(確定出荷数量)</th>\n                <th scope=\"col\" class=\"fs-6\">現場名/直送先</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所1</th>\n                <th scope=\"col\" class=\"fs-6\">引き渡し場所2</th>\n                <th scope=\"col\" class=\"fs-6\">客先納期</th>\n                <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">受注番号</th>\n                <th scope=\"col\" class=\"fs-6\">備考</th>\n                <th scope=\"col\" class=\"fs-6\">備考2</th>\n                <th scope=\"col\" class=\"fs-6\">グループ</th>\n\n              </tr> \n            </thead>  \n            <tbody id=\"table-body\"></tbody>\n          </table>\n        \n      </div>  \n\n    </div>\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 550,
        "y": 660,
        "wires": [
            [
                "094cbae1116898c1"
            ]
        ]
    },
    {
        "id": "41c65ff30b1f5f57",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    width: 100%;\n    overflow: auto;\n    height: 600px;\n    position: relative;\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#mytable th.fixed-left, #mytable tbody td:nth-child(2) {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n#mytable td:nth-child(13) {\n  display: none;\n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n/* CSSスタイル（ポップアップメニューを非表示に） */\n.popup-menu {\n    z-index: 9999;\n    display: none;\n    position: absolute;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.popup-menu ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n.popup-menu ul li {\n    padding: 10px;\n    text-align: center;\n}\n\n.popup-menu ul li:hover {\n    background-color: #f0f0f0;\n    cursor: pointer;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 430,
        "y": 660,
        "wires": [
            [
                "859e2493985fec54"
            ]
        ]
    },
    {
        "id": "274b2ce5e9f03c50",
        "type": "template",
        "z": "598b8043837fd2de",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function goBack() {\n    window.history.back();\n}\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    let shippingDate = document.getElementById(\"shipping-date\").value;\n    //let groupName = document.getElementById(\"group-name\").value;\n    let workingday = document.getElementById(\"working-date\").value;\n    let deliveryto = document.getElementById(\"deliveryto\").value;\n    let workerName = document.getElementById(\"workername\").value;\n    let customer  = document.getElementById(\"customer\").value;\n\n    const hostname = window.location.hostname;\n    var socket = new WebSocket(`wss://${hostname}/shippinghistory-csvdata`);\n\n    socket.onopen = function (event) {\n        var requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            shippingDate: shippingDate,\n            customer: customer\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n     \n        var text;\n        if (typeof event.data === 'string') {\n            // すでに文字列の場合\n            text = event.data;\n        } else {\n            // バイナリデータの場合\n            text = new TextDecoder('utf-8').decode(event.data);\n        }\n        \n        var blob = new Blob([new Uint8Array([0xEF, 0xBB, 0xBF]), text], { type: 'text/csv; charset=UTF-8' });\n        console.log(blob)\n        var link = document.createElement('a');\n        var currentTime = new Date();\n        var fileName = 'data_' + currentTime.getFullYear() + (currentTime.getMonth() + 1) + currentTime.getDate() +\n            currentTime.getHours() + currentTime.getMinutes() + currentTime.getSeconds() + '.csv';\n\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n\n        socket.close();\n    };\n\n}\n\nfunction formatDateTime(dateTimeString) {\n    \n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nvar storedStaffCode = sessionStorage.getItem('staffCode');\nvar storedStaffName = sessionStorage.getItem('staffName');\n\nfunction sendDataToNodeRED2(workingday, deliveryto, SHIPPING_DATE, CUSTOMER) {\n\n    const hostname = window.location.hostname;\n    var socket = new WebSocket(`wss://${hostname}/shippingheaderlog-search`);\n\n    socket.onopen = function (event) {\n        var requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            SHIPPING_DATE: SHIPPING_DATE,\n            CUSTOMER: CUSTOMER\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n\n        var responseData = JSON.parse(event.data);\n\n        var CHECKED_TIME = formatDateTime(responseData[0].checkedtime);\n        var completionTime = formatDateTime(responseData[0].completiontime);\n\n        document.getElementById(\"koguchi\").value = responseData[0].koguchi;\n        document.getElementById(\"pallet\").value = responseData[0].pallet;\n        document.getElementById(\"checked-time\").value = CHECKED_TIME;\n        document.getElementById(\"checker-name\").value = responseData[0].checkername;\n        document.getElementById(\"completion-time\").value = completionTime;\n        document.getElementById(\"completer-name\").value = responseData[0].completer;\n        document.getElementById(\"remarks\").value = responseData[0].remarks;\n\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction sendDataToNodeRED(workingday, deliveryto, SHIPPING_DATE, CUSTOMER) {\n\n    const hostname = window.location.hostname;\n    var socket = new WebSocket(`wss://${hostname}/shippinglog-infor`);\n    \n    socket.onopen = function (event) {\n        var requestData = {\n            workingday: workingday,\n            deliveryto: deliveryto,\n            SHIPPING_DATE: SHIPPING_DATE,\n            CUSTOMER: CUSTOMER\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction displayDataInTable(data) {\n    var tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n    \n    // データをテーブルに追加\n    data.forEach(function (item) {\n        var row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);//進捗状況status\n        let cell2 = row.insertCell(1);//品番productnumber\n        let cell3 = row.insertCell(2);//注文番号ordernumber\n        let cell4 = row.insertCell(3);//数量quantity\n        let cell5 = row.insertCell(4);//荷姿\n        let cell6 = row.insertCell(5);//入数\n        let cell7 = row.insertCell(6);//梱包数\n        let cell8 = row.insertCell(7);//確定出荷数量\n        let cell9 = row.insertCell(8);//現場名直送先directdelivery\n        let cell10 = row.insertCell(9);//引渡し場所1delivery1\n        let cell11 = row.insertCell(10);//引渡し場所2delivery2\n        let cell12 = row.insertCell(11);//客先納期customerdate\n        let cell13 = row.insertCell(12);//受注番号cipsnumber\n        let cell14 = row.insertCell(13);//備考remarks\n        let cell15 = row.insertCell(14);//備考2remarks2\n        let cell16 = row.insertCell(15);//ｸﾞﾙｰﾌﾟ\n\n        var databaseDate = new Date(item.customerdate.toLocaleString());\n        var year = databaseDate.getFullYear();\n        var month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n        var day = databaseDate.getDate().toString().padStart(2, '0');\n        var formattedDate = `${year}/${month}/${day}`;\n\n        cell2.innerHTML = item.productnumber;\n        cell3.innerHTML = item.ordernumber;\n        cell4.innerHTML = item.quantity;\n        cell8.innerHTML = item.confirmed;\n        cell9.innerHTML = item.directdelivery;\n        cell10.innerHTML = item.delivery1;\n        cell11.innerHTML = item.delivery2;\n        cell12.innerHTML = formattedDate;\n        cell13.innerHTML = item.cipsnumber;\n        cell14.innerHTML = item.remarks;\n        cell15.innerHTML = item.remarks2;\n        cell16.innerHTML = item.groupname;\n\n        if (item.status === '1') {\n            var text = document.createTextNode(\"出荷不可\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'red';\n        } else if (item.status === '2') {\n            var text = document.createTextNode(\"出荷準備完了\");\n            cell1.appendChild(text);\n        } else if (item.status === '3') {\n            var text = document.createTextNode(\"出荷確認済\");\n            cell1.appendChild(text);\n            \n        } else if (item.status === '4') {\n            var text = document.createTextNode(\"分納\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '5') {\n            var text = document.createTextNode(\"出荷キャンセル\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '6') {\n            var text = document.createTextNode(\"出荷指示書に戻す\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        } else if (item.status === '7') {\n            var text = document.createTextNode(\"その他\");\n            cell1.appendChild(text);\n            cell1.style.backgroundColor = 'lightgray'; \n        }\n\n        if (cell4.textContent.trim() !== cell8.textContent.trim()) {\n            cell4.style.backgroundColor = 'yellow';\n            cell8.style.backgroundColor = 'yellow';\n        }    \n        \n        cell5.innerHTML = '';\n        if (item.boxed.includes(',')) {\n            // カンマが含まれている場合\n            var boxedValues = item.boxed.split(',');\n            cell6.innerHTML = '';\n\n            for (var i = 0; i < boxedValues.length; i++) {\n                var textBox = document.createElement(\"input\");\n                textBox.type = \"text\";\n                textBox.style.width = \"100px\"; \n                textBox.value = boxedValues[i];\n                textBox.setAttribute(\"readonly\", \"true\");\n                cell6.appendChild(textBox);\n            }\n        } else {\n            // カンマが含まれていない場合\n            var textBox = document.createElement(\"input\");\n            textBox.type = \"text\";\n            textBox.style.width = \"100px\"; \n            textBox.value = item.boxed;\n            textBox.setAttribute(\"readonly\", \"true\"); \n            cell6.appendChild(textBox);\n        }\n\n        if (item.packing.includes(',')) {\n            // カンマが含まれている場合\n            var packingValues = item.packing.split(',');\n            cell7.innerHTML = ''; \n\n            for (var i = 0; i < packingValues.length; i++) {\n                var textBox = document.createElement(\"input\");\n                textBox.type = \"text\";\n                textBox.style.width = \"100px\"; \n                textBox.value = packingValues[i];\n                textBox.setAttribute(\"readonly\", \"true\"); \n                cell7.appendChild(textBox);\n            }\n        } else {\n            // カンマが含まれていない場合\n            var textBox = document.createElement(\"input\");\n            textBox.type = \"text\";\n            textBox.style.width = \"100px\"; \n            textBox.value = item.packing;\n            textBox.setAttribute(\"readonly\", \"true\"); \n            cell7.appendChild(textBox);\n        }        \n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    function getQueryParameter(name) {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get(name);\n    }\n\n    var workingday = getQueryParameter(\"workingday\");\n    var SHIPPING_DATE = getQueryParameter(\"formattedDate\");\n    var deliveryto = getQueryParameter(\"deliveryto\");\n    //var groupname = getQueryParameter(\"groupname\");\n    var workername = getQueryParameter(\"workername\");\n    var CUSTOMER = getQueryParameter(\"customer\");\n    \n    document.getElementById(\"shipping-date\").value = SHIPPING_DATE;\n    //document.getElementById(\"group-name\").value = groupname;\n    document.getElementById(\"working-date\").value = workingday;\n    document.getElementById(\"deliveryto\").value = deliveryto;\n    document.getElementById(\"workername\").value = workername;\n    document.getElementById(\"customer\").value = CUSTOMER;\n\n    //データベースから選択情報を抽出してテーブルに表示\n    sendDataToNodeRED2(workingday, deliveryto, SHIPPING_DATE, CUSTOMER);\n    sendDataToNodeRED(workingday, deliveryto, SHIPPING_DATE, CUSTOMER);\n    \n}); \n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n    \n\n\n\n",
        "output": "str",
        "x": 300,
        "y": 660,
        "wires": [
            [
                "41c65ff30b1f5f57"
            ]
        ]
    },
    {
        "id": "b8f87b775691f680",
        "type": "http in",
        "z": "598b8043837fd2de",
        "name": "出荷履歴書",
        "url": "/page8-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "274b2ce5e9f03c50"
            ]
        ]
    },
    {
        "id": "17deb3c9757b09a9",
        "type": "websocket in",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "5ddd6053695398c1",
        "client": "",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "35084e3d4bd6d38a"
            ]
        ]
    },
    {
        "id": "35084e3d4bd6d38a",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 720,
        "wires": [
            [
                "3c3aa0a5cac0c35f"
            ]
        ]
    },
    {
        "id": "67070090d6a97a66",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "ab109de9e0478bf3"
            ]
        ]
    },
    {
        "id": "ab109de9e0478bf3",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 720,
        "wires": [
            [
                "bd0132614a360f48"
            ]
        ]
    },
    {
        "id": "3c3aa0a5cac0c35f",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT remarks,pallet, koguchi, checkername, checkedtime,completer,completiontime FROM shippingheaderlog WHERE workingday = 'Workingday'  AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.SHIPPING_DATE",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.CUSTOMER",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "67070090d6a97a66"
            ]
        ]
    },
    {
        "id": "bd0132614a360f48",
        "type": "websocket out",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "5ddd6053695398c1",
        "client": "",
        "x": 1390,
        "y": 720,
        "wires": []
    },
    {
        "id": "78674f1defebf83d",
        "type": "websocket out",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "26abda6a37c3072e",
        "client": "",
        "x": 1360,
        "y": 780,
        "wires": []
    },
    {
        "id": "88e7c565ed969161",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "78674f1defebf83d"
            ]
        ]
    },
    {
        "id": "318612eeba43a82c",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "88e7c565ed969161"
            ]
        ]
    },
    {
        "id": "3dae9a92e9ea9a4e",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM shippinglog WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer' ORDER BY workingday,customer,deliveryto;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.SHIPPING_DATE",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.CUSTOMER",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 780,
        "wires": [
            [
                "318612eeba43a82c"
            ]
        ]
    },
    {
        "id": "1c58ab28133741c5",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 780,
        "wires": [
            [
                "3dae9a92e9ea9a4e"
            ]
        ]
    },
    {
        "id": "e5077bbed6904d4f",
        "type": "websocket in",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "26abda6a37c3072e",
        "client": "",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "1c58ab28133741c5"
            ]
        ]
    },
    {
        "id": "21344b91796cbfad",
        "type": "websocket in",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "ab614c0f00b96c9d",
        "client": "",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "fed05d8f1131c148"
            ]
        ]
    },
    {
        "id": "fed05d8f1131c148",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "a809de6b48d27704",
                "ed7db3a5b9e9f4ba"
            ]
        ]
    },
    {
        "id": "ed7db3a5b9e9f4ba",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "select*from where",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT cipsnumber AS 受注番号, customer AS 客先名, ordernumber AS オーダー番号, productnumber AS 品番, quantity AS 受注数, confirmed AS 確定出荷数量, DATE_FORMAT(shippingdate, '%Y-%m-%d')  AS 出荷日, DATE_FORMAT(customerdate, '%Y-%m-%d')  AS 客先納期, boxed AS 入数, packing AS 梱包数量, deliveryto AS 出庫先  FROM shippinglog WHERE workingday = 'Workingday' AND deliveryto = 'Deliveryto' AND shippingdate = 'Shippingdate'  AND customer ='Customer' AND status IN ('3', '4', '7') ORDER BY workingday,customer,deliveryto,groupname;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Workingday",
                "fromt": "str",
                "to": "payload.workingday",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Deliveryto",
                "fromt": "str",
                "to": "payload.deliveryto",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Shippingdate",
                "fromt": "str",
                "to": "payload.shippingDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 840,
        "wires": [
            [
                "5f444d15a979bfb3"
            ]
        ]
    },
    {
        "id": "5f444d15a979bfb3",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "37350fc8bbc53daa"
            ]
        ]
    },
    {
        "id": "9e7e11ac7e063e97",
        "type": "csv",
        "z": "598b8043837fd2de",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1310,
        "y": 840,
        "wires": [
            [
                "44288f3913652644"
            ]
        ]
    },
    {
        "id": "44288f3913652644",
        "type": "websocket out",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "ab614c0f00b96c9d",
        "client": "",
        "x": 1500,
        "y": 840,
        "wires": []
    },
    {
        "id": "d547a3f2403acede",
        "type": "split",
        "z": "598b8043837fd2de",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 520,
        "wires": [
            [
                "78d8927a330151e8"
            ]
        ]
    },
    {
        "id": "4134689b9dd6bdba",
        "type": "websocket in",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "4b60e9257ee3b8db",
        "client": "",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "a57767d47f872c59"
            ]
        ]
    },
    {
        "id": "a57767d47f872c59",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 560,
        "wires": [
            [
                "5848d173e05c3dc6",
                "11d585fe67431abe"
            ]
        ]
    },
    {
        "id": "5848d173e05c3dc6",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "Build select shippinglog",
        "func": "var selectQueries = [];\n\nmsg.payload.forEach(function (record, index) {\n    var selectQuery;\n\n    selectQuery = \"SELECT cipsnumber AS 受注番号, customer AS 客先名, ordernumber AS オーダー番号, productnumber AS 品番, quantity AS 受注数, confirmed AS 確定出荷数量, DATE_FORMAT(shippingdate, '%Y-%m-%d') AS 出荷日, DATE_FORMAT(customerdate, '%Y-%m-%d') AS 客先納期, boxed AS 入数, packing AS 梱包数量, deliveryto AS 出庫先 FROM shippinglog WHERE status IN('3', '4', '7') AND (cipsnumber, customer, workingday, shippingdate, deliveryto) IN (SELECT cipsnumber, customer, workingday, shippingdate, deliveryto FROM shippinglog WHERE workingday ='\" + record.workingDay + \"' AND shippingdate = '\" + record.shippingDate + \"' AND customer = '\" + record.customer + \"' AND deliveryto = '\" + record.deliveryTo + \"')\";\n\n    selectQueries.push(selectQuery);\n});\n\n\nmsg.payload = selectQueries;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 520,
        "wires": [
            [
                "d547a3f2403acede"
            ]
        ]
    },
    {
        "id": "78d8927a330151e8",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 520,
        "wires": [
            [
                "3490fac454f3c94b"
            ]
        ]
    },
    {
        "id": "3490fac454f3c94b",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 520,
        "wires": [
            [
                "71d6ad13746656f8"
            ]
        ]
    },
    {
        "id": "71d6ad13746656f8",
        "type": "join",
        "z": "598b8043837fd2de",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1190,
        "y": 520,
        "wires": [
            [
                "e20a841d83ba89a9"
            ]
        ]
    },
    {
        "id": "e20a841d83ba89a9",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "flatData",
        "func": "var originalData = msg.payload\n\nvar flatData = [].concat(...originalData);\n\nmsg.payload = flatData\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "47c891e98f9b87c4"
            ]
        ]
    },
    {
        "id": "47c891e98f9b87c4",
        "type": "csv",
        "z": "598b8043837fd2de",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1450,
        "y": 520,
        "wires": [
            [
                "d76d6266c8d86aaa"
            ]
        ]
    },
    {
        "id": "d76d6266c8d86aaa",
        "type": "websocket out",
        "z": "598b8043837fd2de",
        "name": "",
        "server": "4b60e9257ee3b8db",
        "client": "",
        "x": 1630,
        "y": 520,
        "wires": []
    },
    {
        "id": "11d585fe67431abe",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "Build update shippingheaderlog",
        "func": "\nvar updateQueries = [];\n\nmsg.payload.forEach(function (record) {\n\n    var updateQuery = \"UPDATE shippingheaderlog SET status = '3' WHERE workingday = '\" + record.workingDay + \"' AND shippingdate = '\" + record.shippingDate + \"' AND customer = '\" + record.customer + \"' AND deliveryto = '\" + record.deliveryTo + \"'\";\n\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 600,
        "wires": [
            [
                "134d7d3e1c34a444"
            ]
        ]
    },
    {
        "id": "134d7d3e1c34a444",
        "type": "split",
        "z": "598b8043837fd2de",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 600,
        "wires": [
            [
                "a4eb6b5ce4884ea8"
            ]
        ]
    },
    {
        "id": "a4eb6b5ce4884ea8",
        "type": "change",
        "z": "598b8043837fd2de",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 600,
        "wires": [
            [
                "732d1e7b50663878"
            ]
        ]
    },
    {
        "id": "732d1e7b50663878",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a809de6b48d27704",
        "type": "function",
        "z": "598b8043837fd2de",
        "name": "Build update shippingheaderlog",
        "func": "\n\nvar updateQuery = \"UPDATE shippingheaderlog SET status = '3' WHERE workingday = '\" + msg.payload.workingday + \"' AND shippingdate = '\" + msg.payload.shippingDate + \"' AND customer = '\" + msg.payload.customer + \"' AND deliveryto = '\" + msg.payload.deliveryto + \"'\";\n\n\nmsg.topic = updateQuery;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 920,
        "wires": [
            [
                "67f022ba3b5317be"
            ]
        ]
    },
    {
        "id": "67f022ba3b5317be",
        "type": "mysql",
        "z": "598b8043837fd2de",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1060,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "50c549835d8943eb",
        "type": "switch",
        "z": "598b8043837fd2de",
        "name": "納入先分岐",
        "property": "payload.delivery",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "58181275e70cf742"
            ],
            [
                "d08cfec816016602"
            ]
        ]
    },
    {
        "id": "37350fc8bbc53daa",
        "type": "json",
        "z": "598b8043837fd2de",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 840,
        "wires": [
            [
                "9e7e11ac7e063e97"
            ]
        ]
    },
    {
        "id": "5584ee1e7824d74f",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">梱包履歴<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              \n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">梱包作業履歴</h1>\n        <button class=\"btn btn-success ms-3\" id=\"product-infor\" onclick=\"saveFormDataAndRedirect(this.id)\">品番を読込</button>\n      </div>\n      \n      <form method=\"post\" class=\"my-2\">\n        <div class=\"info\">\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-2 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>  \n\n            <div class=\"col-6\">\n              <label for=\"product-number\" class=\"col-2 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\" placeholder=\"(※完全一致)\">\n            </div>\n\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"date-range mt-3\">\n\n              <label class=\"col-6 col-form-label fs-5\">作業日：</label>\n              <div class=\"border p-2\">\n\n                <div class=\"d-flex align-items-center\">\n                  <input type=\"date\" class=\"form-control\" id=\"start-date\" name=\"start-date\">\n                  <span class=\"mx-2\">から</span>\n                  <input type=\"date\" class=\"form-control\" id=\"end-date\" name=\"end-date\">\n                  <span class=\"ms-2\">まで</span>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n          <div class=\"col-12 mt-3\">\n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"検索条件クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n\n        </div>  \n      </form>\n\n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6 id-column\">id</th>\n              <th scope=\"col\" class=\"fs-6\">作業日</th>\n              <th scope=\"col\" class=\"fs-6\">客先</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">数量</th>\n            </tr> \n          </thead>\n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>  \n    </div> \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script> \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "97892b98c850bf06"
            ]
        ]
    },
    {
        "id": "c9f6115fb0e55bd5",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#mytable thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "5584ee1e7824d74f"
            ]
        ]
    },
    {
        "id": "97892b98c850bf06",
        "type": "http response",
        "z": "2872108165cbbc2c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 60,
        "wires": []
    },
    {
        "id": "8e0d72fa93377bd7",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction saveFormDataAndRedirect(buttonId) {\n\n    let productNumber = document.getElementById(\"product-number\").value;\n    let location = document.getElementById(\"location\").value;\n    let selectedButton = buttonId;\n    let currentPageURL = window.location.href;\n\n    sessionStorage.setItem('productNumber', productNumber);\n    sessionStorage.setItem('location', location);\n    sessionStorage.setItem('selectedButton', selectedButton);\n    sessionStorage.setItem('currentPageURL', currentPageURL);\n\n    window.location.href = '/qr-reader';\n}\n\nfunction setTodaysDate() {\n\n    let startdate = document.getElementById(\"start-date\");\n    let enddate = document.getElementById(\"end-date\");\n\n    // 現在のUTC日付を取得\n    let currentDate = new Date();\n    // 日付フォーマット（YYYY-MM-DD）に変換\n    let formattedDate = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1).toString().padStart(2, '0') + '-' + currentDate.getDate().toString().padStart(2, '0');\n    \n\n    // 日付入力フィールドに設定\n    startdate.value = formattedDate;\n    enddate.value = formattedDate;\n}\n\nwindow.onload = function () {\n    setTodaysDate();\n};\n\nfunction clearForm() {\n    \n    document.getElementById(\"customer\").value = \"\";\n    document.getElementById(\"product-number\").value = \"\";\n    setTodaysDate();    \n}\n\nfunction formatDate(dateTimeString) {\n    // データベースから取得した日時のフォーマットに合わせて変換を行う\n    var dbDateTime = new Date(dateTimeString);\n\n    // 例: yyyy-mm-dd 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction sendDataToNodeRED(customer, productNumber, startDate, endDate) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/WorkingContents-log`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            customer: customer,\n            productNumber: productNumber,\n            startDate: startDate,\n            endDate: endDate\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"table-body\");\n\n    // テーブルのtbody要素をクリア\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0); //ID\n        let cell2 = row.insertCell(1); //作業日\n        let cell3 = row.insertCell(2); //客先\n        let cell4 = row.insertCell(3); //品番\n        let cell5 = row.insertCell(4); //ものの区分\n        let cell6 = row.insertCell(5); //数量\n\n        cell1.innerHTML = item.WorkingID;\n        cell1.style.display = \"none\";\n        cell2.innerHTML = formatDate(item.StartTime);\n        cell3.innerHTML = item.Customer;\n        cell4.innerHTML = item.ProductName;\n        cell5.innerHTML = item.ProductCategory;\n        cell6.innerHTML = item.Quantity;\n\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // セッションストレージからQRコードの読み取り情報を取得\n    const qrData = sessionStorage.getItem('qrData');\n    const storedSelectedButton = sessionStorage.getItem('selectedButton')\n\n    if (qrData) {\n\n        if (storedSelectedButton === 'product-infor') {\n\n            let locationValue = sessionStorage.getItem('location')\n\n            if (locationValue.trim() !== '') {\n\n                let locationSelect = document.getElementById(\"location\");\n                for (var i = 0; i < locationSelect.options.length; i++) {\n                    if (locationSelect.options[i].value === locationValue) {\n                        locationSelect.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            // qrDataを元のページで処理\n            console.log('QRコードの読み取り情報:', qrData);\n\n            let array = qrData.split(\",\");\n            document.getElementById(\"product-number\").value = array[0];\n\n        } else if (storedSelectedButton === 'stock-storage') {\n\n            let productValue = sessionStorage.getItem('productNumber')\n\n            if (productValue.trim() !== '') {\n                document.getElementById(\"product-number\").value = productValue;\n            }\n\n            let array = qrData.split(\",\");\n            let locationValue = array[0];\n\n            let locationSelect = document.getElementById(\"location\");\n            for (let i = 0; i < locationSelect.options.length; i++) {\n                if (locationSelect.options[i].value === locationValue) {\n                    locationSelect.selectedIndex = i;\n                    break;\n                }\n            }\n        }\n\n    } else {\n        // セッションストレージにQRコードの読み取り情報がない場合の処理\n        console.log('セッションストレージにQRコードの読み取り情報がありません。');\n    }\n\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        let customer = document.getElementById(\"customer\").value;\n        let productNumber = document.getElementById(\"product-number\").value;\n\n        let startDate = document.getElementById(\"start-date\").value;\n        let endDate = document.getElementById(\"end-date\").value;\n\n        sendDataToNodeRED(customer, productNumber, startDate, endDate);\n    });\n\n    let table = document.getElementById(\"mytable\");\n    table.addEventListener(\"click\", function (event) {\n        // クリックされた行を取得\n        const clickedRow = event.target.closest(\"tr\");\n        \n        if (clickedRow) {\n\n            let id = clickedRow.cells[0].textContent.trim();\n            let customer = clickedRow.cells[2].textContent.trim();\n            let productName = clickedRow.cells[3].textContent.trim();\n            let selectedCategory = clickedRow.cells[4].textContent.trim();\n            let packingQuantity = clickedRow.cells[5].textContent.trim();\n            \n            let encodedid = encodeURIComponent(id);\n            let encodedcustomer = encodeURIComponent(customer);\n            let encodedproductName = encodeURIComponent(productName);\n            let encodedselectedCategory = encodeURIComponent(selectedCategory);\n            let encodedpackingQuantity = encodeURIComponent(packingQuantity);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page11-1\" +\n                \"?customer=\" + encodedcustomer +\n                \"&productName=\" + encodedproductName +\n                \"&selectedCategory=\" + encodedselectedCategory +\n                \"&packingQuantity=\" + encodedpackingQuantity +\n                \"&id=\" + encodedid;\n\n            window.location.href = destinationURL;\n        }    \n    });\n\n    \n});\n\n       ",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "c9f6115fb0e55bd5"
            ]
        ]
    },
    {
        "id": "506d06b2d720a9a0",
        "type": "http in",
        "z": "2872108165cbbc2c",
        "name": "",
        "url": "/page11",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "59c85bac2c5d6b04"
            ]
        ]
    },
    {
        "id": "59c85bac2c5d6b04",
        "type": "file in",
        "z": "2872108165cbbc2c",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "3adca2baa4223e74"
            ]
        ]
    },
    {
        "id": "3adca2baa4223e74",
        "type": "function",
        "z": "2872108165cbbc2c",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "8e0d72fa93377bd7"
            ]
        ]
    },
    {
        "id": "d4d901cfa960abcc",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "9bc735f7d90e7fde",
        "client": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "114c4015685b607b"
            ]
        ]
    },
    {
        "id": "114c4015685b607b",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "9bc48fe2c41ef26e"
            ]
        ]
    },
    {
        "id": "9bc48fe2c41ef26e",
        "type": "switch",
        "z": "2872108165cbbc2c",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "ae3ee585724f0281"
            ],
            [
                "99414749c88c4eb7"
            ]
        ]
    },
    {
        "id": "ae3ee585724f0281",
        "type": "switch",
        "z": "2872108165cbbc2c",
        "name": "品番分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "0afce261a7a8b305"
            ],
            [
                "477c937cc5f9401f"
            ]
        ]
    },
    {
        "id": "99414749c88c4eb7",
        "type": "switch",
        "z": "2872108165cbbc2c",
        "name": "品番分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 280,
        "wires": [
            [
                "09eb60f87e06f116"
            ],
            [
                "cc4be3304431b17c"
            ]
        ]
    },
    {
        "id": "0afce261a7a8b305",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE StartTime",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingContents WHERE CAST(StartTime AS DATE) >= 'startDate'  AND CAST(StartTime AS DATE) <= 'endDate'  ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "b4a0ddd28e77c873"
            ]
        ]
    },
    {
        "id": "b4a0ddd28e77c873",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "f52d4c3488534b94"
            ]
        ]
    },
    {
        "id": "477c937cc5f9401f",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE StartTime AND ProductName",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingContents WHERE CAST(StartTime AS DATE) >= 'startDate'  AND CAST(StartTime AS DATE) <= 'endDate' AND ProductName = 'ProductNumber';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ProductNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "b4a0ddd28e77c873"
            ]
        ]
    },
    {
        "id": "09eb60f87e06f116",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE StartTime AND Customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingContents WHERE CAST(StartTime AS DATE) >= 'startDate'  AND CAST(StartTime AS DATE) <= 'endDate' AND Customer = 'customer' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "b4a0ddd28e77c873"
            ]
        ]
    },
    {
        "id": "cc4be3304431b17c",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE StartTime AND ProductName AND Customer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingContents WHERE CAST(StartTime AS DATE) >= 'startDate'  AND CAST(StartTime AS DATE) <= 'endDate' AND ProductName = 'ProductNumber' AND Customer = 'customer';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "startDate",
                "fromt": "str",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "endDate",
                "fromt": "str",
                "to": "payload.endDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "ProductNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "b4a0ddd28e77c873"
            ]
        ]
    },
    {
        "id": "f52d4c3488534b94",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "9bc735f7d90e7fde",
        "client": "",
        "x": 1310,
        "y": 220,
        "wires": []
    },
    {
        "id": "51b62913946c1648",
        "type": "http in",
        "z": "2872108165cbbc2c",
        "name": "梱包作業詳細",
        "url": "/page11-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "3e9b38e4a57e1b57"
            ]
        ]
    },
    {
        "id": "82cb99ceb1da0ed1",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page11\">梱包履歴へ戻る</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">梱包作業詳細</h1>\n        <!-- Button trigger modal -->\n          <button type=\"button\" class=\"btn btn-warning ms-2 mb-1\" id=\"n-point\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">N点照合</button>\n          <button type=\"button\" class=\"btn btn-success ms-2 mb-1\" id=\"inspection-weight\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop2\">重量検査</button>\n\n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">N点照合</h1>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"row\">\n                    \n                    <div class=\"col-5\">\n                      <label for=\"n-productNumber\" class=\"col-6 col-form-label fs-6\">親品番：</label>\n                      <input type=\"text\" class=\"form-control form-control-sm\" id=\"n-productNumber\" name=\"n-productNumber\" disabled>\n                    </div>\n                    <div class=\"col-5\">\n                      <label for=\"productionNumber\" class=\"col-6 col-form-label fs-6\">梱包数：</label>\n                      <input type=\"number\" class=\"form-control form-control-sm\" id=\"productionNumber\" name=\"productionNumber\" disabled>\n                    </div>    \n                      \n                  </div>\n\n                  <div class=\"n-table-container\">\n                    <table id=\"n-table\" class=\"table table-sm table-hover caption-top mt-4\">\n                      <caption class=\"fs-6\">検査結果</caption>\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th scope=\"col\" class=\"fs-6\">LOT</th>\n                          <th scope=\"col\" class=\"fs-6\">判定</th>\n                          <th scope=\"col\" class=\"fs-6\">NG回数</th>\n                        </tr> \n                      </thead>  \n                      <tbody id=\"n-table-body\"></tbody>\n                      </table>\n                  </div>  \n\n                </div>\n                \n              </div>\n            </div>\n          </div> \n\n          <div class=\"modal fade\" id=\"staticBackdrop2\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel2\">重量検査</h1>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"row\">\n                    \n                    <div class=\"col-5\">\n                      <label for=\"w-productNumber\" class=\"col-6 col-form-label fs-6\">親品番：</label>\n                      <input type=\"text\" class=\"form-control form-control-sm\" id=\"w-productNumber\" name=\"w-productNumber\" disabled>\n                    </div>\n                    <div class=\"col-5\">\n                      <label for=\"w-productionNumber\" class=\"col-6 col-form-label fs-6\">梱包数：</label>\n                      <input type=\"number\" class=\"form-control form-control-sm\" id=\"w-productionNumber\" name=\"w-productionNumber\" disabled>\n                    </div>    \n                      \n                  </div>\n\n                  <div class=\"n-table-container\">\n                    <table id=\"w-table\" class=\"table table-sm table-hover caption-top mt-4\">\n                      <caption class=\"fs-6\">検査結果</caption>\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th scope=\"col\" class=\"fs-6\">LOT</th>\n                          <th scope=\"col\" class=\"fs-6\">判定</th>\n                          <th scope=\"col\" class=\"fs-6\">重量(kg)</th>\n                          <th scope=\"col\" class=\"fs-6\">判定修正</th>\n                        </tr> \n                      </thead>  \n                      <tbody id=\"w-table-body\"></tbody>\n                      </table>\n                  </div>  \n\n                </div>\n                \n              </div>\n            </div>\n          </div> \n      </div>\n\n      <div class=\"table-container\">\n        \n        <table id=\"workingtime-table\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">作業情報</caption>\n          <thead class=\"table-light\">\n            <tr>\n              \n              <th scope=\"col\" class=\"fs-6\">作業者</th>\n              <th scope=\"col\" class=\"fs-6\">開始時刻</th>\n              <th scope=\"col\" class=\"fs-6\">終了時刻</th>\n      \n            </tr> \n          </thead>  \n          <tbody id=\"workingtime-table-body\"></tbody>\n        </table>\n\n      </div>\n\n      <div class=\"table-container\">\n        \n        <table id=\"packingpart-table\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">梱包品番</caption>\n          <thead class=\"table-light\">\n            <tr>\n              \n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">梱包数</th>\n      \n            </tr> \n          </thead>  \n          <tbody id=\"packingpart-table-body\"></tbody>\n        </table>\n\n      </div>    \n\n      <div class=\"table-container\">\n        \n        <table id=\"parts-table\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">構成部品</caption>\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">単位数</th>\n              <th scope=\"col\" class=\"fs-6\">梱包必要数</th>\n            </tr> \n          </thead>  \n          <tbody id=\"parts-table-body\"></tbody>\n        </table>\n\n      </div>\n\n      <div class=\"table-container\">\n\n        <table id=\"warehouse-history-table\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">梱包品番入庫履歴</caption>\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">製造番号</th>\n              <th scope=\"col\" class=\"fs-6\">入庫数</th>\n              <th scope=\"col\" class=\"fs-6\">ストック置場所</th>\n            </tr> \n          </thead>  \n          <tbody id=\"warehouse-history-table-body\"></tbody>\n        </table>\n\n      </div>  \n\n      <div class=\"table-container\">\n\n        <table id=\"movement-history-table\" class=\"table table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">部品移動履歴</caption>\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">製造番号</th>\n              <th scope=\"col\" class=\"fs-6\">移動数</th>\n              <th scope=\"col\" class=\"fs-6\">ストック置場所</th>\n            </tr> \n          </thead>  \n          <tbody id=\"movement-history-table-body\"></tbody>\n        </table>\n\n      </div>\n\n\n\n    </div> \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script> \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "709739e7f4feccdb"
            ]
        ]
    },
    {
        "id": "709739e7f4feccdb",
        "type": "http response",
        "z": "2872108165cbbc2c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "e7150fb58080958e",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#parts-table thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "82cb99ceb1da0ed1"
            ]
        ]
    },
    {
        "id": "3e9b38e4a57e1b57",
        "type": "template",
        "z": "2872108165cbbc2c",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction sendDataToNodeRED(workingID) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/NpointCheck-search`);\n\n    socket.onopen = function (event) {\n        socket.send(workingID);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable5(responseData);\n        socket.close();\n    };\n\n    \n}\n\nfunction sendDataToNodeRED2(workingID) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/WeightCheck-search`);\n\n    socket.onopen = function (event) {\n        socket.send(workingID);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable6(responseData);\n        socket.close();\n    };\n\n\n}\n\nfunction displayDataInTable6(data) {\n\n    let tableBody = document.getElementById(\"w-table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//LOT\n        let cell2 = row.insertCell(1);//判定\n        let cell3 = row.insertCell(2);//重量(kg)\n        let cell4 = row.insertCell(3);//修正\n\n\n        cell1.innerHTML = item.Lot;\n\n        // 判定 データ\n        if (item.Result === 0) {\n            cell2.innerHTML = \"合格\";\n        } else if (item.Result === 1) {\n            cell2.innerHTML = \"不合格\";\n\n            // 不合格の場合のみ修正ボタンを追加\n            let editButton = document.createElement(\"button\");\n            editButton.textContent = \"修正\";\n            editButton.className = \"btn btn-sm btn-primary\"; // Bootstrap クラス\n            editButton.onclick = function () {\n                confirmAndEdit(item, row);\n            };\n            cell4.appendChild(editButton);\n        } else if (item.Result === 2) {\n            cell2.innerHTML = \"合格(修正)\";\n        }\n\n        cell3.innerHTML = item.Weight;\n\n    });\n\n    // 修正ボタンの処理\n    function confirmAndEdit(item, row) {\n        if (confirm(\"判定を合格に修正しますか？\")) {\n\n            console.log(item)\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/WeightCheckResult-change`);\n        \n            socket.onopen = function (event) {\n                socket.send(JSON.stringify(item.WorkingID));\n            };\n\n            socket.onmessage = function (event) {\n                var responseData = JSON.parse(event.data);\n                console.log(responseData)\n            \n                socket.close();\n            };\n\n            // 選択した行の LOT を取得して表示\n            let lot = item.Lot;\n            console.log(\"選択された行の LOT:\", lot);\n\n            // テーブルの表示を更新\n            let cell2 = row.cells[1]; // 判定セル\n            cell2.innerHTML = \"合格(修正)\";\n\n            // 修正ボタンを削除\n            let cell4 = row.cells[3]; // 修正セル\n            cell4.innerHTML = \"\";\n\n            alert(`判定が「合格」に変更されました。LOT: ${lot}`);\n        } else {\n            console.log(\"修正をキャンセルしました。\");\n        }\n    }\n\n}\n\nfunction displayDataInTable5(data) {\n\n    let tableBody = document.getElementById(\"n-table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//LOT\n        let cell2 = row.insertCell(1);//判定\n        let cell3 = row.insertCell(2);//NG回数\n        \n\n        cell1.innerHTML = item.Lot;\n        if(item.Result ===0){\n\n            cell2.innerHTML = \"合格\";\n\n        }\n        \n        cell3.innerHTML = item.ErrorCount;\n\n    });\n}\n\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"parts-table-body\");\n    let packingQuantity = parseInt(getQueryParameter(\"packingQuantity\"), 10);\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//ID\n        let cell2 = row.insertCell(1);//品番\n        let cell3 = row.insertCell(2);//ものの区分\n        let cell4 = row.insertCell(3);//単位数\n        let cell5 = row.insertCell(4);//梱包必要数\n\n        cell1.innerHTML = item.ProductID;\n        cell1.style.display = \"none\";\n\n        cell2.innerHTML = item.ComponentName;\n        cell3.innerHTML = item.ComponentCategory;\n        cell4.innerHTML = item.Quantity;\n        cell5.innerHTML = item.Quantity * packingQuantity;\n\n    });\n    \n}\n\nfunction displayDataInTable2(data) {\n\n    let tableBody = document.getElementById(\"movement-history-table-body\");\n    \n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//ID\n        let cell2 = row.insertCell(1);//品番\n        let cell3 = row.insertCell(2);//ものの区分\n        let cell4 = row.insertCell(3);//製造番号\n        let cell5 = row.insertCell(4);//移動数量\n        let cell6 = row.insertCell(5);//ｽﾄｯｸ置場所\n\n        cell1.innerHTML = item.id;\n        cell1.style.display = \"none\";\n\n        \n        cell2.innerHTML = item.productnumber;\n        cell3.innerHTML = item.category;\n        cell4.innerHTML = item.serialnumber;\n        cell5.innerHTML = item.quantity;\n        cell6.innerHTML = item.location;\n\n    });\n\n}\n\nfunction displayDataInTable4(data) {\n\n    let tableBody = document.getElementById(\"warehouse-history-table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//品番\n        let cell2 = row.insertCell(1);//ものの区分\n        let cell3 = row.insertCell(2);//製造番号\n        let cell4 = row.insertCell(3);//移動数量\n        let cell5 = row.insertCell(4);//ｽﾄｯｸ置場所\n        \n        cell1.innerHTML = item.productnumber;\n        cell2.innerHTML = item.category;\n        cell3.innerHTML = item.serialnumber;\n        cell4.innerHTML = item.quantity;\n        cell5.innerHTML = item.location;\n\n    });\n\n}\n\n\nfunction displayDataInTable3(data) {\n\n    let tableBody = document.getElementById(\"workingtime-table-body\");\n    \n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//作業者\n        let cell2 = row.insertCell(1);//開始時刻\n        let cell3 = row.insertCell(2);//終了時刻\n        \n        cell1.innerHTML = item.WorkerName;\n        cell2.innerHTML = formatDateTime(item.StartTime);\n        cell3.innerHTML = item.FinishTime ? formatDateTime(item.FinishTime) : \"<span style='color: red;'>作業が完了されていません</span>\";\n\n        \n    });\n\n    tableBody = document.getElementById(\"packingpart-table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//品番\n        let cell2 = row.insertCell(1);//ものの区分\n        let cell3 = row.insertCell(2);//梱包数\n\n        cell1.innerHTML = item.ProductName;\n        cell2.innerHTML = item.ProductCategory;\n        cell3.innerHTML = item.Quantity;\n\n    });\n\n}\n\n\n\nfunction getQueryParameter(name) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\nconst HOST_NAME = window.location.hostname;\n\nfunction getSelectedComponent(){\n\n    let requestData = {\n        customer: getQueryParameter(\"customer\"),\n        productName: getQueryParameter(\"productName\"),\n        selectedCategory: getQueryParameter(\"selectedCategory\"),\n    };\n\n\n    let socket = new WebSocket(`wss://${HOST_NAME}/Component-search`);\n\n    socket.onopen = function (event) {\n\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction getSelectedMovementHistory(workingID) {\n\n    let socket = new WebSocket(`wss://${HOST_NAME}/WorkingResult-search`);\n    socket.onopen = function (event) {\n        socket.send(workingID);\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        \n        displayDataInTable2(responseData);\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n    \n}\n\nfunction getSelectedMovementHistory2(workingID) {\n\n    let socket = new WebSocket(`wss://${HOST_NAME}/WorkingResult-search2`);\n    socket.onopen = function (event) {\n        socket.send(workingID);\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n\n        displayDataInTable4(responseData);\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction getSelectedWorkingContents(workingID){\n\n    let socket = new WebSocket(`wss://${HOST_NAME}/WorkingContents-search`);\n    socket.onopen = function (event) {\n        socket.send(workingID);\n    };\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n\n        displayDataInTable3(responseData);\n\n        getSelectedComponent();\n        socket.close();\n        \n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let workingID = getQueryParameter(\"id\");\n\n    getSelectedWorkingContents(workingID);\n    getSelectedMovementHistory(workingID);\n    getSelectedMovementHistory2(workingID);\n\n    var modalElement = document.getElementById('staticBackdrop');\n    modalElement.addEventListener('show.bs.modal', function (event) {\n\n        document.getElementById('n-productNumber').value = getQueryParameter(\"productName\");\n        document.getElementById('productionNumber').value = getQueryParameter(\"packingQuantity\");\n\n        sendDataToNodeRED(workingID);\n\n    });\n\n    var modalElement = document.getElementById('staticBackdrop2');\n    modalElement.addEventListener('show.bs.modal', function (event) {\n\n        document.getElementById('w-productNumber').value = getQueryParameter(\"productName\");\n        document.getElementById('w-productionNumber').value = getQueryParameter(\"packingQuantity\");\n\n        sendDataToNodeRED2(workingID);\n\n    });\n    \n});\n      ",
        "output": "str",
        "x": 320,
        "y": 360,
        "wires": [
            [
                "e7150fb58080958e"
            ]
        ]
    },
    {
        "id": "f42e79106448bba6",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "bc32b052595f134e",
        "client": "",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "7654208d69761f80"
            ]
        ]
    },
    {
        "id": "7654208d69761f80",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 420,
        "wires": [
            [
                "5d1757e547502d03"
            ]
        ]
    },
    {
        "id": "5d1757e547502d03",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingContents WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "70a814169fd19509"
            ]
        ]
    },
    {
        "id": "70a814169fd19509",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "336b875d7ed971a5"
            ]
        ]
    },
    {
        "id": "336b875d7ed971a5",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "bc32b052595f134e",
        "client": "",
        "x": 1330,
        "y": 420,
        "wires": []
    },
    {
        "id": "fe13e7b6b6cb99e8",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "defd5cd4828855c2",
        "client": "",
        "x": 230,
        "y": 500,
        "wires": [
            [
                "82c52b11734011c4"
            ]
        ]
    },
    {
        "id": "82c52b11734011c4",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 500,
        "wires": [
            [
                "d7d4ee83f47081c0"
            ]
        ]
    },
    {
        "id": "d7d4ee83f47081c0",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingResult WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WorkingResult WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 500,
        "wires": [
            [
                "e1544947cedf351c"
            ]
        ]
    },
    {
        "id": "e1544947cedf351c",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "3137f36616c91caa"
            ]
        ]
    },
    {
        "id": "3137f36616c91caa",
        "type": "function",
        "z": "2872108165cbbc2c",
        "name": "SELECT FROM Issue",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nvar records = msg.payload;\n\nvar selectQueries = [];\n\nrecords.forEach(function (record) {\n\n    var selectQuery = \"SELECT * FROM Issue WHERE id = \" + record.StockID + \" AND workingday ='\" + formatDateTime(record.workingday) + \"'\";\n    selectQueries.push(selectQuery);\n\n});\n\nmsg.payload = selectQueries;\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 560,
        "wires": [
            [
                "c226c1169a1662b1"
            ]
        ]
    },
    {
        "id": "c226c1169a1662b1",
        "type": "split",
        "z": "2872108165cbbc2c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 560,
        "wires": [
            [
                "65167c55e3029afe"
            ]
        ]
    },
    {
        "id": "65167c55e3029afe",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "32de80258d966cd8"
            ]
        ]
    },
    {
        "id": "32de80258d966cd8",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "bc68521d4ee17eca"
            ]
        ]
    },
    {
        "id": "bc68521d4ee17eca",
        "type": "join",
        "z": "2872108165cbbc2c",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 620,
        "wires": [
            [
                "695f5ec30b1b5d1f"
            ]
        ]
    },
    {
        "id": "695f5ec30b1b5d1f",
        "type": "function",
        "z": "2872108165cbbc2c",
        "name": "flatData",
        "func": "var originalData = msg.payload\n\nvar flatData = [].concat(...originalData);\n\nmsg.payload = flatData\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 620,
        "wires": [
            [
                "a3330faef4a87812"
            ]
        ]
    },
    {
        "id": "a3330faef4a87812",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "defd5cd4828855c2",
        "client": "",
        "x": 1320,
        "y": 620,
        "wires": []
    },
    {
        "id": "fc320c7fceacea47",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "f61696ca3d281277",
        "client": "",
        "x": 240,
        "y": 660,
        "wires": [
            [
                "e2e41bb7a7aa61d2"
            ]
        ]
    },
    {
        "id": "e2e41bb7a7aa61d2",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "1b558d489d75bbff"
            ]
        ]
    },
    {
        "id": "1b558d489d75bbff",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT ProductName, cast(SerialNumber as char) as SerialNumber  FROM WorkingContents WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 660,
        "wires": [
            [
                "e6690ca54fc6ad16"
            ]
        ]
    },
    {
        "id": "e6690ca54fc6ad16",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 660,
        "wires": [
            [
                "16620b8d2785e18e"
            ]
        ]
    },
    {
        "id": "16620b8d2785e18e",
        "type": "function",
        "z": "2872108165cbbc2c",
        "name": "SELECT FROM warehousing",
        "func": "var records = msg.payload;\n\nvar selectQueries = [];\n\nrecords.forEach(function (record) {\n\n    var selectQuery = \"SELECT * FROM warehousing WHERE productnumber = '\" + record.ProductName + \"' AND serialnumber ='\" + record.SerialNumber + \"'\";\n    selectQueries.push(selectQuery);\n\n});\n\nmsg.payload = selectQueries;\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 720,
        "wires": [
            [
                "dc4de1e33bf7ee8e"
            ]
        ]
    },
    {
        "id": "dc4de1e33bf7ee8e",
        "type": "split",
        "z": "2872108165cbbc2c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "2147288f84e41fa2"
            ]
        ]
    },
    {
        "id": "2147288f84e41fa2",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 720,
        "wires": [
            [
                "e925efe2edaf8eee"
            ]
        ]
    },
    {
        "id": "e925efe2edaf8eee",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 720,
        "wires": [
            [
                "1edc861cfcdcd1ab"
            ]
        ]
    },
    {
        "id": "1edc861cfcdcd1ab",
        "type": "join",
        "z": "2872108165cbbc2c",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 780,
        "wires": [
            [
                "723902bb2d13fb04"
            ]
        ]
    },
    {
        "id": "723902bb2d13fb04",
        "type": "function",
        "z": "2872108165cbbc2c",
        "name": "flatData",
        "func": "var originalData = msg.payload\n\nvar flatData = [].concat(...originalData);\n\nmsg.payload = flatData\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 780,
        "wires": [
            [
                "d1d6a96737bb834d"
            ]
        ]
    },
    {
        "id": "d1d6a96737bb834d",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "f61696ca3d281277",
        "client": "",
        "x": 1320,
        "y": 780,
        "wires": []
    },
    {
        "id": "bef329d32dad99bb",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "3d84d5a140e3aa2c",
        "client": "",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "d4336842e3e59845"
            ]
        ]
    },
    {
        "id": "d4336842e3e59845",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 900,
        "wires": [
            [
                "d31f08725777a22d"
            ]
        ]
    },
    {
        "id": "d31f08725777a22d",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WorkingContents WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM NpointCheck WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 900,
        "wires": [
            [
                "fed37e39cfab0e5a"
            ]
        ]
    },
    {
        "id": "fed37e39cfab0e5a",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 900,
        "wires": [
            [
                "25546215f113f053"
            ]
        ]
    },
    {
        "id": "25546215f113f053",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "3d84d5a140e3aa2c",
        "client": "",
        "x": 1310,
        "y": 900,
        "wires": []
    },
    {
        "id": "5741618ba32023f4",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "58d253b42992153d",
        "client": "",
        "x": 230,
        "y": 980,
        "wires": [
            [
                "e6c08daeb4925d47"
            ]
        ]
    },
    {
        "id": "e6c08daeb4925d47",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 980,
        "wires": [
            [
                "af69a016929193f0"
            ]
        ]
    },
    {
        "id": "af69a016929193f0",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WeightCheck WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM WeightCheck WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 980,
        "wires": [
            [
                "8f037ae6e6c03431"
            ]
        ]
    },
    {
        "id": "8f037ae6e6c03431",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 980,
        "wires": [
            [
                "b1c3f049ad71ccb5"
            ]
        ]
    },
    {
        "id": "b1c3f049ad71ccb5",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "58d253b42992153d",
        "client": "",
        "x": 1310,
        "y": 980,
        "wires": []
    },
    {
        "id": "2d25d1f0d252c677",
        "type": "websocket in",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "ad42eab21c95d556",
        "client": "",
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "fd25146444e828b0"
            ]
        ]
    },
    {
        "id": "fd25146444e828b0",
        "type": "json",
        "z": "2872108165cbbc2c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "2899c3370880d82f"
            ]
        ]
    },
    {
        "id": "2899c3370880d82f",
        "type": "change",
        "z": "2872108165cbbc2c",
        "name": "select*from WeightCheck WHERE WorkingID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE WeightCheck SET Result = 2 WHERE WorkingID = workingID;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "workingID",
                "fromt": "str",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "674697de835414be"
            ]
        ]
    },
    {
        "id": "674697de835414be",
        "type": "mysql",
        "z": "2872108165cbbc2c",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "46c7f369e5d8143c"
            ]
        ]
    },
    {
        "id": "46c7f369e5d8143c",
        "type": "websocket out",
        "z": "2872108165cbbc2c",
        "name": "",
        "server": "ad42eab21c95d556",
        "client": "",
        "x": 1340,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0535c7bed0813f9b",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "fef61ea96841dbe2"
            ],
            [
                "484e52e44e123064"
            ]
        ]
    },
    {
        "id": "fef61ea96841dbe2",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 300,
        "wires": [
            [
                "bef30a27d12882f4"
            ],
            [
                "87f9f1630d0151a2"
            ]
        ]
    },
    {
        "id": "484e52e44e123064",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 380,
        "wires": [
            [
                "1b526293afc7f362"
            ],
            [
                "dd331ca6413ea0b8"
            ]
        ]
    },
    {
        "id": "dd331ca6413ea0b8",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "9f270729030f1e38"
            ]
        ]
    },
    {
        "id": "1b526293afc7f362",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where location='Location' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "9f270729030f1e38"
            ]
        ]
    },
    {
        "id": "87f9f1630d0151a2",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where productnumber",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where productnumber='productNumber';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 320,
        "wires": [
            [
                "9f270729030f1e38"
            ]
        ]
    },
    {
        "id": "bef30a27d12882f4",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where productnumber and location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where productnumber='productNumber' and location='Location' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 280,
        "wires": [
            [
                "9f270729030f1e38"
            ]
        ]
    },
    {
        "id": "ae9ae1bc45adcbf2",
        "type": "function",
        "z": "d3321ed8b9250cb1",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "38f1f88a8fdd9e08"
            ]
        ]
    },
    {
        "id": "4b01d510e790a6a3",
        "type": "file in",
        "z": "d3321ed8b9250cb1",
        "name": "ストック置場所読込",
        "filename": "/home/kuwata/ktrg/棚番.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "ae9ae1bc45adcbf2"
            ]
        ]
    },
    {
        "id": "ec470119c8f3a496",
        "type": "http in",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "url": "/page5",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "4b01d510e790a6a3"
            ]
        ]
    },
    {
        "id": "8b4c87e3f4835a13",
        "type": "template",
        "z": "d3321ed8b9250cb1",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#mytable thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "0f74fe85c8bfc977"
            ]
        ]
    },
    {
        "id": "0f74fe85c8bfc977",
        "type": "template",
        "z": "d3321ed8b9250cb1",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">棚卸作業</h1>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\">\n        <div class=\"info\">\n          <div class=\"col-10\">\n            <label for=\"product-number\" class=\"col-4 col-form-label fs-5\">品番：</label>\n            <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\" placeholder=\"(※完全一致)\">\n          </div>\n          <label for=\"location\"  class=\"col-6 col-form-label fs-5\">ｽﾄｯｸ置場所：</label>\n          <div class=\"col-10\">\n              <select id=\"location\" name=\"location\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                \n                {{#choices}}\n                <option>{{.}}</option>\n                {{/choices}}\n\n              </select>\n          </div>\n\n          <div class=\"col-12 mt-3\">\n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"検索条件クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n            <input type=\"button\" value=\"CSV取得\" class=\"btn btn-primary btn-lg\" id=\"csvButton\">\n          </div>\n\n        </div>  \n      </form>\n\n      <div class=\"table-container\">\n      <table id=\"mytable\" class=\"table table-hover my-4\">\n        <thead class=\"table-light\">\n          <tr>\n            <th scope=\"col\" class=\"fs-6\">ｽﾄｯｸ置場所</th>\n            <th scope=\"col\" class=\"fs-6\">品番</th>\n            <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n            <th scope=\"col\" class=\"fs-6\">数量</th>\n            <th scope=\"col\" class=\"fs-6\">加工指示書</th>\n          </tr> \n        </thead>\n        <tbody id=\"table-body\"></tbody>\n      </table>\n      </div>  \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "173c039a0369cfa4"
            ]
        ]
    },
    {
        "id": "173c039a0369cfa4",
        "type": "http response",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "38f1f88a8fdd9e08",
        "type": "template",
        "z": "d3321ed8b9250cb1",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction sendDataToNodeRED(productNumber, location) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/inventory-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: 'search',\n            productNumber: productNumber,\n            location: location\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\nfunction sendCSVDataToNodeRED(productNumber, location) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/inventory-csvdata`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            selectedAction: 'csv',\n            productNumber: productNumber,\n            location: location\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        var text;\n        if (typeof event.data === 'string') {\n            // すでに文字列の場合\n            text = event.data;\n        } else {\n            // バイナリデータの場合\n            text = new TextDecoder('utf-8').decode(event.data);\n        }\n\n        var blob = new Blob([new Uint8Array([0xEF, 0xBB, 0xBF]), text], { type: 'text/csv; charset=UTF-8' });\n        var link = document.createElement('a');\n        var currentTime = new Date();\n        var fileName = 'data_' + currentTime.getFullYear() + (currentTime.getMonth() + 1) + currentTime.getDate() +\n            currentTime.getHours() + currentTime.getMinutes() + currentTime.getSeconds() + '.csv';\n\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileName;\n        link.click();\n\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        let productNumber = document.getElementById(\"product-number\").value;\n        let location = document.getElementById(\"location\").value;\n        sendDataToNodeRED(productNumber, location);\n    });\n\n    let csvButton = document.getElementById('csvButton');\n    csvButton.addEventListener('click', function () {\n        let productNumber = document.getElementById(\"product-number\").value;\n        let location = document.getElementById(\"location\").value;\n        sendCSVDataToNodeRED(productNumber, location);\n    });\n\n});\n\nfunction clearForm() {\n\n    document.getElementById(\"product-number\").value = \"\";\n    document.getElementById(\"location\").selectedIndex = 0;\n    let label = document.getElementById(\"location-label\");\n    label.classList.remove(\"visually-hidden\");\n    label.style.display = \"block\";\n\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n    let tableBody = document.getElementById(\"table-body\");\n\n    // テーブルのtbody要素をクリア\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0);\n        let cell2 = row.insertCell(1);\n        let cell3 = row.insertCell(2);\n        let cell4 = row.insertCell(3);\n        let cell5 = row.insertCell(4);\n\n        cell1.innerHTML = item.location;\n        cell2.innerHTML = item.productnumber;\n        cell3.innerHTML = item.category;\n        cell4.innerHTML = item.quantity;\n        cell5.innerHTML = item.serialnumber;   \n    });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 680,
        "y": 60,
        "wires": [
            [
                "8b4c87e3f4835a13"
            ]
        ]
    },
    {
        "id": "26ba38891f942520",
        "type": "websocket in",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "server": "40f2985809626fe5",
        "client": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "3f38fcea8efeb730"
            ]
        ]
    },
    {
        "id": "3f38fcea8efeb730",
        "type": "json",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "bbe76fd8d6cf7046"
            ]
        ]
    },
    {
        "id": "585856fe36ce5abd",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 180,
        "wires": [
            [
                "bbae6e7dcbd94200"
            ],
            [
                "e35d56b89bd0c4d2"
            ]
        ]
    },
    {
        "id": "bbae6e7dcbd94200",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "4faab428967a39de"
            ],
            [
                "336c3af600730259"
            ]
        ]
    },
    {
        "id": "e35d56b89bd0c4d2",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "条件分岐2",
        "property": "payload.location",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 220,
        "wires": [
            [
                "c4694f049445fa36"
            ],
            [
                "2489bfd4ff95c829"
            ]
        ]
    },
    {
        "id": "4faab428967a39de",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where productnumber and location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where productnumber='productNumber' and location='Location' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "9c1d0d2ad3f0dfde"
            ]
        ]
    },
    {
        "id": "336c3af600730259",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where productnumber",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where productnumber='productNumber';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "productNumber",
                "fromt": "str",
                "to": "payload.productNumber",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "9c1d0d2ad3f0dfde"
            ]
        ]
    },
    {
        "id": "c4694f049445fa36",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock where location ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock where location='Location' ;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Location",
                "fromt": "str",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "9c1d0d2ad3f0dfde"
            ]
        ]
    },
    {
        "id": "2489bfd4ff95c829",
        "type": "change",
        "z": "d3321ed8b9250cb1",
        "name": "select*from stock",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select  id, workingday, location, category, customer, productnumber, quantity, cast(serialnumber as char) as serialnumber, cipsnumber from stock;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 240,
        "wires": [
            [
                "9c1d0d2ad3f0dfde"
            ]
        ]
    },
    {
        "id": "9c1d0d2ad3f0dfde",
        "type": "mysql",
        "z": "d3321ed8b9250cb1",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1380,
        "y": 180,
        "wires": [
            [
                "b1708dc8f8573806"
            ]
        ]
    },
    {
        "id": "b1708dc8f8573806",
        "type": "json",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1510,
        "y": 180,
        "wires": [
            [
                "2fe360d3040477ea"
            ]
        ]
    },
    {
        "id": "2fe360d3040477ea",
        "type": "websocket out",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "server": "40f2985809626fe5",
        "client": "",
        "x": 1700,
        "y": 180,
        "wires": []
    },
    {
        "id": "3d87c8d5a667cedc",
        "type": "csv",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1630,
        "y": 340,
        "wires": [
            [
                "30feb83e1a29fa98"
            ]
        ]
    },
    {
        "id": "4eeff5e269911c9a",
        "type": "websocket in",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "server": "cdbfbfa6674c7597",
        "client": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "3f38fcea8efeb730"
            ]
        ]
    },
    {
        "id": "bbe76fd8d6cf7046",
        "type": "switch",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "property": "payload.selectedAction",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "search",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "csv",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "585856fe36ce5abd"
            ],
            [
                "0535c7bed0813f9b"
            ]
        ]
    },
    {
        "id": "9f270729030f1e38",
        "type": "mysql",
        "z": "d3321ed8b9250cb1",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1380,
        "y": 340,
        "wires": [
            [
                "de39254488611298"
            ]
        ]
    },
    {
        "id": "de39254488611298",
        "type": "json",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1510,
        "y": 340,
        "wires": [
            [
                "3d87c8d5a667cedc"
            ]
        ]
    },
    {
        "id": "30feb83e1a29fa98",
        "type": "websocket out",
        "z": "d3321ed8b9250cb1",
        "name": "",
        "server": "cdbfbfa6674c7597",
        "client": "",
        "x": 1800,
        "y": 340,
        "wires": []
    },
    {
        "id": "37a63eee1c5ae69e",
        "type": "http in",
        "z": "41ea8b151ef715c6",
        "name": "",
        "url": "/default-view",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "d6bf8a8a1c604537"
            ]
        ]
    },
    {
        "id": "6989244201214498",
        "type": "http response",
        "z": "41ea8b151ef715c6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f86a1ec874c627e",
        "type": "mysql",
        "z": "41ea8b151ef715c6",
        "mydb": "93adc04920199006",
        "name": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "bd813aba152e9c8e"
            ]
        ]
    },
    {
        "id": "d6bf8a8a1c604537",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "select*from",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM id;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3f86a1ec874c627e"
            ]
        ]
    },
    {
        "id": "bd813aba152e9c8e",
        "type": "json",
        "z": "41ea8b151ef715c6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 120,
        "wires": [
            [
                "6989244201214498"
            ]
        ]
    },
    {
        "id": "767afa7ba5e7a7d8",
        "type": "websocket in",
        "z": "41ea8b151ef715c6",
        "name": "",
        "server": "2af1d373916e2211",
        "client": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "aef356c9e9a4cff6"
            ]
        ]
    },
    {
        "id": "aef356c9e9a4cff6",
        "type": "json",
        "z": "41ea8b151ef715c6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "4aaa0f7ba17e932a"
            ]
        ]
    },
    {
        "id": "7cf62206cbc3b631",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "insert-data",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "insert into id values('code','name','customer');",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "code",
                "fromt": "str",
                "to": "payload.staffcode",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "name",
                "fromt": "str",
                "to": "payload.staffname",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 240,
        "wires": [
            [
                "d3f5dd2de26116cc"
            ]
        ]
    },
    {
        "id": "d3f5dd2de26116cc",
        "type": "mysql",
        "z": "41ea8b151ef715c6",
        "mydb": "93adc04920199006",
        "name": "",
        "x": 800,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4aaa0f7ba17e932a",
        "type": "switch",
        "z": "41ea8b151ef715c6",
        "name": "条件分岐",
        "property": "payload.selectedAction",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "search",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "edit",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "6e25cc589aa53956"
            ],
            [
                "7cf62206cbc3b631"
            ],
            [
                "b2ad281bf3f28e9a"
            ],
            [
                "b64cac9f7dfda6fb"
            ]
        ]
    },
    {
        "id": "b64cac9f7dfda6fb",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "delete-data",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "delete from id where code=staffcode",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffcode",
                "fromt": "str",
                "to": "payload.staffcode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "d3f5dd2de26116cc"
            ]
        ]
    },
    {
        "id": "6e25cc589aa53956",
        "type": "switch",
        "z": "41ea8b151ef715c6",
        "name": "条件分岐2",
        "property": "payload.staffcode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "75f966f64ca9d25d"
            ],
            [
                "db1fa709f2f6b628"
            ]
        ]
    },
    {
        "id": "75f966f64ca9d25d",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "select*from id where code",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from id where code=staffcode",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffcode",
                "fromt": "str",
                "to": "payload.staffcode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 180,
        "wires": [
            [
                "d5da7527815b6528"
            ]
        ]
    },
    {
        "id": "db1fa709f2f6b628",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "select*from id where name",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from id where name like '%staffname%';",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffname",
                "fromt": "str",
                "to": "payload.staffname",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 220,
        "wires": [
            [
                "d5da7527815b6528"
            ]
        ]
    },
    {
        "id": "d5da7527815b6528",
        "type": "mysql",
        "z": "41ea8b151ef715c6",
        "mydb": "93adc04920199006",
        "name": "",
        "x": 1020,
        "y": 200,
        "wires": [
            [
                "1822c1945ebb321a"
            ]
        ]
    },
    {
        "id": "1822c1945ebb321a",
        "type": "json",
        "z": "41ea8b151ef715c6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "e75687884f1a5ff2"
            ]
        ]
    },
    {
        "id": "e75687884f1a5ff2",
        "type": "websocket out",
        "z": "41ea8b151ef715c6",
        "name": "",
        "server": "2af1d373916e2211",
        "client": "",
        "x": 1330,
        "y": 200,
        "wires": []
    },
    {
        "id": "b2ad281bf3f28e9a",
        "type": "change",
        "z": "41ea8b151ef715c6",
        "name": "update-data",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE id SET customer = 'Customer' WHERE code = staffcode;",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Customer",
                "fromt": "str",
                "to": "payload.customer",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "staffcode",
                "fromt": "str",
                "to": "payload.staffcode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "d3f5dd2de26116cc"
            ]
        ]
    },
    {
        "id": "65f922ac566601fc",
        "type": "http response",
        "z": "41ea8b151ef715c6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "5c1bab2ba7e882bf",
        "type": "template",
        "z": "41ea8b151ef715c6",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">社員マスタ</h1>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\" id=\"myForm\">\n        <div class=\"info\">\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"staffcode\" class=\"col-6 col-form-label fs-5\">コード：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"staffcode\" name=\"staffcode\">\n            </div>\n            <div class=\"col-6\">\n              <label for=\"staffname\" class=\"col-6 col-form-label fs-5\">名前：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"staffname\" name=\"staffname\">\n            </div>\n\n            <div class=\"col-12 mb-4\">  \n              <legend class=\"col-form-label fs-5\">得意先：</legend>\n              <fieldset class=\"border p-2 mt-3\">\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"全部\" onchange=\"checkAll(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox1\">全部</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"LIXIL（本社）\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox1\">LIXIL</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"TOTOバスクリエイト\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox2\">TBC</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"TOTOハイリビング\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox3\">THL</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" value=\"TOTO(株)トイレ空間\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox4\">TS</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox5\" value=\"TOTO(株) 水栓事業部\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox5\">TAT 水栓</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox6\" value=\"TOTO(株)水電生産管理Ｇ\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox6\">TAT 水電</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox7\" value=\"TOTO(株) 電温製造課\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox7\">TAT 電温</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox8\" value=\"ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ(旧 高木工業)\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox8\">ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox9\" value=\"YKK AP\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox9\">YKK AP</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox10\" value=\"コムラ\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox10\">コムラ</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox11\" value=\"有光工業㈱\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox11\">有光工業</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox12\" value=\"信和工業\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox12\">信和工業</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox13\" value=\"アイチ\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox14\">アイチ</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox14\" value=\"泰成興業\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox14\">泰成興業</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox15\" value=\"相互ネジ\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox13\">相互ネジ</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox16\" value=\"大宝工業 関西カンパニー\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox14\">大宝工業</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox17\" value=\"㈱三栄商会\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox14\">三栄商会</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox18\" value=\"林口工業㈱\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox14\">林口工業</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox19\" value=\"その他\" onchange=\"checkOther(this)\">\n                  <label class=\"form-check-label fs-5\" for=\"inlineCheckbox15\">その他</label>\n                </div>\n              </fieldset>\n            </div>\n            \n          </div>\n          \n          <input type=\"submit\" value=\"検索\" class=\"btn btn-secondary btn-lg\" data-action=\"search\">\n          <input type=\"submit\" value=\"登録\" class=\"btn btn-primary btn-lg\" data-action=\"add\">\n          <input type=\"submit\" value=\"更新\" class=\"btn btn-primary btn-lg\" data-action=\"edit\">\n          <input type=\"submit\" value=\"削除\" class=\"btn btn-danger btn-lg\" data-action=\"delete\">\n\n        </div>          \n      </form>\n      \n      <div class=\"table-container table-responsive\">\n        <table class=\"table table-hover\">\n          <thead class=\"table-light\">\n            <tr class=\"align-top\">\n              <th scope=\"col\" class=\"fs-6\">コード</th>\n              <th scope=\"col\" class=\"fs-6\">名前</th>\n              <th scope=\"col\" class=\"fs-6\">得意先</th>\n            </tr> \n          </thead>\n        </table>  \n\n        <div class=\"table-body-container\">\n          <table id=\"mytable\" class=\"table table-hover mb-4\">\n            <tbody id=\"employee-table-body\"></tbody>\n          </table>\n        </div>  \n\n      </div>   \n      \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>       \n  </body>\n</html>\n",
        "output": "str",
        "x": 530,
        "y": 60,
        "wires": [
            [
                "65f922ac566601fc"
            ]
        ]
    },
    {
        "id": "7afe6ac2a5101b7a",
        "type": "template",
        "z": "41ea8b151ef715c6",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    position: relative;\n    overflow: hidden;\n}\n\n.table-body-container {\n    max-height: 300px; /* ヘッダーが固定される高さを設定 */\n    overflow-y: scroll;\n}\n\n/* スクロール時にヘッダーを固定 */\nthead tr {\n    position: sticky;\n    top: 0;\n    background-color: white;\n    z-index: 1;\n}\n\n/* ヘッダーのth要素に幅を設定 */\n.table th {\n    width: 33%;\n}\n\n/* ボディのtd要素に幅を設定 */\n.table td {\n    width: 33%;\n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}",
        "output": "str",
        "x": 410,
        "y": 60,
        "wires": [
            [
                "5c1bab2ba7e882bf"
            ]
        ]
    },
    {
        "id": "4cf9aa00aec28278",
        "type": "template",
        "z": "41ea8b151ef715c6",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const API_URL = '/default-view';\n\n    fetch(API_URL)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('HTTPエラー: ' + response.status);\n            }\n            return response.json();\n        })\n        .then(data => {\n            const tbody = document.getElementById('employee-table-body');\n            const replacements = {\n                'LIXIL（本社）': 'LIXIL',\n                'TOTOバスクリエイト': 'TBC',\n                'TOTOハイリビング': 'THL',\n                'TOTO(株)トイレ空間': 'TS',\n                'TOTO(株) 水栓事業部': 'TAT 水栓',\n                'TOTO(株)水電生産管理Ｇ': 'TAT 水電',\n                'TOTO(株) 電温製造課': 'TAT 電温',\n                'ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ(旧 高木工業)': 'ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ',\n                '有光工業㈱': '有光工業',\n                '大宝工業 関西カンパニー': '大宝工業',\n                '㈱三栄商会': '三栄商会',\n                '林口工業㈱': '林口工業'\n\n            };\n\n            // customerの置換処理関数\n            const replaceCustomer = (customer) => {\n                if (!customer || customer.trim() === '') {\n                    return ''; // 空白かnullの場合\n                }\n                // replacementsに基づいて置換\n                for (let [key, value] of Object.entries(replacements)) {\n                    if (customer.includes(key)) {\n                        return customer.replace(key, value);\n                    }\n                }\n                return customer; // 置換対象がない場合\n            };\n\n            data.forEach(employee => {\n                const row = tbody.insertRow();\n                const codeCell = row.insertCell(0);\n                const nameCell = row.insertCell(1);\n                const customerCell = row.insertCell(2);\n\n                // セルにデータを挿入\n                codeCell.textContent = employee.code || '';\n                nameCell.textContent = employee.name || '';\n                customerCell.textContent = replaceCustomer(employee.customer);\n            });\n        })\n        .catch(error => {\n            console.error('エラー:', error);\n        });\n});\n\nfunction sendDataToNodeRED(data, successCallback, errorCallback) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/submit-data`);\n\n        socket.onopen = function (event) {\n            socket.send(data);\n\n            let dataObj = JSON.parse(data);\n            let selectedAction = dataObj.selectedAction;\n\n            if (selectedAction !== 'search') {\n                socket.close();\n            }\n        };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n        if (errorCallback) {\n            errorCallback();\n        }\n        socket.close();\n    };\n\n    socket.onmessage = function (event) {\n\n        let dataObj = JSON.parse(data);\n        let selectedAction = dataObj.selectedAction;\n\n        if (selectedAction === 'search') {\n            var responseData = JSON.parse(event.data);\n            console.log(\"Node-REDからのレスポンス:\", responseData);\n\n            // テーブルを検索内容の結果に更新\n            let tbody = document.getElementById('employee-table-body');\n            while (tbody.firstChild) {\n                tbody.removeChild(tbody.firstChild);\n            }\n\n            responseData.forEach(function (employee) {\n                let row = tbody.insertRow();\n\n                let codeCell = row.insertCell(0);\n                let nameCell = row.insertCell(1);\n                let customerCell = row.insertCell(2);\n\n                codeCell.textContent = employee.code;\n                nameCell.textContent = employee.name;\n\n                if (employee.customer === null || employee.customer.trim() === '') {\n                    customerCell.textContent = ''; // 空白かnullの場合は何も表示しない\n                } else {\n                    // 置換したい文字列とその置換後の文字列を定義\n                    const replacements = {\n                        'LIXIL（本社）': 'LIXIL',\n                        'TOTOバスクリエイト': 'TBC',\n                        'TOTOハイリビング': 'THL',\n                        'TOTO(株)トイレ空間': 'TS',\n                        'TOTO(株) 水栓事業部': 'TAT 水栓',\n                        'TOTO(株)水電生産管理Ｇ': 'TAT 水電',\n                        'TOTO(株) 電温製造課': 'TAT 電温',\n                        'ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ(旧 高木工業)': 'ﾀｶﾗｽﾀﾝﾀﾞｰﾄﾞ',\n                        '有光工業㈱': '有光工業',\n                        '大宝工業 関西カンパニー': '大宝工業',\n                        '㈱三栄商会': '三栄商会',\n                        '林口工業㈱': '林口工業'\n                    };\n\n                    // 文字列の置換処理\n                    let replacedCustomer = employee.customer;\n                    for (const [key, value] of Object.entries(replacements)) {\n                        replacedCustomer = replacedCustomer.split(key).join(value);\n                    }\n\n                    customerCell.textContent = replacedCustomer;\n                }\n\n            });\n            socket.close();\n        }\n\n    };\n\n    socket.onclose = function (event) {\n        if (event.wasClean) {\n            if (successCallback) {\n                successCallback();\n            }\n        } else {\n            if (errorCallback) {\n                errorCallback();\n            }\n        }\n    };\n}\n\nfunction convertFullwidthToHalfwidth(str) {\n    // 全角空白（全角スペース）を半角空白（半角スペース）に変換\n    return str.replace(/[０-９　]/g, function (match) {\n        if (match === '　') {\n            return ' ';\n        } else {\n            return String.fromCharCode(match.charCodeAt(0) - 0xfee0);\n        }\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let myForm = document.getElementById('myForm');\n\n    myForm.addEventListener('submit', function (event) {\n        event.preventDefault();\n\n        let staffcode = document.getElementById(\"staffcode\").value;\n        let staffname = document.getElementById(\"staffname\").value;\n\n        staffcode = convertFullwidthToHalfwidth(staffcode);\n        staffname = convertFullwidthToHalfwidth(staffname);\n\n        let selectedAction = myForm.querySelector('input[type=submit]:hover').getAttribute('data-action');\n\n        const checkboxes = document.querySelectorAll('.form-check-input');\n        const selectedOptions = [];\n\n        checkboxes.forEach((checkbox) => {\n            if (checkbox.checked) {\n                selectedOptions.push(checkbox.value);\n            }\n        });\n\n        const customer = selectedOptions.join(',');\n\n        let requestData = {\n            selectedAction: selectedAction,\n            staffcode: staffcode,\n            staffname: staffname,\n            customer: customer\n        };\n\n        // Node-REDにHTTPリクエストを送信\n        switch (selectedAction) {\n            case 'search':\n                \n                if (staffcode.trim() === '' && staffname.trim() === '') {\n                    alert('コードと名前どちらかを入力してください。');\n                    return;\n                }                \n                sendDataToNodeRED(JSON.stringify(requestData));\n                break;\n\n            case 'add':\n            case 'delete':\n            case 'edit':\n                \n                if (staffcode.trim() === '' || staffname.trim() === '') {\n                    alert('コードと名前を入力してください。');\n                    return;\n                }\n                sendDataToNodeRED(\n                    JSON.stringify(requestData),\n                    function () {\n                        if(selectedAction === 'add'){\n                            var phrase = '新規登録'\n                        } else if (selectedAction === 'edit') {\n                            phrase = '更新';    \n                        }else{\n                            var phrase = '削除'\n                        }\n                        alert(phrase + \"しました。\");\n                        // 成功したらページをリロードする\n                        setTimeout(function () {\n                            location.reload();\n                        }, 1000); \n                    },\n                );\n                break;\n        }\n    });\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const staffCodeInput = document.getElementById(\"staffcode\");\n    const staffNameInput = document.getElementById(\"staffname\");\n    const table = document.getElementById(\"mytable\");\n\n    table.addEventListener(\"click\", function (event) {\n        // クリックされた行を取得\n        const clickedRow = event.target.closest(\"tr\");\n\n        if (clickedRow) {\n            const code = clickedRow.cells[0].textContent.trim();\n            const name = clickedRow.cells[1].textContent.trim();\n\n            staffCodeInput.value = code;\n            staffNameInput.value = name;\n\n            const castomer = clickedRow.cells[2].textContent.trim();\n\n            if (castomer !== null && castomer !== \"\") {\n                // カンマ区切りの値を分割して配列に\n                const castomerValues = castomer.split(\",\");\n\n                // チェックボックス要素を取得\n                const checkboxes = document.querySelectorAll(\".form-check-input\");\n\n                // チェックボックスの選択状態を設定\n                checkboxes.forEach(checkbox => {\n                    const checkboxLabel = checkbox.parentElement.querySelector(\".form-check-label\");\n                    const checkboxLabelText = checkboxLabel.textContent.trim();\n\n                    // チェックボックスのラベルテキストとcastomerValuesを比較し、選択状態を設定\n                    checkbox.checked = castomerValues.includes(checkboxLabelText);\n                });\n            }\n        }\n    });\n});\n\nfunction checkAll(checkbox) {\n    const checkboxes = document.querySelectorAll(\".form-check-input\");\n    if (checkbox.checked) {\n        checkboxes.forEach((cb) => {\n            if (cb.value !== \"全部\") {\n                cb.disabled = true;\n            }\n        });\n    } else {\n        checkboxes.forEach((cb) => {\n            cb.disabled = false;\n        });\n    }\n}\n\nfunction checkOther(checkbox) {\n    const allCheckbox = document.getElementById(\"inlineCheckbox1\");\n    if (checkbox.checked) {\n        allCheckbox.checked = false;\n        allCheckbox.disabled = true;\n    } else {\n        allCheckbox.disabled = false;\n    }\n}\n",
        "output": "str",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "7afe6ac2a5101b7a"
            ]
        ]
    },
    {
        "id": "5b64bcacc0f4488d",
        "type": "http in",
        "z": "41ea8b151ef715c6",
        "name": "",
        "url": "/page6",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "4cf9aa00aec28278"
            ]
        ]
    },
    {
        "id": "c58df936b185e941",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">製品マスタ検索</h1>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\" id=\"myForm\">\n        <div class=\"info\">\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>  \n\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"productName\" class=\"col-6 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"productName\" name=\"productName\">\n            </div>\n            \n          </div>\n\n          <div class=\"col-10 my-4\"> \n            <input type=\"submit\" value=\"検索\" class=\"btn btn-secondary btn-lg\" id=\"search\">\n            <input type=\"submit\" value=\"新規登録\" class=\"btn btn-primary btn-lg\" id=\"add\">\n          </div>\n          \n        </div>          \n      </form>\n      \n      <div class=\"table-container table-responsive\">\n        <table class=\"table table-hover\">\n          <thead class=\"table-light\">\n            <tr class=\"align-top\">\n              <th scope=\"col\" class=\"fs-6 id-column\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">客先</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">ストック置き場所</th>\n              <th scope=\"col\" class=\"fs-6\">棚番号</th>\n            </tr> \n          </thead>\n          <tbody id=\"table-body\"></tbody>\n        </table>  \n\n      </div>   \n      \n    </div>\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>       \n  </body>\n</html>\n",
        "output": "str",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "abd5b7fd14272f40"
            ]
        ]
    },
    {
        "id": "38bc8761233d8600",
        "type": "http in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "url": "/page9",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "2843bb22df2aa153"
            ]
        ]
    },
    {
        "id": "abd5b7fd14272f40",
        "type": "http response",
        "z": "c158cdacc7de9eea",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 60,
        "wires": []
    },
    {
        "id": "23ef078442980a06",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\n/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 600px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n\n/* スクロール時にヘッダーを固定 */\nthead tr {\n    white-space: nowrap;\n    width: 100%;\n    position: sticky;\n    top: 0;\n    background-color: white;\n    z-index: 1;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n.id-column {\n  display: none;\n}",
        "output": "str",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "c58df936b185e941"
            ]
        ]
    },
    {
        "id": "55d1dc88a03aaaeb",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction convertFullwidthToHalfwidth(str) {\n    // 全角空白（全角スペース）を半角空白（半角スペース）に変換\n    return str.replace(/[０-９　]/g, function (match) {\n        if (match === '　') {\n            return ' ';\n        } else {\n            return String.fromCharCode(match.charCodeAt(0) - 0xfee0);\n        }\n    });\n}\n\nfunction sendDataToNodeRED(requestData) {\n\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/ProductMaster-search`);\n\n    socket.onopen = function (event) {\n        \n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n}\n\nfunction displayDataInTable(data) {\n    \n    let tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//ID\n        let cell2 = row.insertCell(1);//客先\n        let cell3 = row.insertCell(2);//品番\n        let cell4 = row.insertCell(3);//ものの区分\n        let cell5 = row.insertCell(4);//ストック置き場所\n        let cell6 = row.insertCell(5);//棚番号\n        \n        cell1.innerHTML = item.ProductID;\n        cell1.style.display = \"none\";\n\n        cell2.innerHTML = item.Customer;\n\n        cell3.innerHTML = item.ProductName;\n\n        cell4.innerHTML = item.ProductCategory;\n\n        if(item.Location === 'null'){\n            item.Location = null\n        }\n\n        cell5.innerHTML = item.Location;\n\n        cell6.innerHTML = item.ShelfNumber;\n\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let myForm = document.getElementById('myForm');\n\n    myForm.addEventListener('submit', function (event) {\n        event.preventDefault();\n\n        let customer = document.getElementById(\"customer\").value;\n        let productName = document.getElementById(\"productName\").value;\n\n        customer = convertFullwidthToHalfwidth(customer);\n        productName = convertFullwidthToHalfwidth(productName);\n\n        let requestData = {\n            customer: customer,\n            productName: productName\n        };\n\n        sendDataToNodeRED(requestData);\n\n    });\n\n\n    const addButton  = document.getElementById(\"add\");\n    addButton .addEventListener(\"click\", function (event) {\n\n        let destinationURL = \"/page9-1\";\n\n        window.location.href = destinationURL;\n        \n    });\n\n    let table = document.getElementById(\"table-body\");\n    table.addEventListener(\"click\", function (event) {\n\n        // クリックされた行を取得\n        let clickedRow = event.target.closest(\"tr\");\n        \n        if (clickedRow) {\n            let productID = clickedRow.cells[0].textContent.trim();\n            let customer = clickedRow.cells[1].textContent.trim();\n            let productName = clickedRow.cells[2].textContent.trim();\n            let productCategory = clickedRow.cells[3].textContent.trim();\n            let location = clickedRow.cells[4].textContent.trim();\n            let shelfNumber = clickedRow.cells[5].textContent.trim();\n\n            let encodedproductID = encodeURIComponent(productID);\n            let encodedcustomer = encodeURIComponent(customer);\n            let encodedproductName = encodeURIComponent(productName);\n            let encodedproductCategory = encodeURIComponent(productCategory);\n            let encodedlocation = encodeURIComponent(location);\n            let encodedshelfNumber = encodeURIComponent(shelfNumber);\n\n            // エンコードされた変数を使用してURLを構築\n            let destinationURL = \"/page9-1\" +\n                \"?productID=\" + encodedproductID +\n                \"&customer=\" + encodedcustomer +\n                \"&productName=\" + encodedproductName +\n                \"&productCategory=\" + encodedproductCategory +\n                \"&location=\" + encodedlocation +\n                \"&shelfNumber=\" + encodedshelfNumber;\n\n                window.location.href = destinationURL;\n        }\n\n        \n    });\n\n\n\n});\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "23ef078442980a06"
            ]
        ]
    },
    {
        "id": "faa303cc287a4aba",
        "type": "http in",
        "z": "c158cdacc7de9eea",
        "name": "製品マスタ情報",
        "url": "/page9-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "4fdf2f9d47565630"
            ]
        ]
    },
    {
        "id": "ac9741b1fc4c897f",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    width: 100%;\n    overflow: auto;\n    height: 600px;\n    position: relative;\n}\n\n#mytable thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#mytable th.fixed-left, #mytable tbody td:nth-child(2) {\n  white-space: nowrap;\n  position: sticky;\n  left: 0; /* 進捗状況と品番の列を左端に固定 */\n  z-index: 1;\n  background-color: #fff; /* 固定列の背景色を設定 */\n  \n}\n\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n#inspection-point {\n  height: calc(0.5rem + 60px); /* select要素と同じ高さ */\n  font-size: 1.25rem !important;\n  font-weight: bold !important;\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n",
        "output": "str",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "a92d5503a0824fed"
            ]
        ]
    },
    {
        "id": "a92d5503a0824fed",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>          \n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n               <a class=\"nav-link white-text\" href=\"/page9\">製品マスタ検索へ戻る</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"border-bottom-solid\">\n\n        <div class=\"row align-items-center\">\n\n          <div class=\"col-2\">\n            <h1 class=\"mb-1\">製品マスタ</h1>\n          </div>  \n\n          <div class=\"col-4\">\n            <div class=\"row\">\n              <div class=\"col align-self-start\">\n                <button class=\"btn btn-primary ms-2 mb-1\" id=\"add\">登録</button>\n                <button class=\"btn btn-primary ms-2 mb-1\" id=\"edit\">更新</button>\n                <button class=\"btn btn-danger ms-2 mb-1\" id=\"delete\">削除</button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-3\">\n            <div class=\"row m-1\">\n              <label for=\"last-updated\" class=\"col-form-label col-form-label-sm\">最終更新日：</label>\n              <input type=\"text\" class=\"form-control form-control-sm m-1\" id=\"last-updated\" readonly>\n            </div>\n          </div>\n\n          <div class=\"col-3\"> \n            <div class=\"row m-1\"> \n              <label for=\"last-changer\" class=\"col-form-label col-form-label-sm\">最終更新者：</label>\n              <input type=\"text\" class=\"form-control form-control-sm m-1\" id=\"last-changer\" readonly>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n\n      <form method=\"post\" name=\"myform\" id=\"myform\"> \n\n        <div class=\"info\">\n          \n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>\n\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"product-number\" class=\"col-6 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg col-form-label\" id=\"product-number\" name=\"product-number\">\n            </div>\n\n            <div class=\"col-6\">\n              <legend class=\"col-form-label fs-5\">ものの区分：</legend>\n              <div class=\"btn-group\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice1\" name=\"category\" value=\"半製品\"><span class=\"radio-text-lg\">半製品</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice2\" name=\"category\" value=\"完成品（梱包前）\"><span class=\"radio-text-lg\">完成品（梱包前）</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"categoryChoice3\" name=\"category\" value=\"完成品（梱包済）\"><span class=\"radio-text-lg\">完成品（梱包済）</span>\n                </label>\n              </div>\n            </div>\n\n          </div>  \n\n          <div class=\"row align-items-center\">\n\n            <div class=\"col-6\">\n              <label for=\"location\" class=\"col-6 col-form-label fs-5\">ストック置場所：</label>\n              <select id=\"location\" name=\"location\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choices}}\n                <option>{{.}}</option>\n                {{/choices}}\n              </select>\n            </div>\n\n            <div class=\"col-2\">\n              <label for=\"shelf-number\"  class=\"col-6 col-form-label fs-5\">棚番号:</label>\n              <select id=\"shelf-number\" name=\"koguchi\" class=\"form-select form-select-lg col-form-label align-middle\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicespallet}}\n                <option>{{.}}</option>\n                {{/choicespallet}}\n              </select>\n            </div>\n\n            <div class=\"col-4 d-flex justify-content-center\">\n              <!-- Button trigger modal -->\n              <button type=\"button\" class=\"btn btn-outline-secondary w-100\" id=\"inspection-point\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">検査箇所</button>\n\n              <!-- Modal -->\n              <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n\n                    <div class=\"modal-header\">\n                      <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">検査箇所</h1>\n                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n\n                    <div class=\"modal-body\">\n                      <div class=\"row m-1 align-items-center\" >\n                        <!-- 重量(kg)ラベル -->\n                        <div class=\"col-2 d-flex justify-content-center\">\n                          <span class=\"fs-6 fw-bold\">重量(kg):</span>\n                        </div>\n                        \n                        <!-- 上限 -->\n                        <div class=\"col-5\">\n                          <label for=\"weight-upper\" class=\"form-label fs-7\">上限</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"weight-upper\" name=\"weight-upper\" placeholder=\"上限を入力\">\n                        </div>\n                        <!-- 下限 -->\n                        <div class=\"col-5\">\n                          <label for=\"weight-lower\" class=\"form-label fs-7\">下限</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"weight-lower\" name=\"weight-lower\" placeholder=\"下限を入力\">\n                        </div>\n                        \n                      </div>\n\n                      <div class=\"row m-1 align-items-center\">\n                        <!-- 寸法(mm)ラベル -->\n                        <div class=\"col-2 d-flex justify-content-center\">\n                          <span class=\"fs-6 fw-bold\">寸法(mm):</span>\n                        </div>\n                        \n                        <!-- 横 -->\n                        <div class=\"col-5\">\n                          <label for=\"size-w\" class=\"form-label fs-7\">横Ｗ</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"size-w\" name=\"size-w\" placeholder=\"横寸法を入力\">\n                        </div>\n                        <!-- 縦 -->\n                        <div class=\"col-5\">\n                          <label for=\"size-d\" class=\"form-label fs-7\">縦Ｄ</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"size-d\" name=\"size-d\" placeholder=\"縦寸法を入力\">\n                        </div>\n                        \n                      </div>\n\n                      <div class=\"row m-1 align-items-center\">\n                        <!-- 寸法公差(mm)ラベル -->\n                        <div class=\"col-2 d-flex justify-content-center\">\n                          <span class=\"fs-6 fw-bold\">公差(mm):</span>\n                        </div>\n                        \n                        <!-- + -->\n                        <div class=\"col-5\">\n                          <label for=\"tolerance-upper\" class=\"form-label fs-7\">+</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"tolerance-upper\" name=\"tolerance-upper\" placeholder=\"+公差を入力\">\n                        </div>\n                        <!-- - -->\n                        <div class=\"col-5\">\n                          <label for=\"tolerance-lower\" class=\"form-label fs-7\">-</label>\n                          <input type=\"number\" class=\"form-control form-control-sm\" id=\"tolerance-lower\" name=\"tolerance-lower\" placeholder=\"-公差を入力\">\n                        </div>\n                        \n                      </div>\n\n                      <div class=\"mb-3\" style=\"display: none;\">\n                        <input type=\"number\" id=\"inspection-point-id\" name=\"inspection-point-id\">\n                      </div>\n\n                    </div>\n\n                    <div class=\"modal-footer\">\n\n                      <button type=\"button\" class=\"btn btn-primary\" id=\"inspection-point-add\">登録</button>\n\n                    </div>\n\n                  </div>\n                </div>\n              </div> \n              \n            </div>\n\n            <div class=\"mb-3\" style=\"display: none;\">\n                <input type=\"number\" id=\"dbID\" name=\"dbID\">\n            </div>\n     \n          </div>\n\n        </div>  \n\n      </form>\n\n      <div class=\"table-container\">\n\n        <table id=\"mytable\" class=\"table table-sm table-hover caption-top mt-4\">\n          <caption class=\"fs-6\">構成部品\n            <button class=\"btn btn-success btn-sm ms-2 mb-1\" id=\"components\" >構成部品追加</button>\n            <button class=\"btn btn-warning btn-sm ms-2 mb-1\" id=\"n-point\">N点照合登録</button>\n          </caption>  \n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\" style = \"display: none;\"\">ID</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">単位数</th>\n              <th scope=\"col\" class=\"fs-6\">N点照会</th>\n            </tr> \n          </thead>  \n          <tbody id=\"table-body\"></tbody>\n        </table>\n        \n      </div>  \n\n    </div>\n\n    <div class=\"modal fade\" id=\"componentsModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"componentsModalLabel\">構成部品</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"mb-3\">\n                <label for=\"components-productNumber\" class=\"col-form-label\">品番：</label>\n                <input type=\"text\" class=\"form-control\" id=\"components-productNumber\" name=\"components-productNumber\">\n              </div>\n          \n              <div class=\"mb-3\">\n                <legend class=\"col-form-label\">ものの区分：</legend>\n                <div class=\"btn-group\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"components-categoryChoice1\" name=\"components-category\" value=\"半製品\"><span class=\"radio\">半製品</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"components-categoryChoice2\" name=\"components-category\" value=\"完成品（梱包前）\"><span class=\"radio\">完成品（梱包前）</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"components-categoryChoice3\" name=\"components-category\" value=\"完成品（梱包済）\"><span class=\"radio\">完成品（梱包済）</span>\n                </label>\n              </div>\n\n              <div class=\"col-2 mb-3\">\n                <label for=\"components-useNumber\" class=\"col-form-label\">単位数:</label>\n                <input type=\"number\" class=\"form-control\" id=\"components-useNumber\" name=\"components-useNumber\">\n              </div>\n\n            </form>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"Components-delete\">削除</button>\n            <button type=\"button\" class=\"btn btn-primary\" id=\"Components-add\">追加</button>\n          </div>\n\n        </div>  \n   \n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>    \n  </body>\n</html>\n",
        "output": "str",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "76d1adebee594a17"
            ]
        ]
    },
    {
        "id": "4fdf2f9d47565630",
        "type": "file in",
        "z": "c158cdacc7de9eea",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "70d3eb860c990508"
            ]
        ]
    },
    {
        "id": "70d3eb860c990508",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 180,
        "wires": [
            [
                "4b808d4168a03be6"
            ]
        ]
    },
    {
        "id": "4b808d4168a03be6",
        "type": "file in",
        "z": "c158cdacc7de9eea",
        "name": "ストック置場所読込",
        "filename": "/home/kuwata/ktrg/棚番.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 680,
        "y": 180,
        "wires": [
            [
                "1d1eff939e306894"
            ]
        ]
    },
    {
        "id": "1d1eff939e306894",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 180,
        "wires": [
            [
                "8610d6af7f99f24f"
            ]
        ]
    },
    {
        "id": "8610d6af7f99f24f",
        "type": "file in",
        "z": "c158cdacc7de9eea",
        "name": "棚番号",
        "filename": "/home/kuwata/ktrg/パレット.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "7e4836e6bb5e1806"
            ]
        ]
    },
    {
        "id": "7e4836e6bb5e1806",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicespallet = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicespallet.push(row); \n}\n\nmsg.choicespallet = choicespallet;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "a1822913d5ef4c25"
            ]
        ]
    },
    {
        "id": "76d1adebee594a17",
        "type": "http response",
        "z": "c158cdacc7de9eea",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 240,
        "wires": []
    },
    {
        "id": "a1822913d5ef4c25",
        "type": "template",
        "z": "c158cdacc7de9eea",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n\n});\n\n\nfunction formatDateTime(date) {\n\n    const utcDate = new Date(date);\n\n    // yyyy-mm-dd\n    let formattedDate = utcDate.getFullYear() + '-' +\n        (utcDate.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        utcDate.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"table-body\");\n\n    while (tableBody.firstChild) {\n        tableBody.removeChild(tableBody.firstChild);\n    }\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n\n        let cell1 = row.insertCell(0);//ID\n        let cell2 = row.insertCell(1);//品番\n        let cell3 = row.insertCell(2);//ものの区分\n        let cell4 = row.insertCell(3);//単位数\n        let cell5 = row.insertCell(4);//N点照会\n\n        cell1.innerHTML = item.ComponentID;\n        cell1.style.display = \"none\";\n\n        cell2.innerHTML = item.ComponentName;\n\n        cell3.innerHTML = item.ComponentCategory;\n\n        cell4.innerHTML = item.Quantity;\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.style.width = \"20px\";\n        checkbox.style.height = \"20px\";\n\n        if (item.Npoint === 1) {\n            checkbox.checked = true;\n        }\n\n\n        cell5.appendChild(checkbox);\n\n\n    });\n}\n\n\nfunction sendDataToNodeRED(selectedOption, storedStaffCode, storedStaffName) {\n\n    let selectedCategory = document.querySelector('input[name=\"category\"]:checked').value;\n    let customer = document.getElementById('customer').value;\n    let productNumber = document.getElementById('product-number').value;\n    let location = document.getElementById('location').value;\n    let shelfNumber = document.getElementById('shelf-number').value;\n    let currentDateString = formatDateTime(new Date());\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/ProductMaster-processing`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            searchDB: 'Products',\n            selectedOption: selectedOption,\n            customer: customer,\n            productNumber: productNumber,\n            category: selectedCategory,\n            location: location,\n            shelfNumber: shelfNumber,\n            storedStaffCode: storedStaffCode,\n            storedStaffName: storedStaffName,\n            currentDateString: currentDateString\n\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n        \n        if (selectedOption === '登録'){\n\n            if (event.data === '品番とものの区分の組み合わせが同じ製品マスタが既に存在します。') {\n                // エラーメッセージを表示\n                alert(event.data);\n            } else {\n                // 登録成功メッセージを表示\n                alert('登録しました。');\n                let destinationURL = \"/page9\";\n                window.location.href = destinationURL;\n            }\n\n        } else if (selectedOption === '削除'){\n            alert('削除しました。');\n            let destinationURL = \"/page9\";\n            window.location.href = destinationURL;\n\n        } else if (selectedOption === '更新') {\n\n            if (event.data === '品番とものの区分の組み合わせが同じ製品マスタが既に存在します。') {\n                // エラーメッセージを表示\n                alert(event.data);\n            } else {\n                // 登録成功メッセージを表示\n                alert('更新しました。');\n                let destinationURL = \"/page9\";\n                window.location.href = destinationURL;\n            }\n    }\n        // WebSocketを閉じる\n        socket.close();\n    };\n}\n\nfunction sendDataToNodeRED2(selectedOption) {\n\n    let selectedCategory = document.querySelector('input[name=\"components-category\"]:checked').value;\n    let parentID = document.getElementById('dbID').value;\n    let componentNumber = document.getElementById('components-productNumber').value;\n    let useNumber = document.getElementById('components-useNumber').value;\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Component-processing`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            searchDB: 'ProductComponents',\n            selectedOption: selectedOption,\n            parentID: parentID,\n            componentNumber: componentNumber,\n            componentCategory: selectedCategory,\n            quantity: useNumber\n\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        if (selectedOption === '登録') {\n\n            if (event.data === '構成部品が製品マスタに登録ありません。') {\n                // エラーメッセージを表示\n                alert(event.data);\n            } else {\n                // 登録成功メッセージを表示\n                alert('登録しました。');\n            }\n\n        } else if (selectedOption === '削除') {\n            alert('削除しました。');\n\n        }\n        // WebSocketを閉じる\n        socket.close();\n        var modalElement = document.getElementById('componentsModal');\n        // BootstrapのModalオブジェクトを作成する\n        var modal = new bootstrap.Modal(modalElement);\n        modal.hide();\n        location.reload();\n    };\n\n}\n\nfunction sendDataToNodeRED3() {\n    \n\n    let parentID = document.getElementById('dbID').value;\n    \n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/ID-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            searchDB: 'ProductComponents',    \n            parentID: parentID\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction sendDataToNodeRED4(requestData) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Npoint-add`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        alert('N点照合登録しました。');\n        location.reload();\n\n        // WebSocketを閉じる\n        socket.close();\n    };\n\n}\n\nfunction sendDataToNodeRED5(requestData) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/InspectionPoint`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        let responseData = JSON.parse(event.data);\n\n        if (Array.isArray(responseData) && responseData.length > 0) {\n            let data = responseData[0]; // 最初の要素を取得\n\n            console.log(data);\n\n            // フォームにデータを設定\n            document.getElementById(\"weight-upper\").value = data.WeightU !== null ? parseFloat(data.WeightU).toFixed(3) : '';\n            document.getElementById(\"weight-lower\").value = data.WeightL !== null ? parseFloat(data.WeightL).toFixed(3) : '';\n            document.getElementById(\"size-w\").value = data.SizeW !== null ? parseFloat(data.SizeW).toFixed(3) : '';\n            document.getElementById(\"size-d\").value = data.SizeD !== null ? parseFloat(data.SizeD).toFixed(3) : '';\n            document.getElementById(\"tolerance-upper\").value = data.ToleranceU !== null ? parseFloat(data.ToleranceU).toFixed(3) : '';\n            document.getElementById(\"tolerance-lower\").value = data.ToleranceL !== null ? parseFloat(data.ToleranceL).toFixed(3) : '';\n            document.getElementById(\"inspection-point-id\").value = data.ProductID || ''; // ProductIDは整数\n\n        } else if (responseData.message) {\n            // メッセージがある場合の処理\n            console.log(responseData.message);\n        } else {\n            console.log(\"Unexpected response format:\", responseData);\n        }\n\n\n        if (responseData.closeConnection) {\n            socket.close();\n        }\n\n    };\n\n}\n\nfunction sendDataToNodeRED6(requestData) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/InspectionPoint-add`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onmessage = function (event) {\n\n        alert('登録しました。')\n        socket.close();\n\n    };\n\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // URLからクエリパラメータを取得\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // クエリ情報がある場合の処理\n    if (urlParams.has('productID')) {\n\n        let productID = urlParams.get('productID');\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/ID-search`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                searchDB: 'Products',    \n                productID: productID\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n        \n        socket.onmessage = function (event) {\n\n            let responseData = JSON.parse(event.data);\n\n            document.getElementById('add').disabled = true;\n            document.getElementById('customer').disabled = true;\n            document.getElementById('product-number').disabled = true; \n\n            document.getElementById('customer').value = responseData[0].Customer\n            document.getElementById('product-number').value = responseData[0].ProductName\n            document.getElementById('location').value = responseData[0].Location\n            document.getElementById('shelf-number').value = responseData[0].ShelfNumber\n            document.getElementById('last-changer').value = responseData[0].changer\n            document.getElementById('last-updated').value = formatDateTime(responseData[0].UpdateOn);\n            document.getElementById('dbID').value = responseData[0].ProductID;\n            \n\n            // データベースから取得した情報\n            const Category = responseData[0].ProductCategory\n\n            // ラジオボタンの要素を取得\n            const radioButtons = document.querySelectorAll('input[name=\"category\"]');\n\n            // ラジオボタンの値とデータベースから取得した情報を比較し、一致するラジオボタンを選択状態に設定\n            radioButtons.forEach(radioButton => {\n                if (radioButton.value === Category) {\n                    radioButton.checked = true;\n                    radioButton.parentNode.style.fontWeight = \"bold\";\n                    radioButton.parentNode.style.color = \"Black\";\n                }\n                radioButton.disabled = true;\n            });\n\n            //構成部品の登録表示\n            sendDataToNodeRED3();\n\n            // WebSocketを閉じる\n            socket.close();\n        };\n    }else{\n\n        document.getElementById('edit').disabled = true;\n        document.getElementById('delete').disabled = true;\n        document.getElementById('components').disabled = true;\n\n    }\n\n\n    let storedStaffCode = sessionStorage.getItem('staffCode');\n    let storedStaffName = sessionStorage.getItem('staffName');\n\n    const addButton = document.getElementById('add');\n    const deleteButton = document.getElementById('delete');\n    const editButton = document.getElementById('edit');\n\n    // \"登録\"ボタンをクリックしたときに抽出処理を実行\n    addButton.addEventListener(\"click\", function () {\n        \n        let selectedOption = \"登録\";\n        sendDataToNodeRED(selectedOption, storedStaffCode, storedStaffName);     \n\n    });\n\n    deleteButton.addEventListener(\"click\", function () {\n\n        let selectedOption = \"削除\";\n        sendDataToNodeRED(selectedOption, storedStaffCode, storedStaffName);\n        \n    });\n\n    editButton.addEventListener(\"click\", function () {\n\n        let selectedOption = \"更新\";\n        sendDataToNodeRED(selectedOption, storedStaffCode, storedStaffName);\n       \n    });\n\n    const componentsButton = document.getElementById('components');\n    componentsButton.addEventListener(\"click\", function () {\n\n        new bootstrap.Modal(document.getElementById('componentsModal')).show();\n\n    });\n\n    const componentsAddButton = document.getElementById('Components-add');\n    const componentsDeleteButton = document.getElementById('Components-delete');\n\n    componentsAddButton.addEventListener(\"click\", function () {\n\n        let selectedOption = \"登録\";\n        sendDataToNodeRED2(selectedOption)\n\n    });\n\n    componentsDeleteButton.addEventListener(\"click\", function () {\n\n        let selectedOption = \"削除\";\n        sendDataToNodeRED2(selectedOption)\n\n    });\n\n    let table = document.getElementById(\"table-body\");\n    table.addEventListener(\"click\", function (event) {\n\n        // クリックされたセルを取得\n        let clickedCell = event.target.closest(\"td\");\n\n        // クリックされたセルがあるか、行が取得できるか確認\n        if (!clickedCell) return;\n\n        // セルのインデックスを取得\n        let cellIndex = clickedCell.cellIndex;\n\n        // セル5番目（インデックスが4）の場合、処理をスキップ\n        if (cellIndex === 4) return;\n\n        // クリックされた行を取得\n        let clickedRow = event.target.closest(\"tr\");\n\n        if (clickedRow) {\n\n            let ComponentID = clickedRow.cells[0].textContent.trim();\n            let componentName = clickedRow.cells[1].textContent.trim();\n            let componentCategory = clickedRow.cells[2].textContent.trim();\n            let quantity = clickedRow.cells[3].textContent.trim();\n\n            const radioButtons = document.querySelectorAll('input[name=\"components-category\"]');\n\n            // ラジオボタンの値とデータベースから取得した情報を比較し、一致するラジオボタンを選択状態に設定\n            radioButtons.forEach(radioButton => {\n                if (radioButton.value === componentCategory) {\n                    radioButton.checked = true;\n                    radioButton.parentNode.style.fontWeight = \"bold\";\n                    radioButton.parentNode.style.color = \"Black\";\n                }\n                radioButton.disabled = true;\n            });\n\n            document.getElementById('components-productNumber').value = componentName;\n            document.getElementById('components-useNumber').value = quantity;\n    \n        }\n\n\n        new bootstrap.Modal(document.getElementById('componentsModal')).show();\n\n        \n    });\n\n    document.getElementById(\"n-point\").addEventListener(\"click\", function () {\n        let tableBody = document.getElementById(\"table-body\");\n        let rows = tableBody.getElementsByTagName(\"tr\");\n        let nPointData = [];\n\n        Array.from(rows).forEach(function (row) {\n            // 各行から ID と チェックボックス情報を取得\n            let id = row.cells[0].textContent.trim(); // ID\n            let checkbox = row.cells[4].querySelector(\"input[type='checkbox']\"); // N点照会のチェックボックス\n\n            // チェック状態を確認して 1 または 0 に変換\n            let nPointValue = checkbox.checked ? 1 : 0;\n\n            // 結果をデータとして格納\n            nPointData.push({ id: id, nPoint: nPointValue });\n        });\n\n        sendDataToNodeRED4(nPointData);\n    });\n\n    document.getElementById(\"inspection-point\").addEventListener(\"click\", function () {\n\n        let productID = document.getElementById(\"dbID\").value;\n\n        sendDataToNodeRED5(productID);\n        \n    });\n\n    document.getElementById(\"inspection-point-add\").addEventListener(\"click\", function () {\n        // 入力値を取得し、空の場合は null を設定\n\n        const data = {\n\n            weightUpper: parseFloat(document.getElementById(\"weight-upper\").value).toFixed(3) || null,\n            weightLower: parseFloat(document.getElementById(\"weight-lower\").value).toFixed(3) || null,\n            sizeW: parseFloat(document.getElementById(\"size-w\").value).toFixed(3) || null,\n            sizeD: parseFloat(document.getElementById(\"size-d\").value).toFixed(3) || null,\n            toleranceUpper: parseFloat(document.getElementById(\"tolerance-upper\").value).toFixed(3) || null,\n            toleranceLower: parseFloat(document.getElementById(\"tolerance-lower\").value).toFixed(3) || null,\n            inspectionPointId: parseInt(document.getElementById(\"inspection-point-id\").value) || null,\n            dbID: parseInt(document.getElementById(\"dbID\").value)\n        };\n\n        sendDataToNodeRED6(data);\n\n    });\n  \n});    ",
        "output": "str",
        "x": 580,
        "y": 240,
        "wires": [
            [
                "ac9741b1fc4c897f"
            ]
        ]
    },
    {
        "id": "e888328da370125a",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "190b6b08efafa0da",
        "client": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "f3cb0a706bc16915"
            ]
        ]
    },
    {
        "id": "e30b651a6c01b91b",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "190b6b08efafa0da",
        "client": "",
        "x": 1210,
        "y": 760,
        "wires": []
    },
    {
        "id": "f3cb0a706bc16915",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 640,
        "wires": [
            [
                "fe4ea059a616f43f"
            ]
        ]
    },
    {
        "id": "ac34c4fd9d58a255",
        "type": "switch",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "selectedOption",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "登録",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "更新",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "削除",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 760,
        "wires": [
            [
                "8c9f709ca17cc0da"
            ],
            [
                "a75c98b86e3f3603"
            ],
            [
                "05f9454db85da354"
            ]
        ]
    },
    {
        "id": "38174f1fd38e86ef",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "Insert Into Products",
        "func": "// MySQLクライアントを取得\nvar mysqlclient = global.get('mysqlclient');\n\n// MySQLクライアントが存在しない場合は新規作成\nif (!mysqlclient) {\n    // MySQLノードで設定されたMySQLクライアントを取得\n    mysqlclient = msg.mysqlclient; // msg.mysqlclientにはMySQLノードで設定されたクライアントが含まれる\n\n    // グローバルコンテキストにMySQLクライアントを保存\n    global.set('mysqlclient', mysqlclient);\n}\n\nmsg.payload.location = (msg.payload.location !== '' && msg.payload.location !== undefined) ? msg.payload.location.toString() : null;\n// msg.payload.shelfNumberが空白かどうかを確認し、整数型に変換する\nif (msg.payload.shelfNumber !== undefined && msg.payload.shelfNumber.trim() !== '') {\n    // 文字列が空白でない場合は整数型に変換\n    msg.payload.shelfNumber = parseInt(msg.payload.shelfNumber);\n} else {\n    // 文字列が空白の場合はnullに設定\n    msg.payload.shelfNumber = null;\n}\n\nif (msg.payload.selectedOption === '登録') {\n    // 品番とものの区分の組み合わせが既にデータベースに存在するかどうかを確認するためのSQLクエリを作成\n    var query = \"SELECT * FROM Products WHERE ProductName = ? AND ProductCategory = ?\";\n    var values = [msg.payload.productNumber, msg.payload.category];\n\n    // データベースクエリを実行する\n    context.global.get('mysqlClient').query(query, values, function(err, result) {\n        if (err) {\n            node.error(err.message);\n            return;\n        }\n\n        // データベースに品番とものの区分の組み合わせが既に存在する場合はエラーメッセージを返す\n        if (result.length > 0) {\n            node.error(\"品番とものの区分の組み合わせが既に存在します。\");\n            return;\n        }\n\n        // データベースに品番とものの区分の組み合わせが存在しない場合はデータを挿入する\n        var insertQuery = \"INSERT INTO Products (ProductName, ProductCategory, Customer, Location, ShelfNumber, UpdateOn, Changer) VALUES (?, ?, ?, ?, ?, ?, ?)\";\n        var insertValues = [msg.payload.productNumber, msg.payload.category, msg.payload.customer, msg.payload.location, msg.payload.shelfNumber, msg.payload.currentDateString, msg.payload.storedStaffName];\n        \n        // MySQLノードにデータを送信\n        msg.topic = insertQuery;\n        msg.payload = insertValues;\n        node.send(msg);\n    });\n} else {\n    // 登録以外の操作の場合は何もしない\n    return null;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "fe4ea059a616f43f",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "条件データ",
        "func": "msg.payload.location = (msg.payload.location !== '' && msg.payload.location !== undefined) ? msg.payload.location.toString() : null;\n// msg.payload.shelfNumberが空白かどうかを確認し、整数型に変換する\nif (msg.payload.shelfNumber !== undefined && msg.payload.shelfNumber.trim() !== '') {\n    // 文字列が空白でない場合は整数型に変換\n    msg.payload.shelfNumber = parseInt(msg.payload.shelfNumber);\n} else {\n    // 文字列が空白の場合はnullに設定\n    msg.payload.shelfNumber = null;\n}\n\nvar searchDB = msg.payload.searchDB; \nvar customer = msg.payload.customer;\nvar productNumber = msg.payload.productNumber;\nvar category = msg.payload.category;\nvar location = msg.payload.location;\nvar shelfNumber = msg.payload.shelfNumber;\nvar storedStaffName = msg.payload.storedStaffName;\nvar storedStaffCode = msg.payload.storedStaffCode;\nvar currentDateString = msg.payload.currentDateString;\n\n\n// データを変数に保存\nflow.set('searchDB', searchDB);\nflow.set('customer', customer);\nflow.set('productNumber', productNumber);\nflow.set('category', category);\nflow.set('location', location);\nflow.set('shelfNumber', shelfNumber);\nflow.set('storedStaffName', storedStaffName);\nflow.set('storedStaffCode', storedStaffCode);\nflow.set('currentDateString', currentDateString);\n\nmsg.selectedOption = msg.payload.selectedOption;\nmsg.status = '製品マスタ';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "ac34c4fd9d58a255"
            ]
        ]
    },
    {
        "id": "70bbde98ffdd4541",
        "type": "switch",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 700,
        "wires": [
            [
                "548c40a8ea842ae0"
            ],
            [
                "939502a28553afe8"
            ]
        ]
    },
    {
        "id": "a75c98b86e3f3603",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "UPDATE Products",
        "func": "var productNumber = flow.get('productNumber')\nvar category = flow.get('category')\nvar customer = flow.get('customer')\nvar location = flow.get('location')\nvar shelfNumber = flow.get('shelfNumber')\nvar currentDateString = flow.get('currentDateString')\nvar storedStaffName = flow.get('storedStaffName')\n\n\nvar updateQuery = \"UPDATE Products SET Location = '\" + location + \"', ShelfNumber = \" + shelfNumber + \", UpdateOn = '\" + currentDateString + \"', Changer = '\" + storedStaffName + \"' WHERE ProductName = '\" + productNumber + \"' AND ProductCategory = '\" + category + \"'\";\nmsg.topic = updateQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 760,
        "wires": [
            [
                "f8bb8060c3d44099"
            ]
        ]
    },
    {
        "id": "792cb576820c6a57",
        "type": "link in",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "links": [],
        "x": 345,
        "y": 360,
        "wires": [
            [
                "61bdd2ee727c2fc3"
            ]
        ]
    },
    {
        "id": "61bdd2ee727c2fc3",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "func": "if (msg.status === '製品マスタ'){\n\n    var productNumber = flow.get('productNumber');\n    var category = flow.get('category');\n\n    \n    \n}else if (msg.status === '構成'){\n\n    var productNumber = flow.get('componentNumber');\n    var category  = flow.get('componentCategory');\n\n}\n\nvar selectQuery = \"SELECT * FROM Products WHERE ProductName = '\" + productNumber + \"' AND ProductCategory = '\" + category + \"'ORDER BY Customer, ProductName, ProductCategory \";\n\nmsg.topic = selectQuery;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "3ce06edb2b5e3414"
            ]
        ]
    },
    {
        "id": "3ce06edb2b5e3414",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 360,
        "wires": [
            [
                "3f0c57994b9edf93"
            ]
        ]
    },
    {
        "id": "8c9f709ca17cc0da",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "links": [
            "792cb576820c6a57"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 620,
        "y": 700,
        "wires": [
            [
                "70bbde98ffdd4541"
            ]
        ]
    },
    {
        "id": "3f0c57994b9edf93",
        "type": "link out",
        "z": "c158cdacc7de9eea",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 1065,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e3b479e478a2048",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "登録中止",
        "func": "if (msg.stauts === '製品マスタ') {\n\n    msg.payload = '品番とものの区分の組み合わせが同じ製品マスタが既に存在します。'\n\n} else if (msg.status === '構成') {\n\n    msg.payload = '構成部品が製品マスタに登録ありません。'\n\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 400,
        "wires": [
            [
                "545a6d1716644a30"
            ]
        ]
    },
    {
        "id": "939502a28553afe8",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "",
        "links": [
            "6425fc112f340a54"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "e30b651a6c01b91b"
            ]
        ]
    },
    {
        "id": "6425fc112f340a54",
        "type": "link in",
        "z": "c158cdacc7de9eea",
        "name": "登録中止",
        "links": [],
        "x": 345,
        "y": 400,
        "wires": [
            [
                "6e3b479e478a2048"
            ]
        ]
    },
    {
        "id": "545a6d1716644a30",
        "type": "link out",
        "z": "c158cdacc7de9eea",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 1065,
        "y": 400,
        "wires": []
    },
    {
        "id": "f8bb8060c3d44099",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 760,
        "wires": [
            [
                "e30b651a6c01b91b"
            ]
        ]
    },
    {
        "id": "a4f07b184aee9cd0",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "32122a0b3c0e9960",
        "client": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "93b352c4cff9963d"
            ]
        ]
    },
    {
        "id": "93b352c4cff9963d",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 120,
        "wires": [
            [
                "83e74e64fc7e5ff3"
            ]
        ]
    },
    {
        "id": "2843bb22df2aa153",
        "type": "file in",
        "z": "c158cdacc7de9eea",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "e5fb05dde30630c7"
            ]
        ]
    },
    {
        "id": "e5fb05dde30630c7",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "55d1dc88a03aaaeb"
            ]
        ]
    },
    {
        "id": "83e74e64fc7e5ff3",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "func": "if (msg.payload.customer.trim()  === '' && msg.payload.productName.trim() === ''){\n\n    var selectQuery = \"SELECT * FROM Products ORDER BY Customer, ProductName, ProductCategory\";\n\n} else if (msg.payload.customer.trim() !== '' && msg.payload.productName.trim() === '' ){\n\n    var selectQuery = \"SELECT * FROM Products WHERE Customer = '\" + msg.payload.customer + \"'ORDER BY Customer, ProductName, ProductCategory\";\n    \n} else if (msg.payload.customer.trim() === '' && msg.payload.productName.trim() !== ''){\n\n    var selectQuery = \"SELECT * FROM Products WHERE ProductName = '\" + msg.payload.productName + \"'ORDER BY Customer, ProductName, ProductCategory\";\n\n} else {\n\n    var selectQuery = \"SELECT * FROM Products WHERE ProductName = '\" + msg.payload.productName + \"' AND Customer = '\" + msg.payload.customer + \"'ORDER BY Customer, ProductName, ProductCategory\";\n\n}\n\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 120,
        "wires": [
            [
                "b178beecf0950f9f"
            ]
        ]
    },
    {
        "id": "b178beecf0950f9f",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 120,
        "wires": [
            [
                "03eae72a947caf4f"
            ]
        ]
    },
    {
        "id": "03eae72a947caf4f",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "32122a0b3c0e9960",
        "client": "",
        "x": 1180,
        "y": 120,
        "wires": []
    },
    {
        "id": "d0b49023f795ee05",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "473df88435abd173",
        "client": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "d991ad26399c024e"
            ]
        ]
    },
    {
        "id": "d991ad26399c024e",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "ac06b0fa5c9bf077"
            ]
        ]
    },
    {
        "id": "ac06b0fa5c9bf077",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM ***",
        "func": "if (msg.payload.searchDB === 'Products'){\n\n    var selectQuery = \"SELECT * FROM \" + msg.payload.searchDB + \" WHERE ProductID = \" + msg.payload.productID + \"\";\n\n} else if (msg.payload.searchDB === 'ProductComponents'){\n\n    var selectQuery = \"SELECT * FROM ProductComponents LEFT JOIN Products ON ProductComponents.ParentID = Products.ProductID WHERE ParentID = \" + msg.payload.parentID + \"\";\n\n}\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 300,
        "wires": [
            [
                "077d3f167a39c61b"
            ]
        ]
    },
    {
        "id": "077d3f167a39c61b",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "5adb3589fe80cebc"
            ]
        ]
    },
    {
        "id": "5adb3589fe80cebc",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "473df88435abd173",
        "client": "",
        "x": 1140,
        "y": 300,
        "wires": []
    },
    {
        "id": "554eb97db9c224ee",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "286e9e2a6ce00648",
        "client": "",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "ac87a7633d75bc80"
            ]
        ]
    },
    {
        "id": "ac87a7633d75bc80",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 880,
        "wires": [
            [
                "25a985d26967f156"
            ]
        ]
    },
    {
        "id": "25a985d26967f156",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "条件データ2",
        "func": "var searchDB = msg.payload.searchDB;\nvar parentID = parseInt(msg.payload.parentID);\nvar componentNumber = msg.payload.componentNumber;\nvar componentCategory = msg.payload.componentCategory;\nvar quantity = parseInt(msg.payload.quantity);\n\n// データを変数に保存\nflow.set('searchDB', searchDB);\nflow.set('parentID', parentID);\nflow.set('componentNumber', componentNumber);\nflow.set('componentCategory', componentCategory);\nflow.set('quantity', quantity);\n\nmsg.selectedOption = msg.payload.selectedOption\n\nmsg.status = '構成';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 880,
        "wires": [
            [
                "c414f0eac9d8fed3"
            ]
        ]
    },
    {
        "id": "c414f0eac9d8fed3",
        "type": "switch",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "selectedOption",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "登録",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "削除",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "ab4fba97665160be"
            ],
            [
                "8bb397a16e4babaf"
            ]
        ]
    },
    {
        "id": "ab4fba97665160be",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "links": [
            "792cb576820c6a57"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 620,
        "y": 960,
        "wires": [
            [
                "da4280e83445748c"
            ]
        ]
    },
    {
        "id": "da4280e83445748c",
        "type": "switch",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 960,
        "wires": [
            [
                "13cc85dc6c024ac3"
            ],
            [
                "d6da5da9ba8a52b2"
            ]
        ]
    },
    {
        "id": "d6da5da9ba8a52b2",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "",
        "links": [
            "6425fc112f340a54"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 940,
        "y": 980,
        "wires": [
            [
                "7557bb93bb099c66"
            ]
        ]
    },
    {
        "id": "7557bb93bb099c66",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "286e9e2a6ce00648",
        "client": "",
        "x": 1220,
        "y": 980,
        "wires": []
    },
    {
        "id": "3a5a3fe7cfbd7257",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "INSERT INTO ***",
        "func": "var searchDB = flow.get('searchDB');\n\nif (searchDB === 'Products') {\n\n    var productNumber = flow.get('productNumber')\n    var category = flow.get('category')\n    var customer = flow.get('customer')\n    var location = flow.get('location')\n    var shelfNumber = flow.get('shelfNumber')\n    var currentDateString = flow.get('currentDateString')\n    var storedStaffName = flow.get('storedStaffName')\n\n\n    var insertQuery = \"INSERT INTO Products (ProductName, ProductCategory, Customer, Location, ShelfNumber, UpdateOn, Changer) VALUES ( '\" + productNumber + \"','\" + category + \"','\" + customer + \"','\" + location + \"',\" + shelfNumber + \",'\" + currentDateString + \"','\" + storedStaffName + \"')\";\n\n\n    \n} else if (searchDB === 'ProductComponents') {\n\n    var parentID = flow.get('parentID')\n    var componentNumber = flow.get('componentNumber')\n    var componentCategory = flow.get('componentCategory')\n    var quantity = flow.get('quantity')\n\n    var insertQuery = \"INSERT INTO ProductComponents (ProductID, ComponentName, ComponentCategory, Quantity, ParentID) VALUES ( \" + msg.payload[0].ProductID + \",'\" + componentNumber + \"','\" + componentCategory + \"',\" + quantity + \",\" + parentID + \")\";\n\n}\n\n\nmsg.topic = insertQuery;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 440,
        "wires": [
            [
                "8d6d484e5f349c68"
            ]
        ]
    },
    {
        "id": "3e3f744ef2c43a8f",
        "type": "link in",
        "z": "c158cdacc7de9eea",
        "name": "INSERT INTO ***",
        "links": [],
        "x": 345,
        "y": 440,
        "wires": [
            [
                "3a5a3fe7cfbd7257"
            ]
        ]
    },
    {
        "id": "548c40a8ea842ae0",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "",
        "links": [
            "3e3f744ef2c43a8f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 970,
        "y": 680,
        "wires": [
            [
                "e30b651a6c01b91b"
            ]
        ]
    },
    {
        "id": "8d6d484e5f349c68",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 440,
        "wires": [
            [
                "06f2cfcacc9020f7"
            ]
        ]
    },
    {
        "id": "06f2cfcacc9020f7",
        "type": "link out",
        "z": "c158cdacc7de9eea",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 1065,
        "y": 440,
        "wires": []
    },
    {
        "id": "13cc85dc6c024ac3",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "",
        "links": [
            "3e3f744ef2c43a8f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 970,
        "y": 940,
        "wires": [
            [
                "7557bb93bb099c66"
            ]
        ]
    },
    {
        "id": "841e087ad4d15a5d",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM Products",
        "func": "if (msg.status === '製品マスタ') {\n\n\n    var productID = flow.get('productID');\n    \n\n\n}\n\nvar selectQuery = \"DELETE FROM Products WHERE ProductID = '\" + productID + \"'\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 480,
        "wires": [
            [
                "fa9ff6147e32c200"
            ]
        ]
    },
    {
        "id": "05f9454db85da354",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM Products",
        "links": [
            "792cb576820c6a57"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 620,
        "y": 800,
        "wires": [
            [
                "cd1d7456d0af46b1"
            ]
        ]
    },
    {
        "id": "9722008ecd4fa2e1",
        "type": "link in",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM ***",
        "links": [],
        "x": 345,
        "y": 500,
        "wires": [
            [
                "0d00310f606f3910"
            ]
        ]
    },
    {
        "id": "fa9ff6147e32c200",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 480,
        "wires": [
            [
                "2658e162f5c4cc4a"
            ]
        ]
    },
    {
        "id": "0d00310f606f3910",
        "type": "switch",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "製品マスタ",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "構成",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 500,
        "wires": [
            [
                "841e087ad4d15a5d"
            ],
            [
                "4cdc0a7de4bed25f"
            ]
        ]
    },
    {
        "id": "67f4c3145b735bd5",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM ***",
        "links": [
            "9722008ecd4fa2e1"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 970,
        "y": 800,
        "wires": [
            [
                "e30b651a6c01b91b"
            ]
        ]
    },
    {
        "id": "2658e162f5c4cc4a",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM ProductComponents",
        "func": "\nvar parentID = flow.get('productID')\nvar selectQuery = \"DELETE FROM ProductComponents WHERE ParentID = '\" + parentID + \"'\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 520,
        "wires": [
            [
                "ad1d5d596d34d760"
            ]
        ]
    },
    {
        "id": "ad1d5d596d34d760",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 520,
        "wires": [
            [
                "b045d89d002606d0"
            ]
        ]
    },
    {
        "id": "b045d89d002606d0",
        "type": "link out",
        "z": "c158cdacc7de9eea",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 1065,
        "y": 520,
        "wires": []
    },
    {
        "id": "4cdc0a7de4bed25f",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM ProductComponents",
        "func": "if (msg.status === '構成') {\n\n    var parentID = flow.get('parentID');\n    var componentNumber = flow.get('componentNumber');\n    var componentCategory = flow.get('componentCategory');\n    \n}\n\nvar selectQuery = \"DELETE FROM ProductComponents WHERE ComponentName = '\" + componentNumber + \"' AND ComponentCategory = '\" + componentCategory + \"' AND ParentID ='\" + parentID + \"'\";\n\nmsg.topic = selectQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 560,
        "wires": [
            [
                "2fb66599e79cce40"
            ]
        ]
    },
    {
        "id": "8bb397a16e4babaf",
        "type": "link call",
        "z": "c158cdacc7de9eea",
        "name": "DELETE FROM ***",
        "links": [
            "9722008ecd4fa2e1"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "7557bb93bb099c66"
            ]
        ]
    },
    {
        "id": "2fb66599e79cce40",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 560,
        "wires": [
            [
                "c6ed9e4ea7ed2686"
            ]
        ]
    },
    {
        "id": "c6ed9e4ea7ed2686",
        "type": "link out",
        "z": "c158cdacc7de9eea",
        "name": "link out 5",
        "mode": "return",
        "links": [],
        "x": 1065,
        "y": 560,
        "wires": []
    },
    {
        "id": "cd1d7456d0af46b1",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "条件データ3",
        "func": "var productID = msg.payload[0].ProductID\n\nflow.set('productID', productID)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 840,
        "wires": [
            [
                "67f4c3145b735bd5"
            ]
        ]
    },
    {
        "id": "3e06fe5bacd18549",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "681ce2afa561e793",
        "client": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "4573263dfabb8920"
            ]
        ]
    },
    {
        "id": "4573263dfabb8920",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "9bf16e2ac9a09e5c"
            ]
        ]
    },
    {
        "id": "9bf16e2ac9a09e5c",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "Build SQL Query",
        "func": "let updates = msg.payload;\nlet caseStatements = [];\nlet ids = [];\n\nupdates.forEach(item => {\n    caseStatements.push(`WHEN ComponentID = ${item.id} THEN ${item.nPoint}`);\n    ids.push(item.id);\n});\n\nlet query = `\n    UPDATE ProductComponents\n    SET Npoint = CASE\n        ${caseStatements.join(' ')}\n    END\n    WHERE ComponentID IN (${ids.join(', ')});\n`;\n\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "ab36a43a94ddbad2"
            ]
        ]
    },
    {
        "id": "ab36a43a94ddbad2",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "de48e2ee20ae0f2e"
            ]
        ]
    },
    {
        "id": "de48e2ee20ae0f2e",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "681ce2afa561e793",
        "client": "",
        "x": 1180,
        "y": 1060,
        "wires": []
    },
    {
        "id": "94f720821cfe5741",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "822b4c73425012ee",
        "client": "",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "b4cc1f38d069524c"
            ]
        ]
    },
    {
        "id": "b4cc1f38d069524c",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1140,
        "wires": [
            [
                "95a91d4b1374fb5a"
            ]
        ]
    },
    {
        "id": "95a91d4b1374fb5a",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "SELECT * FROM InspectionPoint",
        "func": "// msg.payloadに値が入っていると仮定\nlet inputValue = msg.payload;\n\n// 整数に変換\nlet integerValue = parseInt(inputValue, 10);\n\n// 整数変換に失敗した場合のチェック\nif (isNaN(integerValue)) {\n    node.error(\"値が整数に変換できませんでした: \" + inputValue);\n    return null; // フローを停止\n}\n\n// SELECT文の作成\nmsg.topic = `SELECT * FROM InspectionPoint WHERE ProductID = ${integerValue}`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1140,
        "wires": [
            [
                "88ff2c180d2793c3"
            ]
        ]
    },
    {
        "id": "88ff2c180d2793c3",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 1140,
        "wires": [
            [
                "504ac608922d5c40"
            ]
        ]
    },
    {
        "id": "504ac608922d5c40",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "クエリ結果が空の場合の処理",
        "func": "if (!msg.payload || msg.payload.length === 0) {\n    // 結果が空の場合、特定の値を設定\n    msg.payload = { message: \"データが見つかりませんでした\" };\n    return msg; // フローを続行\n}\n\n// 結果がある場合\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1180,
        "wires": [
            [
                "658b49ffbf9d108a"
            ]
        ]
    },
    {
        "id": "658b49ffbf9d108a",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "822b4c73425012ee",
        "client": "",
        "x": 1200,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1e00a7e6f8647aea",
        "type": "websocket in",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "b75b09809aae5215",
        "client": "",
        "x": 190,
        "y": 1240,
        "wires": [
            [
                "ed7922dd2fd29c9a"
            ]
        ]
    },
    {
        "id": "ed7922dd2fd29c9a",
        "type": "json",
        "z": "c158cdacc7de9eea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "60853363487c3af1"
            ]
        ]
    },
    {
        "id": "60853363487c3af1",
        "type": "function",
        "z": "c158cdacc7de9eea",
        "name": "登録処理",
        "func": "// リクエストデータを取得\nlet data = msg.payload;\n\nif(msg.payload.inspectionPointId === null){\n\n    msg.topic = `INSERT INTO InspectionPoint (\n        ProductID,\n        WeightU,\n        WeightL,\n        SizeW,\n        SizeD,\n        ToleranceU,\n        ToleranceL\n    ) VALUES (?, ?, ?, ?, ?, ?, ?);\n`;\n\n    msg.payload = [\n        msg.payload.inspectionPointId ? null : parseInt(msg.payload.dbID),\n        isNaN(msg.payload.weightUpper) ? null : parseFloat(msg.payload.weightUpper).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.weightLower) ? null : parseFloat(msg.payload.weightLower).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.sizeW) ? null : parseFloat(msg.payload.sizeW).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.sizeD) ? null : parseFloat(msg.payload.sizeD).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.toleranceUpper) ? null : parseFloat(msg.payload.toleranceUpper).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.toleranceLower) ? null : parseFloat(msg.payload.toleranceLower).toFixed(3) // DOUBLE 型\n    ];\n\n}else{\n\n    msg.topic = `UPDATE InspectionPoint SET \n        WeightU = ?, \n        WeightL = ?, \n        SizeW = ?, \n        SizeD = ?, \n        ToleranceU = ?, \n        ToleranceL = ?   \n    WHERE ProductID = ?\n`;\n    msg.payload = [\n        \n        isNaN(msg.payload.weightUpper) ? null : parseFloat(msg.payload.weightUpper).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.weightLower) ? null : parseFloat(msg.payload.weightLower).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.sizeW) ? null : parseFloat(msg.payload.sizeW).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.sizeD) ? null : parseFloat(msg.payload.sizeD).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.toleranceUpper) ? null : parseFloat(msg.payload.toleranceUpper).toFixed(3), // DOUBLE 型\n        isNaN(msg.payload.toleranceLower) ? null : parseFloat(msg.payload.toleranceLower).toFixed(3), // DOUBLE 型\n        msg.payload.dbID,\n    ];\n\n\n}\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1240,
        "wires": [
            [
                "67949cf740eaccbe"
            ]
        ]
    },
    {
        "id": "67949cf740eaccbe",
        "type": "mysql",
        "z": "c158cdacc7de9eea",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 960,
        "y": 1240,
        "wires": [
            [
                "2f3fba9f09e058e9"
            ]
        ]
    },
    {
        "id": "2f3fba9f09e058e9",
        "type": "websocket out",
        "z": "c158cdacc7de9eea",
        "name": "",
        "server": "b75b09809aae5215",
        "client": "",
        "x": 1210,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2675f9b2859dd02d",
        "type": "http response",
        "z": "8be7dd333bfef1af",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "187de1445e3e513e",
        "type": "template",
        "z": "8be7dd333bfef1af",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <!-- Bootstrap CSS -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n    <!--link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" -->\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body>\n\n    <div class=\"container\">\n      \n      <div class=\"item1 text-center my-5\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-12\">\n            <h1 class=\"text-muted\" id=\"currentYear\"></h1>\n          </div>\n          <div class=\"col-12\">  \n            <h1 class=\"display-1\" id=\"currentMonth\"></h1>\n          </div>\n        </div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-8 btn-group btn-group-sm\" role=\"group\" aria-label=\"Small button group\">\n            <button type=\"button\" id=\"prevMonthBtn\" class=\"btn btn-secondary\">前月</button>\n            <button type=\"button\" id=\"nextMonthBtn\" class=\"btn btn-secondary\">次月</button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"item2 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <h5>会議室</h5>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"item3 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <h5>N-VAN</h5>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"item4 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <h5>ｳｨﾝｸﾞﾛｰﾄﾞ</h5>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"item5 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <h5>ﾚｼﾞｱｽｴｰｽ</h5>\n          </div>\n        </div>  \n      </div>\n\n      <div class=\"item11 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <h5>NOAH</h5>\n          </div>\n        </div>  \n      </div>\n\n      <div class=\"item6\" id=\"calendar\"></div>\n      <div class=\"item7\" id=\"meetingRoomSchedule\"></div>\n      <div class=\"item8\" id=\"nVanSchedule\"></div>\n      <div class=\"item9\" id=\"wingRoadSchedule\"></div>\n      <div class=\"item10\" id=\"regiasAceSchedule\"></div>\n      <div class=\"item12\" id=\"noahSchedule\"></div>\n\n    </div>\n\n    <!-- Bootstrap Modal -->\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\"></h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n        <div class=\"modal-body\">\n          <div id=\"modalBodyContent\" class=\"modal-body-content\">\n            <table class=\"table table-sm table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" class=\"fs-6 id-column\">id</th>\n                  <th scope=\"col\" class=\"fs-6 id=\"check\">選択</th>\n                  <th scope=\"col\" class=\"fs-6 id=\"time\">時刻</th>\n                  <th scope=\"col\" class=\"fs-6 id=\"user\">使用者</th>\n                  <th scope=\"col\" class=\"fs-6 id=\"remarks\">使用理由</th>\n                </tr>\n              </thead>\n              <tbody id=\"table-body\" class=\"table-group-divider\"></tbody>\n            </table>\n\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" id=\"delete\">選択削除</button>\n          <button type=\"button\" class=\"btn btn-primary\" id=\"new\">新規登録</button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"newModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"newModalLabel\">新規登録</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"mb-3\">\n                <label for=\"start-time\" class=\"col-form-label\">開始時刻:</label>\n                <input type=\"time\" class=\"form-control\" id=\"start-time\" name=\"start-time\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"ending-time\" class=\"col-form-label\">終了時刻:</label>\n                <input type=\"time\" class=\"form-control\" id=\"ending-time\" name=\"ending-time\">\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"meeting-name\"  class=\"col-4 col-form-label fs-6\">会議名：</label>\n                <select id=\"meeting-name\" name=\"meeting-name\" class=\"form-select col-form-label align-middle\">\n                  <option value=\"\" disabled selected hidden></option> \n                  {{#choices}}\n                  <option>{{.}}</option>\n                  {{/choices}}\n                </select>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"user-name\" class=\"col-form-label\">使用者:</label>\n                <input type=\"text\" class=\"form-control\" id=\"user-name\" name=\"user-name\">\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"message-text\" class=\"col-form-label\">使用理由:</label>\n                <textarea class=\"form-control\" id=\"message-text\" name=\"message-text\"></textarea>\n              </div>\n            </form>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-primary\" id=\"add\">登録</button>\n          </div>\n\n        </div>  \n      </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"correctModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"correctModalLabel\">登録内容</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"mb-3\">\n                <label for=\"start-time2\" class=\"col-form-label\">開始時刻:</label>\n                <input type=\"time\" class=\"form-control\" id=\"start-time2\" name=\"start-time\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"ending-time2\" class=\"col-form-label\">終了時刻:</label>\n                <input type=\"time\" class=\"form-control\" id=\"ending-time2\" name=\"ending-time\">\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"meeting-name2\"  class=\"col-4 col-form-label fs-6\">会議名：</label>\n                <select id=\"meeting-name2\" name=\"meeting-name\" class=\"form-select col-form-label align-middle\">\n                  <option value=\"\" disabled selected hidden></option> \n                  {{#choices}}\n                  <option>{{.}}</option>\n                  {{/choices}}\n                </select>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"user-name2\" class=\"col-form-label\">使用者:</label>\n                <input type=\"text\" class=\"form-control\" id=\"user-name2\" name=\"user-name\">\n              </div>\n\n              <div class=\"mb-3\">\n                <label for=\"message-text2\" class=\"col-form-label\">使用理由:</label>\n                <textarea class=\"form-control\" id=\"message-text2\" name=\"message-text\"></textarea>\n              </div>\n\n              <div class=\"mb-3\" style=\"display: none;\">\n                <input type=\"number\" id=\"dbid\" name=\"dbid\">\n              </div>\n            </form>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"delete2\">削除</button>\n            <button type=\"button\" class=\"btn btn-primary\" id=\"correct\">修正</button>\n          </div>\n\n        </div>  \n      </div>\n    </div>\n\n    \n  \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n    <!--script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script -->\n    <script>\n    {{{js.javascriptfile}}}\n    </script>  \n\n  </body>\n</html>\n",
        "output": "str",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "2675f9b2859dd02d"
            ]
        ]
    },
    {
        "id": "55df46d62376add8",
        "type": "template",
        "z": "8be7dd333bfef1af",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".body {\n\n  font-family: 'Arial', sans-serif;\n  background-color: #f2f2f2;\n  margin: 0; /* デフォルトのマージンを解除 */\n  padding: 0; /* デフォルトのパディングを解除 */\n\n}\n\n.container {\n  display: grid;\n  overflow-x: auto;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: 250px repeat(5, 135px); /* 同じパターンを簡潔に表現 */\n  \n}\n\n.btn.btn-secondary#prevMonthBtn::before {\n  content: '<';\n}\n\n.btn.btn-secondary#nextMonthBtn::after {\n  content: '>';\n}\n\n.item1, .item2, .item3, .item4, .item5, .item11 {\n  position: sticky;\n  left: 0;\n  z-index: 1;\n  width: 250px;\n}\n\n.item6, .item7, .item8, .item9, .item10, .item12 {\n  display: flex;\n}\n\n.item1 {\n  background-color: white;\n  grid-row: 1/2;\n  grid-column: 1/2;\n}\n\n.item2 {\n  background-color: #e0f7fa;\n  grid-row: 2/3;\n  grid-column: 1/2;\n  border: 1px solid white;\n}\n\n.item3 {\n  background-color: #fff9c4;\n  grid-row: 3/4;\n  grid-column: 1/2;\n  border: 1px solid white;\n}\n\n.item4 {\n  background-color: #fff9c4;\n  grid-row: 4/5;\n  grid-column: 1/2;\n  border: 1px solid white;\n}\n\n.item5 {\n  background-color: #fff9c4;\n  grid-row: 5/6;\n  grid-column: 1/2;\n  border: 1px solid white;\n}\n\n.item11 {\n  background-color: #fff9c4;\n  grid-row: 6/7;\n  grid-column: 1/2;\n  border: 1px solid white;\n}\n\n.item6 {\n  grid-row: 1/2;\n  grid-column: 2/3;\n  align-items: flex-end;\n  \n}\n\n.item7 {\n  grid-row: 2/3;\n  grid-column: 2/3;\n\n}\n\n.item8 {\n  grid-row: 3/4;\n  grid-column: 2/3;\n\n}\n\n.item9 {\n  grid-row: 4/5;\n  grid-column: 2/3;\n\n}\n\n.item10 {\n  grid-row: 5/6;\n  grid-column: 2/3;\n\n}\n\n.item12 {\n  grid-row: 6/7;\n  grid-column: 2/3;\n\n}\n\n.calendar-container,\n.meetingRoom-container,\n.nVan-container,\n.wingRoad-container,\n.regiasAce-container,\n.noah-container {\n  display: flex;\n  flex-wrap: nowrap;\n  width: 100%;\n} \n\n.meetingRoom-cell,\n.nVan-cell,\n.wingRoad-cell,\n.regiasAce-cell,\n.noah-cell {\n  background-color: #e9ecef; \n  min-width: calc(100% / 5);\n  box-sizing: border-box;\n  text-align: center;\n  border: 1px solid white;\n}\n\n.meetingRoom-cell:hover,\n.nVan-cell:hover,\n.wingRoad-cell:hover,\n.regiasAce-cell:hover,\n.noah-cell:hover {\n  border: 2px solid #000; /* 枠の色や太さを調整 */\n}\n\n.day-cell {\n\n  min-width: calc(100% / 5);\n  box-sizing: border-box;\n  text-align: center;\n  border: 1px solid white;\n}\n\nul {\n  text-align: left;\n}\n\n.id-column {\n  display: none;\n}\n",
        "output": "str",
        "x": 750,
        "y": 160,
        "wires": [
            [
                "187de1445e3e513e"
            ]
        ]
    },
    {
        "id": "835208e576da8a3f",
        "type": "template",
        "z": "8be7dd333bfef1af",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener(\"DOMContentLoaded\", function () {\n\n    const calendarContainer = document.getElementById(\"calendar\");\n    const meetingRoomContainer = document.getElementById(\"meetingRoomSchedule\");\n    const nVanContainer = document.getElementById(\"nVanSchedule\");\n    const wingRoadContainer = document.getElementById(\"wingRoadSchedule\");\n    const regiasAceContainer = document.getElementById(\"regiasAceSchedule\");\n    const noahContainer = document.getElementById(\"noahSchedule\");\n    \n    let currentYear;\n    let currentMonth;\n\n    function createCalendar(year, month) {\n\n        const daysInMonth = new Date(year, month + 1, 0).getDate();\n        \n        const calendarContent = document.createElement(\"div\");\n        calendarContent.classList.add(\"calendar-container\");\n\n        const meetingRoomContent = document.createElement(\"div\");\n        meetingRoomContent.classList.add(\"meetingRoom-container\");\n\n        const nVanContent = document.createElement(\"div\");\n        nVanContent.classList.add(\"nVan-container\");\n\n        const wingRoadContent = document.createElement(\"div\");\n        wingRoadContent.classList.add(\"wingRoad-container\");\n        \n        const regiasAceContent = document.createElement(\"div\");\n        regiasAceContent.classList.add(\"regiasAce-container\");\n\n        const noahContent = document.createElement(\"div\");\n        noahContent.classList.add(\"noah-container\");\n\n        for (let day = 1; day <= daysInMonth; day++) {\n\n            createScheduleCells(year, month, day, calendarContent, meetingRoomContent, nVanContent, wingRoadContent, regiasAceContent, noahContent);\n\n        }\n\n        calendarContainer.innerHTML = \"\"; \n        calendarContainer.appendChild(calendarContent);\n\n        meetingRoomContainer.innerHTML = \"\"; \n        meetingRoomContainer.appendChild(meetingRoomContent);\n\n        nVanContainer.innerHTML = \"\";\n        nVanContainer.appendChild(nVanContent);\n\n        wingRoadContainer.innerHTML = \"\";\n        wingRoadContainer.appendChild(wingRoadContent);\n\n        regiasAceContainer.innerHTML = \"\";\n        regiasAceContainer.appendChild(regiasAceContent);\n\n        noahContainer.innerHTML = \"\";\n        noahContainer.appendChild(noahContent);\n\n    }\n\n    function getDayName(dayIndex) {\n        const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        return dayNames[dayIndex];\n    }\n\n    function formatTimeForInput(timeString) {\n        const time = new Date(`1970-01-01T${timeString}Z`);\n        const hours = time.getUTCHours().toString().padStart(2, '0');\n        const minutes = time.getUTCMinutes().toString().padStart(2, '0');\n        return `${hours}:${minutes}`;\n    }\n\n\n    function inforSearch(clickedId) {\n\n        let searchWord = `${currentYear}-${currentMonth + 1}`;\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/infor-search`);\n\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(clickedId));\n\n        };\n\n        socket.onmessage = function (event) {\n            \n            let responseData = JSON.parse(event.data);\n\n            document.getElementById(\"start-time2\").value = formatTimeForInput(responseData[0].starttime);\n            document.getElementById(\"ending-time2\").value = formatTimeForInput(responseData[0].endingtime);\n            document.getElementById(\"meeting-name2\").value = responseData[0].meetingname;\n            document.getElementById(\"user-name2\").value = responseData[0].user;\n            document.getElementById(\"message-text2\").value = responseData[0].remarks;\n            document.getElementById(\"dbid\").value = responseData[0].id;\n\n            new bootstrap.Modal(document.getElementById('correctModal')).show();\n\n            socket.close();\n        };\n\n    }\n\n    function displayDataInTable(data) {\n        let tableBody = document.getElementById(\"table-body\");\n\n        tableBody.innerHTML = \"\";\n\n        data.forEach(function (item) {\n\n            let row = tableBody.insertRow();\n            let cell1 = row.insertCell(0);\n            let cell2 = row.insertCell(1);\n            let cell3 = row.insertCell(2);\n            let cell4 = row.insertCell(3);\n            let cell5 = row.insertCell(4);\n\n            cell1.innerHTML = item.id;\n            cell1.style.display = \"none\";\n\n            let checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.style.width = \"20px\";\n            checkbox.style.height = \"20px\";\n            cell2.appendChild(checkbox);\n\n            let startTimeString = formatTime(item.starttime);\n            let endingTimeString = formatTime(item.endingtime);\n            let time = `${startTimeString}-${endingTimeString}`;\n            cell3.innerHTML = time;\n\n            let meetingNameText = item.meetingname !== null ? item.meetingname : '';\n            meetingNameText = meetingNameText === 'null' ? '' : meetingNameText;\n            let userText = item.user !== null ? item.user : '';\n            userText = userText === 'null' ? '' : userText;\n\n            cell4.innerHTML = `${meetingNameText} ${userText}`;\n            cell5.innerHTML = item.remarks;\n\n            row.addEventListener(\"click\", function (event) {\n\n                const clickedCellIndex = event.target.cellIndex;\n                if (clickedCellIndex === 1 || event.target.tagName.toLowerCase() === \"input\" || event.target.type === \"checkbox\") {\n                    // クリックイベントを停止して何もしない\n                    event.stopPropagation();\n                    console.log(\"Checkbox clicked. Do nothing.\");\n                    return;\n                }\n\n                let clickedId = item.id;\n                inforSearch(clickedId);\n\n            });\n        \n        });\n    }\n\n    function createScheduleCells(year, month, day, calendarContent, meetingRoomContent, nVanContent, wingRoadContent, regiasAceContent, noahContent) {\n\n        const dayCell = document.createElement(\"div\");\n        dayCell.classList.add(\"day-cell\");\n        dayCell.textContent = `${day} (${getDayName(new Date(year, month, day).getDay())})`;\n        dayCell.style.fontWeight = 'bold';\n        calendarContent.appendChild(dayCell);\n\n        const meetingRoomCell = document.createElement(\"div\");\n        meetingRoomCell.classList.add(\"meetingRoom-cell\");\n        meetingRoomCell.setAttribute(\"data-toggle\", \"modal\");\n        meetingRoomCell.setAttribute(\"data-target\", \"#exampleModal\");\n        meetingRoomContent.appendChild(meetingRoomCell);\n        \n        const nVanCell = document.createElement(\"div\");\n        nVanCell.classList.add(\"nVan-cell\");\n        nVanCell.setAttribute(\"data-toggle\", \"modal\");\n        nVanCell.setAttribute(\"data-target\", \"#exampleModal\");\n        nVanContent.appendChild(nVanCell);\n\n        const wingRoadCell = document.createElement(\"div\");\n        wingRoadCell.classList.add(\"wingRoad-cell\");\n        wingRoadCell.setAttribute(\"data-toggle\", \"modal\");\n        wingRoadCell.setAttribute(\"data-target\", \"#exampleModal\");\n        wingRoadContent.appendChild(wingRoadCell);\n\n        const regiasAceCell = document.createElement(\"div\");\n        regiasAceCell.classList.add(\"regiasAce-cell\");\n        regiasAceCell.setAttribute(\"data-toggle\", \"modal\");\n        regiasAceCell.setAttribute(\"data-target\", \"#exampleModal\");\n        regiasAceContent.appendChild(regiasAceCell);\n\n        const noahCell = document.createElement(\"div\");\n        noahCell.classList.add(\"noah-cell\");\n        noahCell.setAttribute(\"data-toggle\", \"modal\");\n        noahCell.setAttribute(\"data-target\", \"#exampleModal\");\n        noahContent.appendChild(noahCell);\n\n        // クリックイベントを追加\n        meetingRoomCell.addEventListener(\"click\", function () {\n            updateHeaderTitle(\"会議室\", year, month, day);\n            fetchDataAndPopulateModalTable(\"会議室\");\n            new bootstrap.Modal(document.getElementById('exampleModal')).show();\n        });\n        \n        nVanCell.addEventListener(\"click\", function () {\n            updateHeaderTitle(\"N-VAN\", year, month, day);\n            fetchDataAndPopulateModalTable(\"N-VAN\");\n            new bootstrap.Modal(document.getElementById('exampleModal')).show();\n        });\n\n        wingRoadCell.addEventListener(\"click\", function () {\n            updateHeaderTitle(\"ｳｨﾝｸﾞﾛｰﾄﾞ\", year, month, day);\n            fetchDataAndPopulateModalTable(\"ｳｨﾝｸﾞﾛｰﾄﾞ\");\n            new bootstrap.Modal(document.getElementById('exampleModal')).show();\n        });\n\n        regiasAceCell.addEventListener(\"click\", function () {\n            updateHeaderTitle(\"ﾚｼﾞｱｽｴｰｽ\", year, month, day);\n            fetchDataAndPopulateModalTable(\"ﾚｼﾞｱｽｴｰｽ\");\n            new bootstrap.Modal(document.getElementById('exampleModal')).show();\n        });\n\n        noahCell.addEventListener(\"click\", function () {\n            updateHeaderTitle(\"NOAH\", year, month, day);\n            fetchDataAndPopulateModalTable(\"NOAH\");\n            new bootstrap.Modal(document.getElementById('exampleModal')).show();\n        });\n\n        function updateHeaderTitle(title, year, month, day) {\n            \n            const headerTitleElement = document.getElementById('exampleModalLabel');\n            if (headerTitleElement) {\n                headerTitleElement.textContent = title + ` ${year}-${month + 1}-${day}`;\n            }\n        }\n\n        function fetchDataAndPopulateModalTable(option) {\n\n            let scheduleddate = `${year}-${month + 1}-${day}`;\n            let selectedoption = option;\n\n            let searchWord = {\n\n                scheduleddate: scheduleddate,\n                selectedoption: selectedoption\n\n            }\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/schedule-tables`);\n\n            socket.onopen = function (event) {\n                socket.send(JSON.stringify(searchWord));\n\n            };\n\n            socket.onmessage = function (event) {\n                let responseData = JSON.parse(event.data);\n\n                displayDataInTable(responseData);\n\n                socket.close();\n            };\n    \n        }\n    }\n\n    function scrollCell(currentDate) {\n\n        let currentDay = currentDate.getDate();\n        let currentMonth = currentDate.getMonth()\n    \n        let currentMonthValue = parseInt(document.getElementById(\"currentMonth\").textContent);\n        \n        // 現在の月とページ上で選択された月が一致するか確認\n        if (currentMonthValue === currentMonth + 1) {\n\n            \n            // カレンダー内の全ての日セルを取得\n            const dayCells = document.querySelectorAll(\".day-cell\");\n\n            // 今日の日付のセルを探す\n            let targetCell;\n            dayCells.forEach(function (cell) {\n                if (cell.textContent.startsWith(`${currentDay} (`)) {\n                    targetCell = cell;\n                }\n            });\n\n            // 今日の日付のセルが見つかった場合、そのセルまでスクロールする\n            if (targetCell) {\n                targetCell.scrollIntoView();\n            }\n\n        } else {\n\n            // カレンダーの最初の日付にスクロールする\n            const firstDayCell = document.querySelector(\".day-cell\");\n            if (firstDayCell) {\n                firstDayCell.scrollIntoView();\n            }\n\n        }\n    }\n\n    function formatTime(timeString) {\n        const time = new Date(`1970-01-01T${timeString}`);\n        return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n\n    function selectCellByDay(record) {\n\n        let selectedOption = record.selectedoption;\n        let day = record.day;\n        let startTimeString = formatTime(record.starttime);\n        let endingTimeString = formatTime(record.endingtime);\n        let container = getContainerIdByOption(selectedOption);\n\n        // 既存のセルを取得\n        let existingCell = document.querySelector(`.${container.containerId} .${container.cellClass}:nth-child(${day})`);\n\n\n        // 新しいリストアイテムを作成\n        let newItem = document.createElement('li');\n\n        let meetingNameText = record.meetingname !== null ? record.meetingname : '';\n        meetingNameText = meetingNameText === 'null' ? '' : meetingNameText;\n        \n        let userText = record.user !== null ? record.user : '';\n        userText = userText === 'null' ? '' : userText;\n\n        newItem.textContent = `${startTimeString}-${endingTimeString}  ${meetingNameText} ${userText}`;\n        newItem.style.fontWeight = 'bold'; // 太文字\n        newItem.style.color = 'white';\n\n    \n        // 既存のセルが存在する場合\n        if (existingCell) {\n            // 既存のリストを取得するか、なければ新しく作成\n            let existingList = existingCell.querySelector('ul') || document.createElement('ul');\n\n            // リストアイテムをリストに追加\n            existingList.appendChild(newItem);\n\n            if (record.selectedoption === '会議室'){\n\n                // リストをセルに追加\n                existingCell.appendChild(existingList);\n                existingCell.style.backgroundColor = \"#00bcd4\";\n\n            }else{\n\n                existingCell.appendChild(existingList);\n                existingCell.style.backgroundColor = \"#f9a825\";\n\n            }\n   \n        }    \n\n    }\n\n\n    // 選択したセルにスクロールしたり、他の必要なアクションを実行します\n            //selectedCell.scrollIntoView({ behavior: 'smooth' });\n\n    function getContainerIdByOption(selectedOption) {\n\n        switch (selectedOption) {\n            case \"会議室\":\n                return {\n                    containerId: \"meetingRoom-container\",\n                    cellClass: \"meetingRoom-cell\"\n                };\n\n            case \"N-VAN\":\n                return {\n                    containerId: \"nVan-container\",\n                    cellClass: \"nVan-cell\"\n                };\n\n            case \"ｳｨﾝｸﾞﾛｰﾄﾞ\":\n                return {\n                    containerId: \"wingRoad-container\",\n                    cellClass: \"wingRoad-cell\"\n                };\n\n            case \"ﾚｼﾞｱｽｴｰｽ\":\n                return {\n                    containerId: \"regiasAce-container\",\n                    cellClass: \"regiasAce-cell\"\n                }; \n\n            case \"NOAH\":\n                return {\n                    containerId: \"noah-container\",\n                    cellClass: \"noah-cell\"\n                };\n            \n\n            default:\n                return {\n                    containerId: \"\", \n                    cellClass: \"\"     \n                };\n        }\n\n    }\n\n    function scheduleSearch(currentYear, currentMonth) {\n\n        let searchWord = `${currentYear}-${currentMonth + 1}`;\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/schedule-search`);\n\n        socket.onopen = function (event) {\n            socket.send(JSON.stringify(searchWord));\n\n        };\n\n        socket.onmessage = function (event) {\n            let responseData = JSON.parse(event.data);\n\n            responseData.forEach(function (record) {    \n                selectCellByDay(record);\n            });\n\n            socket.close();\n        };\n\n    }\n\n    // 前月ボタンにクリックイベントリスナーを追加\n    const prevMonthBtn = document.getElementById('prevMonthBtn');\n    prevMonthBtn.addEventListener('click', function () {\n        currentMonth--;\n        if (currentMonth < 0) {\n            currentMonth = 11;  // 12月の場合は11に戻す\n            currentYear--;\n        }\n        createCalendar(currentYear, currentMonth);\n        scheduleSearch(currentYear, currentMonth);\n        \n        document.getElementById(\"currentYear\").textContent = currentYear;\n        document.getElementById(\"currentMonth\").textContent = currentMonth+1;\n\n        scrollCell(currentDate);\n    });\n\n    // 次月ボタンにクリックイベントリスナーを追加\n    const nextMonthBtn = document.getElementById('nextMonthBtn');\n    nextMonthBtn.addEventListener('click', function () {\n        currentMonth++;\n        if (currentMonth > 11) {\n            currentMonth = 0;  // 1月の場合は0に戻す\n            currentYear++;\n        }\n        createCalendar(currentYear, currentMonth);\n        scheduleSearch(currentYear, currentMonth);\n        \n        document.getElementById(\"currentYear\").textContent = currentYear;\n        document.getElementById(\"currentMonth\").textContent = currentMonth+1;\n\n        scrollCell(currentDate);\n    });\n    \n    const currentDate = new Date();\n    currentYear = currentDate.getFullYear();\n    currentMonth = currentDate.getMonth();\n    \n    createCalendar(currentYear, currentMonth);\n    scheduleSearch(currentYear, currentMonth);\n\n    // 対応する要素に年と月を設定\n    document.getElementById(\"currentYear\").textContent = currentYear;\n    document.getElementById(\"currentMonth\").textContent = currentMonth + 1;\n\n    scrollCell(currentDate);\n\n    const newButton = document.getElementById('new');\n    const newModal = new bootstrap.Modal(document.getElementById('newModal'));\n    newButton.addEventListener('click', function () {\n\n        // 別のモーダルを表示\n        newModal.show();\n    });\n\n    document.getElementById('add').addEventListener('click', function () {\n\n        const exampleModalHeader = document.getElementById('exampleModalLabel');\n        const exampleModalHeaderText = exampleModalHeader.textContent.trim();\n        const splitHeaderText = exampleModalHeaderText.split(' ');\n        let scheduledDate = splitHeaderText[1];\n        let selectedoption = splitHeaderText[0];\n\n        let form = document.querySelector('form');\n        let formData = new FormData(form);\n\n\n        // FormDataから各フィールドの値を取得\n        let startTime = formData.get('start-time');\n        let endingTime = formData.get('ending-time');\n        let user = formData.get('user-name');\n        let remarks = formData.get('message-text');\n        let meetingName = formData.get('meeting-name');\n\n        // startTimeとendingTimeが空の場合にアラートを表示して処理中止\n        if (!startTime || !endingTime) {\n            alert('開始時刻と終了時刻を入力してください。');\n            return;  // 処理を中止\n        }\n\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/schedule-add`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                scheduledDate: scheduledDate,\n                startTime: startTime,\n                endingTime: endingTime,\n                user: user,\n                remarks: remarks,\n                selectedoption: selectedoption,\n                meetingName: meetingName\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            alert('新規登録しました。')\n            socket.close();\n\n            window.location.href = '/ktrg';\n\n        };\n    }); \n\n    document.getElementById('delete2').addEventListener('click', function () {\n\n        var dbId = parseInt(document.getElementById('dbid').value);\n\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/schedule-delete2`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                id: dbId,\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            alert('削除しました。')\n            socket.close();\n\n            window.location.href = '/ktrg';\n\n        };\n\n    }); \n\n\n    document.getElementById('delete').addEventListener('click', function () {\n\n        const confirmed = window.confirm('選択した行を削除してもよろしいですか？');\n\n        if (confirmed) {\n\n            let idColumn = getCheckedRowsData();\n\n            const hostname = window.location.hostname;\n            let socket = new WebSocket(`wss://${hostname}/schdedule-delete`);\n\n            socket.onopen = function (event) {\n                let requestData = {\n                    idColumn: idColumn\n                };\n                socket.send(JSON.stringify(requestData));\n            };\n\n            socket.onmessage = function (event) {\n                alert('削除しました。')\n                socket.close();\n\n                window.location.href = '/ktrg';\n\n            };\n\n            function getCheckedRowsData() {\n\n                let checkedRowsData = [];\n                let tableRows = document.querySelectorAll('#table-body tr');\n                    tableRows.forEach(function (row) {\n                        let checkbox = row.querySelector('input[type=\"checkbox\"]');\n                        if (checkbox.checked) {\n                            let rowData = {};\n                            rowData.id = parseInt(row.cells[0].textContent, 10);\n                            checkedRowsData.push(rowData);\n                        }\n                    });\n                return checkedRowsData;\n            }    \n        }else{\n            return;\n        }\n    }); \n\n    document.getElementById('correct').addEventListener('click', function () {\n\n\n\n        var startTime = document.getElementById('start-time2').value;\n        var endingTime = document.getElementById('ending-time2').value;\n        var meetingName = document.getElementById('meeting-name2').value;\n        var user = document.getElementById('user-name2').value;\n        var messageText = document.getElementById('message-text2').value;\n        var dbId = parseInt(document.getElementById('dbid').value); \n\n\n        const hostname = window.location.hostname;\n        let socket = new WebSocket(`wss://${hostname}/schedule-correct`);\n\n        socket.onopen = function (event) {\n            let requestData = {\n                id: dbId,\n                startTime: startTime,\n                endingTime: endingTime,\n                user: user,\n                remarks: messageText,\n                meetingName: meetingName\n            };\n            socket.send(JSON.stringify(requestData));\n        };\n\n        socket.onmessage = function (event) {\n            alert('修正しました。')\n            socket.close();\n\n            window.location.href = '/ktrg';\n\n        };\n    });   \n});",
        "output": "str",
        "x": 620,
        "y": 160,
        "wires": [
            [
                "55df46d62376add8"
            ]
        ]
    },
    {
        "id": "e5b4c24b5cbdebbb",
        "type": "http in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "url": "/ktrg",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "9ec1d199961ac073"
            ]
        ]
    },
    {
        "id": "788cb9bffa3e677f",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "8d369713f4fbe8e7",
        "client": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "4bdbb547a19c841a"
            ]
        ]
    },
    {
        "id": "4bdbb547a19c841a",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "eac560e144426553"
            ]
        ]
    },
    {
        "id": "eac560e144426553",
        "type": "change",
        "z": "8be7dd333bfef1af",
        "name": "INSERT INTO info",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO info (scheduleddate,starttime,endingtime,user,remarks,selectedoption,meetingname)VALUES('Scheduleddate','Starttime','Endingtime','User','Remarks','Selectedoption','Meetingname');",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Scheduleddate",
                "fromt": "str",
                "to": "payload.scheduledDate",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Starttime",
                "fromt": "str",
                "to": "payload.startTime",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Endingtime",
                "fromt": "str",
                "to": "payload.endingTime",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "User",
                "fromt": "str",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Remarks",
                "fromt": "str",
                "to": "payload.remarks",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Selectedoption",
                "fromt": "str",
                "to": "payload.selectedoption",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "Meetingname",
                "fromt": "str",
                "to": "payload.meetingName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 340,
        "wires": [
            [
                "a1f7a6d2500947b0"
            ]
        ]
    },
    {
        "id": "a1f7a6d2500947b0",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "7142009cb7dfab46"
            ]
        ]
    },
    {
        "id": "7142009cb7dfab46",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "8d369713f4fbe8e7",
        "client": "",
        "x": 1230,
        "y": 340,
        "wires": []
    },
    {
        "id": "e8201588faa85ce1",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "86c7e95049345a96",
        "client": "",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "33a182482000ceae"
            ]
        ]
    },
    {
        "id": "d560607b8b6c6a04",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "SELECT*FROM info WHERE",
        "func": "\nmsg.topic = \"SELECT * FROM info WHERE DATE_FORMAT(scheduleddate, '%Y-%c') = '\" + msg.payload + \"'ORDER BY starttime \";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 220,
        "wires": [
            [
                "1f74f6b3e5e62e0f"
            ]
        ]
    },
    {
        "id": "33a182482000ceae",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "d560607b8b6c6a04"
            ]
        ]
    },
    {
        "id": "1f74f6b3e5e62e0f",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "dfecdf6ae0a913ca"
            ]
        ]
    },
    {
        "id": "dfecdf6ae0a913ca",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "",
        "func": "msg.payload.forEach(function (record, index) {\n\n    const dateObject = new Date(record.scheduleddate);\n\n    // 例: 年、月、日、時、分、秒を取得\n    const year = dateObject.getFullYear();\n    const month = dateObject.getMonth() + 1; // 月は0-indexedなので+1する\n    const day = dateObject.getDate();\n\n    record.day = day;\n});\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "d51d17120af5802e"
            ]
        ]
    },
    {
        "id": "e67a9e4559bd3723",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "86c7e95049345a96",
        "client": "",
        "x": 1500,
        "y": 220,
        "wires": []
    },
    {
        "id": "d51d17120af5802e",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "e67a9e4559bd3723"
            ]
        ]
    },
    {
        "id": "f7cc90d5724fe067",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "a0cbf1563290bad7",
        "client": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "20740d8071779269"
            ]
        ]
    },
    {
        "id": "20740d8071779269",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "eb27cbe1943a8085"
            ]
        ]
    },
    {
        "id": "eb27cbe1943a8085",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "SELECT*FROM info WHERE",
        "func": "\nmsg.topic = \"SELECT * FROM info WHERE DATE_FORMAT(scheduleddate, '%Y-%c-%e') = '\" + msg.payload.scheduleddate + \"' AND selectedoption = '\" + msg.payload.selectedoption + \"' ORDER BY starttime \";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 280,
        "wires": [
            [
                "c97a04c26d949c2b"
            ]
        ]
    },
    {
        "id": "f3bad7cfa980b9e5",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "a0cbf1563290bad7",
        "client": "",
        "x": 1240,
        "y": 280,
        "wires": []
    },
    {
        "id": "c97a04c26d949c2b",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "f3bad7cfa980b9e5"
            ]
        ]
    },
    {
        "id": "0d7c877f69d4ad58",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "5c683fe41de7339d",
        "client": "",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "dacfe77fb62f32fb"
            ]
        ]
    },
    {
        "id": "dacfe77fb62f32fb",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "8b7848097223c33a"
            ]
        ]
    },
    {
        "id": "8b7848097223c33a",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "DELETE FROM  info WHERE",
        "func": "var idcolumns = msg.payload.idColumn;\n\n\nvar queries = [];\n\nfor (var i = 0; i < idcolumns.length; i++) {\n    var idcolumn = idcolumns[i].id\n\n    // クエリを生成し、queries 配列に追加\n    var query = \"DELETE FROM info WHERE id = \" + idcolumn + \";\";\n    queries.push(query);\n}\n\nmsg.payload = queries;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "1dcac486ee1fe221"
            ]
        ]
    },
    {
        "id": "1dcac486ee1fe221",
        "type": "split",
        "z": "8be7dd333bfef1af",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 400,
        "wires": [
            [
                "d2cc0c49bb313ca2"
            ]
        ]
    },
    {
        "id": "d2cc0c49bb313ca2",
        "type": "change",
        "z": "8be7dd333bfef1af",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 400,
        "wires": [
            [
                "558814d4c424db9c"
            ]
        ]
    },
    {
        "id": "558814d4c424db9c",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "3d1a43b25a3da336"
            ]
        ]
    },
    {
        "id": "3d1a43b25a3da336",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "5c683fe41de7339d",
        "client": "",
        "x": 1240,
        "y": 400,
        "wires": []
    },
    {
        "id": "9ec1d199961ac073",
        "type": "file in",
        "z": "8be7dd333bfef1af",
        "name": "会議名読込",
        "filename": "/home/kuwata/ktrg/会議名.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "9a8dc78b227c3582"
            ]
        ]
    },
    {
        "id": "9a8dc78b227c3582",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choices = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choices.push(row); \n}\n\nmsg.choices = choices;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "835208e576da8a3f"
            ]
        ]
    },
    {
        "id": "4ebf05a089606a81",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "bc68eba9350333ea",
        "client": "",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "4882142ad0ec6cc1"
            ]
        ]
    },
    {
        "id": "4882142ad0ec6cc1",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "55970ae89c730974"
            ]
        ]
    },
    {
        "id": "dcfabd052fd5a7f2",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "bc68eba9350333ea",
        "client": "",
        "x": 1230,
        "y": 460,
        "wires": []
    },
    {
        "id": "55970ae89c730974",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "SELECT*FROM info WHERE",
        "func": "\nmsg.topic = \"SELECT * FROM info WHERE id=\" + msg.payload + \"\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 460,
        "wires": [
            [
                "e1e10be34babb9e7"
            ]
        ]
    },
    {
        "id": "e1e10be34babb9e7",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 460,
        "wires": [
            [
                "dcfabd052fd5a7f2"
            ]
        ]
    },
    {
        "id": "a77b4a502ae049f0",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "ad447a03830fa422",
        "client": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "ede7f923bb205eee"
            ]
        ]
    },
    {
        "id": "ede7f923bb205eee",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "1bcd0dda224b5d92"
            ]
        ]
    },
    {
        "id": "1bcd0dda224b5d92",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "SELECT*FROM info WHERE",
        "func": "\nmsg.topic = \"UPDATE info SET starttime = '\"+msg.payload.startTime+\"', endingtime = '\"+msg.payload.endingTime+\"', user = '\"+msg.payload.user+\"', remarks = '\"+msg.payload.remarks+\"', meetingname = '\"+msg.payload.meetingName+\"' WHERE id= \"+msg.payload.id+\"\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "a285677b1e5bb1a9"
            ]
        ]
    },
    {
        "id": "a285677b1e5bb1a9",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "8103621c4de94e36"
            ]
        ]
    },
    {
        "id": "8103621c4de94e36",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "ad447a03830fa422",
        "client": "",
        "x": 1240,
        "y": 520,
        "wires": []
    },
    {
        "id": "d3e5e0f2d155919c",
        "type": "function",
        "z": "8be7dd333bfef1af",
        "name": "DELETE FROM  info WHERE",
        "func": "\nmsg.topic = \"DELETE FROM info WHERE id = \" + msg.payload.id + \";\";\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 600,
        "wires": [
            [
                "80bfda8d3c89bef7"
            ]
        ]
    },
    {
        "id": "5295a1e53c5798a9",
        "type": "websocket in",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "2c44ce84f49778ad",
        "client": "",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "9999e1282a79164f"
            ]
        ]
    },
    {
        "id": "9999e1282a79164f",
        "type": "json",
        "z": "8be7dd333bfef1af",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 600,
        "wires": [
            [
                "d3e5e0f2d155919c"
            ]
        ]
    },
    {
        "id": "80bfda8d3c89bef7",
        "type": "mysql",
        "z": "8be7dd333bfef1af",
        "mydb": "16d73cb773b56ff8",
        "name": "",
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "6463cde306758bfe"
            ]
        ]
    },
    {
        "id": "6463cde306758bfe",
        "type": "websocket out",
        "z": "8be7dd333bfef1af",
        "name": "",
        "server": "2c44ce84f49778ad",
        "client": "",
        "x": 1240,
        "y": 600,
        "wires": []
    },
    {
        "id": "41b0df3af986bb3a",
        "type": "ui_form",
        "z": "79b1e6a981b74ef6",
        "name": "依頼発行",
        "label": "",
        "group": "0a4c64c88dbf0fab",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "依頼者",
                "value": "client",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "依頼日",
                "value": "requestDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "入庫日",
                "value": "goodsReceiptDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "品番",
                "value": "productNumber",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "内容",
                "value": "what",
                "type": "multiline",
                "required": true,
                "rows": 3
            }
        ],
        "formValue": {
            "client": "",
            "requestDate": "",
            "goodsReceiptDate": "",
            "productNumber": "",
            "what": ""
        },
        "payload": "",
        "submit": "送信",
        "cancel": "キャンセル",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "f0bde3e394261ffe"
            ]
        ]
    },
    {
        "id": "4a0cd686d6131a1f",
        "type": "ui_table",
        "z": "79b1e6a981b74ef6",
        "group": "9f577487ab0591c2",
        "name": "依頼履歴",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "ID",
                "title": "依頼No.",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "進捗",
                "width": "5%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "requestDate",
                "title": "依頼日",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "client",
                "title": "依頼者",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "goodsReceiptDate",
                "title": "入庫日",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "productNumber",
                "title": "品番",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "what",
                "title": "内容",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "c52e729bcf23b52a"
            ]
        ]
    },
    {
        "id": "f0bde3e394261ffe",
        "type": "function",
        "z": "79b1e6a981b74ef6",
        "name": "INSERT INTO request",
        "func": "var sendRequestDate = new Date(msg.payload.requestDate);\nvar requestDate = sendRequestDate.toLocaleDateString();\n\nvar sendgoodsReceiptDate = new Date(msg.payload.goodsReceiptDate);\nvar goodsReceiptDate = sendgoodsReceiptDate.toLocaleDateString();\n\nvar insertQuery = \"INSERT INTO request(client, requestDate, goodsReceiptDate, productNumber, what, status) VALUES ('\" + msg.payload.client + \"','\" + requestDate + \"','\" + goodsReceiptDate + \"','\" + msg.payload.productNumber + \"','\" + msg.payload.what + \"',\"+ 0 +\")\";\n\nmsg.topic = insertQuery;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 60,
        "wires": [
            [
                "4d45ac0f82c2e5c0"
            ]
        ]
    },
    {
        "id": "4d45ac0f82c2e5c0",
        "type": "mysql",
        "z": "79b1e6a981b74ef6",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 460,
        "y": 60,
        "wires": [
            [
                "7c963213666dccd4"
            ]
        ]
    },
    {
        "id": "165e8b5eb43afba3",
        "type": "change",
        "z": "79b1e6a981b74ef6",
        "name": "select*from request",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select*from request",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "6f70f49755fdf622"
            ]
        ]
    },
    {
        "id": "6f70f49755fdf622",
        "type": "mysql",
        "z": "79b1e6a981b74ef6",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "40174a4e361bdf76"
            ]
        ]
    },
    {
        "id": "40174a4e361bdf76",
        "type": "function",
        "z": "79b1e6a981b74ef6",
        "name": "Data Cleaning",
        "func": "function formatDateTime(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd hh:mm:ss 形式にフォーマット\n    var formattedDateTime = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0') + ' ' +\n        dbDateTime.getHours().toString().padStart(2, '0') + ':' +\n        dbDateTime.getMinutes().toString().padStart(2, '0') + ':' +\n        dbDateTime.getSeconds().toString().padStart(2, '0');\n\n    return formattedDateTime;\n}\n\nfunction formatDate(dateTimeString) {\n\n    var dbDateTime = new Date(dateTimeString);\n    // 例: yyyy-mm-dd\n    var formattedDate = dbDateTime.getFullYear() + '-' +\n        (dbDateTime.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        dbDateTime.getDate().toString().padStart(2, '0');\n\n    return formattedDate;\n}\n\n\n\n\nmsg.payload.forEach(function (record) {\n\n    record.requestDate = formatDate(record.requestDate);\n    record.goodsReceiptDate = formatDate(record.goodsReceiptDate);\n\n    if (record.status === 0){\n        record.status = '依頼中';\n    }else if (record.status === 1){\n        record.status = '処理済';\n    }else{\n        record.status = '取消';\n    }\n\n});\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            [
                "4a0cd686d6131a1f"
            ]
        ]
    },
    {
        "id": "636b3dfa46e99388",
        "type": "ui_form",
        "z": "79b1e6a981b74ef6",
        "name": "依頼取消",
        "label": "",
        "group": "76984d337167f0a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "依頼No.",
                "value": "ID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ID": ""
        },
        "payload": "",
        "submit": "取消",
        "cancel": "キャンセル",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "a8c64e665ab8fa5b"
            ]
        ]
    },
    {
        "id": "a8c64e665ab8fa5b",
        "type": "function",
        "z": "79b1e6a981b74ef6",
        "name": "UPDATE request",
        "func": "var updateQuery = \"UPDATE request SET status = 2 WHERE ID = '\" + msg.payload.ID + \"'\";\nmsg.topic = updateQuery;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 100,
        "wires": [
            [
                "8b44d9a21b72a961"
            ]
        ]
    },
    {
        "id": "8b44d9a21b72a961",
        "type": "mysql",
        "z": "79b1e6a981b74ef6",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "7c963213666dccd4"
            ]
        ]
    },
    {
        "id": "8ac0ce2d88aa1b9c",
        "type": "ui_form",
        "z": "79b1e6a981b74ef6",
        "name": "依頼処理",
        "label": "",
        "group": "9b3476150263ed2b",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "依頼No.",
                "value": "ID",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ID": ""
        },
        "payload": "",
        "submit": "処理完了",
        "cancel": "キャンセル",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "9710f484b7569814"
            ]
        ]
    },
    {
        "id": "9710f484b7569814",
        "type": "function",
        "z": "79b1e6a981b74ef6",
        "name": "UPDATE request",
        "func": "var updateQuery = \"UPDATE request SET status = 1 WHERE ID = '\" + msg.payload.ID + \"'\";\nmsg.topic = updateQuery;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "fc122de756266691"
            ]
        ]
    },
    {
        "id": "fc122de756266691",
        "type": "mysql",
        "z": "79b1e6a981b74ef6",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "7c963213666dccd4"
            ]
        ]
    },
    {
        "id": "7c963213666dccd4",
        "type": "link call",
        "z": "79b1e6a981b74ef6",
        "name": "",
        "links": [
            "dd549f7b236232eb"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 640,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "dd549f7b236232eb",
        "type": "link in",
        "z": "79b1e6a981b74ef6",
        "name": "依頼履歴更新",
        "links": [],
        "x": 55,
        "y": 200,
        "wires": [
            [
                "165e8b5eb43afba3"
            ]
        ]
    },
    {
        "id": "c52e729bcf23b52a",
        "type": "link out",
        "z": "79b1e6a981b74ef6",
        "name": "link out 6",
        "mode": "return",
        "links": [],
        "x": 775,
        "y": 200,
        "wires": []
    },
    {
        "id": "77979febb0b88e54",
        "type": "inject",
        "z": "79b1e6a981b74ef6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 660,
        "y": 60,
        "wires": [
            [
                "7c963213666dccd4"
            ]
        ]
    },
    {
        "id": "05b81edd7a839e96",
        "type": "template",
        "z": "7d1eb13dd09a2817",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <base target=\"_top\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>   \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"失敗\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page1\">入庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page2\">移動・出庫</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page10\">梱包</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page3\">受入・出荷</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" href=\"/page7\">出荷情報</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page4\">入出庫移動履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/page8\">出荷情報履歴</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text active\" aria-current=\"page\" href=\"#\">梱包履歴<span class=\"sr-only\">(現位置)</span></a>\n              </li>\n              \n            </ul>\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">梱包所要計画</h1>\n        <button class=\"btn btn-success ms-3\" id=\"product-infor\">CSV取得</button>\n      </div>\n      \n      <form method=\"post\" class=\"my-2\">\n        <div class=\"info\">\n\n          <div class=\"row\">\n\n            <div class=\"col-6\">\n              <label for=\"customer\"  class=\"col-2 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>  \n\n            <div class=\"col-6\">\n              <label for=\"product-number\" class=\"col-2 col-form-label fs-5\">品番：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\" placeholder=\"(※完全一致)\">\n            </div>\n\n          </div>\n\n          <div class=\"col-12 mt-3\">\n            <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"searchButton\">\n            <input type=\"button\" value=\"検索条件クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n\n        </div>  \n      </form>\n\n      <div class=\"table-container\">\n        <table id=\"mytable\" class=\"table table-hover my-4\">\n          <thead class=\"table-light\">\n            <tr>\n              <th scope=\"col\" class=\"fs-6\">客先</th>\n              <th scope=\"col\" class=\"fs-6\">品番</th>\n              <th scope=\"col\" class=\"fs-6\">ものの区分</th>\n              <th scope=\"col\" class=\"fs-6\">出荷実績(直近1ヶ月)</th>\n              <th scope=\"col\" class=\"fs-6\">出荷実績(直近1週間)</th>\n              <th scope=\"col\" class=\"fs-6\">出荷残</th>\n              <th scope=\"col\" class=\"fs-6\">在庫数</th>\n              \n            </tr> \n          </thead>\n          <tbody id=\"table-body\"></tbody>\n        </table>\n      </div>  \n    </div> \n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script> \n  </body>\n</html>\n\n",
        "output": "str",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "d6c3e48b79446459"
            ]
        ]
    },
    {
        "id": "60a432eb0568b777",
        "type": "template",
        "z": "7d1eb13dd09a2817",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* テーブルのコンテナに対してのスタイル */\n.table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n    overflow-x: scroll;\n    position: relative; /* ポジションを相対的に設定 */\n}\n\n/* テーブルのヘッダー行に対してのスタイル */\n#mytable thead th {\n    white-space: nowrap;\n    position: sticky;\n    top: 0; /* 上端に固定 */\n    z-index: 1; /* 他の要素より上に表示 */\n    background-color: #ffffff; /* 背景色を指定 */\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "05b81edd7a839e96"
            ]
        ]
    },
    {
        "id": "d6c3e48b79446459",
        "type": "http response",
        "z": "7d1eb13dd09a2817",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 60,
        "wires": []
    },
    {
        "id": "44570fd1f2403475",
        "type": "template",
        "z": "7d1eb13dd09a2817",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\nfunction clearForm() {\n    \n    document.getElementById(\"customer\").value = \"\";\n    document.getElementById(\"product-number\").value = \"\";\n\n}\n\nfunction sendDataToNodeRED(customer, productNumber) {\n\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/PackingRequirements-search`);\n\n    socket.onopen = function (event) {\n        let requestData = {\n            customer: customer,\n            productNumber: productNumber,\n        };\n        socket.send(JSON.stringify(requestData));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        displayDataInTable(responseData);\n        socket.close();\n    };\n\n    socket.onclose = function (event) {\n        console.log(\"Socket connection closed.\");\n    };\n}\n\n// テーブルにデータを表示する関数\nfunction displayDataInTable(data) {\n\n    let tableBody = document.getElementById(\"table-body\");\n\n    // テーブルのtbody要素をクリア\n    tableBody.innerHTML = \"\";\n\n    // データをテーブルに追加\n    data.forEach(function (item) {\n        let row = tableBody.insertRow();\n        let cell1 = row.insertCell(0); //客先\n        let cell2 = row.insertCell(1); //品番\n        let cell3 = row.insertCell(2); //ものの区分\n        let cell4 = row.insertCell(3); //出荷実績(直近1ヶ月)\n        let cell5 = row.insertCell(4); //出荷実績(直近1週間)\n        let cell6 = row.insertCell(5); //出荷残\n        let cell7 = row.insertCell(6); //在庫数\n\n        cell1.innerHTML = item.customer;\n        cell2.innerHTML = item.productnumber;\n        cell3.innerHTML = item.category;\n        cell4.innerHTML = item.last_month_quantity;\n        cell5.innerHTML = item.last_week_quantity;\n        cell6.innerHTML = item.future_quantity;\n        cell7.innerHTML = item.total_quantity;\n\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    let searchButton = document.getElementById('searchButton');\n    searchButton.addEventListener('click', function () {\n\n        let customer = document.getElementById(\"customer\").value;\n        let productNumber = document.getElementById(\"product-number\").value;\n\n        sendDataToNodeRED(customer, productNumber);\n    });\n\n    \n});\n\n       ",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "60a432eb0568b777"
            ]
        ]
    },
    {
        "id": "652317329565c3f7",
        "type": "http in",
        "z": "7d1eb13dd09a2817",
        "name": "",
        "url": "/page12",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "142920180bcb72dd"
            ]
        ]
    },
    {
        "id": "142920180bcb72dd",
        "type": "file in",
        "z": "7d1eb13dd09a2817",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "259c5b8ef36ad4ff"
            ]
        ]
    },
    {
        "id": "259c5b8ef36ad4ff",
        "type": "function",
        "z": "7d1eb13dd09a2817",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "44570fd1f2403475"
            ]
        ]
    },
    {
        "id": "31d21ebcc8e06379",
        "type": "websocket in",
        "z": "7d1eb13dd09a2817",
        "name": "",
        "server": "f8adb37fd3d9c54d",
        "client": "",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "783ab4462a5d7d7b"
            ]
        ]
    },
    {
        "id": "783ab4462a5d7d7b",
        "type": "json",
        "z": "7d1eb13dd09a2817",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "e5a4d3f8dc162679"
            ]
        ]
    },
    {
        "id": "e5a4d3f8dc162679",
        "type": "switch",
        "z": "7d1eb13dd09a2817",
        "name": "客先分岐",
        "property": "payload.customer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "0106272c448eb136"
            ],
            [
                "86afa2099bd7808a"
            ]
        ]
    },
    {
        "id": "0106272c448eb136",
        "type": "switch",
        "z": "7d1eb13dd09a2817",
        "name": "品番分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "446487e4dd38f8a0"
            ],
            [
                "04329dab7826df8e"
            ]
        ]
    },
    {
        "id": "86afa2099bd7808a",
        "type": "switch",
        "z": "7d1eb13dd09a2817",
        "name": "品番分岐",
        "property": "payload.productNumber",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "1f05a5617da5185b"
            ],
            [
                "14b1f3d239ead278"
            ]
        ]
    },
    {
        "id": "446487e4dd38f8a0",
        "type": "function",
        "z": "7d1eb13dd09a2817",
        "name": "WHERE ALL",
        "func": "msg.topic = `SELECT\n                 s.customer,\n                 s.productnumber,\n                 stock.category,\n                 sl.last_month_quantity,\n                 sl.last_week_quantity,\n                 s.future_quantity,\n                 stock.total_quantity\n             FROM (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate >= CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS future_quantity\n                 FROM shipping\n                 GROUP BY customer, productnumber\n             ) AS s\n             JOIN (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_week_quantity,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_month_quantity\n                 FROM shippinglog\n                 GROUP BY customer, productnumber\n             ) AS sl\n             ON s.customer = sl.customer AND s.productnumber = sl.productnumber\n             JOIN (\n                 SELECT \n                     productnumber,\n                     category,\n                     SUM(quantity) AS total_quantity\n                 FROM stock\n                 GROUP BY category, productnumber\n             ) AS stock\n             ON s.productnumber = stock.productnumber\n             ORDER BY s.productnumber, stock.category, s.customer` \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "4cc56086f06554de"
            ]
        ]
    },
    {
        "id": "04329dab7826df8e",
        "type": "function",
        "z": "7d1eb13dd09a2817",
        "name": "WHERE productnumber",
        "func": "msg.topic = `SELECT\n                 s.customer,\n                 s.productnumber,\n                 stock.category,\n                 sl.last_month_quantity,\n                 sl.last_week_quantity,\n                 s.future_quantity,\n                 stock.total_quantity\n             FROM (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate >= CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS future_quantity\n                 FROM shipping\n                 WHERE productnumber = \"`+msg.payload.productNumber+`\"\n                 GROUP BY customer, productnumber\n             ) AS s\n             JOIN (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_week_quantity,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_month_quantity\n                 FROM shippinglog\n                 GROUP BY customer, productnumber\n             ) AS sl\n             ON s.customer = sl.customer AND s.productnumber = sl.productnumber\n             JOIN (\n                 SELECT \n                     productnumber,\n                     category,\n                     SUM(quantity) AS total_quantity\n                 FROM stock\n                 GROUP BY category, productnumber\n             ) AS stock\n             ON s.productnumber = stock.productnumber\n             ORDER BY s.productnumber, stock.category, s.customer` \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 200,
        "wires": [
            [
                "4cc56086f06554de"
            ]
        ]
    },
    {
        "id": "1f05a5617da5185b",
        "type": "function",
        "z": "7d1eb13dd09a2817",
        "name": "WHERE customer",
        "func": "msg.topic = `SELECT\n                 s.customer,\n                 s.productnumber,\n                 stock.category,\n                 sl.last_month_quantity,\n                 sl.last_week_quantity,\n                 s.future_quantity,\n                 stock.total_quantity\n             FROM (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate >= CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS future_quantity\n                 FROM shipping\n                 WHERE customer = \"`+ msg.payload.customer+`\" \n                 GROUP BY customer, productnumber\n             ) AS s\n             JOIN (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_week_quantity,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_month_quantity\n                 FROM shippinglog\n                 GROUP BY customer, productnumber\n             ) AS sl\n             ON s.customer = sl.customer AND s.productnumber = sl.productnumber\n             JOIN (\n                 SELECT \n                     productnumber,\n                     category,\n                     SUM(quantity) AS total_quantity\n                 FROM stock\n                 GROUP BY category, productnumber\n             ) AS stock\n             ON s.productnumber = stock.productnumber\n             ORDER BY s.productnumber, stock.category, s.customer` \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            [
                "4cc56086f06554de"
            ]
        ]
    },
    {
        "id": "14b1f3d239ead278",
        "type": "function",
        "z": "7d1eb13dd09a2817",
        "name": "WHERE customer  AND productnumber",
        "func": "msg.topic = `SELECT\n                 s.customer,\n                 s.productnumber,\n                 stock.category,\n                 sl.last_month_quantity,\n                 sl.last_week_quantity,\n                 s.future_quantity,\n                 stock.total_quantity\n             FROM (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate >= CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS future_quantity\n                 FROM shipping\n                 WHERE customer = \"`+ msg.payload.customer + `\" AND productnumber = \"` + msg.payload.productNumber+`\"\n                 GROUP BY customer, productnumber\n             ) AS s\n             JOIN (\n                 SELECT \n                     customer,\n                     productnumber,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_week_quantity,\n                     SUM(CASE \n                            WHEN shippingdate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() \n                            THEN quantity \n                            ELSE 0 \n                         END) AS last_month_quantity\n                 FROM shippinglog\n                 GROUP BY customer, productnumber\n             ) AS sl\n             ON s.customer = sl.customer AND s.productnumber = sl.productnumber\n             JOIN (\n                 SELECT \n                     productnumber,\n                     category,\n                     SUM(quantity) AS total_quantity\n                 FROM stock\n                 GROUP BY category, productnumber\n             ) AS stock\n             ON s.productnumber = stock.productnumber\n             ORDER BY s.productnumber, stock.category, s.customer` \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "4cc56086f06554de"
            ]
        ]
    },
    {
        "id": "4cc56086f06554de",
        "type": "mysql",
        "z": "7d1eb13dd09a2817",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 880,
        "y": 220,
        "wires": [
            [
                "1fd708f2460863dd"
            ]
        ]
    },
    {
        "id": "1fd708f2460863dd",
        "type": "websocket out",
        "z": "7d1eb13dd09a2817",
        "name": "",
        "server": "f8adb37fd3d9c54d",
        "client": "",
        "x": 1100,
        "y": 220,
        "wires": []
    },
    {
        "id": "8cb7174b699199fb",
        "type": "http in",
        "z": "b66f02d0fce885f7",
        "name": "",
        "url": "/page13",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "27e825b711212237"
            ]
        ]
    },
    {
        "id": "89d3abd1ede23270",
        "type": "template",
        "z": "b66f02d0fce885f7",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\n// ラジオボタンの選択状態が変更されたときの処理\nfunction onRadioChange(radio) {\n\n    let selectedOption = radio.value;\n\n    let chinaInput = document.getElementById(\"china\");\n    let usuallyInput = document.getElementById(\"usually\");\n    \n    if (selectedOption === \"中国\") {\n        chinaInput.style.display = \"block\";\n        usuallyInput.style.display = \"none\";\n    } else if (selectedOption === \"通常\") {\n        chinaInput.style.display = \"none\";\n        usuallyInput.style.display = \"block\";             \n    } else {\n        chinaInput.style.display = \"none\";\n        usuallyInput.style.display = \"none\";\n    }\n    \n}\n\nfunction sendDataToNodeRED(dataToSend) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/Insert-csv`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(dataToSend));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        alert(\"依頼データを読み込みました。\");\n        socket.close();\n    };\n}\n\nfunction processData(fileContent) {\n\n    // CSV データを改行文字で分割し、行ごとの配列を作成\n    let lines = fileContent.split('\\n');\n\n    // 配列の先頭はヘッダー行なのでスキップする\n    let header = lines[0].split(',').map(header => header.trim().replace(/\\r$/, ''));\n    let jsonArray = [];\n\n    for (let i = 1; i < lines.length; i++) {\n        let row = lines[i].split(',');\n\n        if (row.length === 1 && row[0].trim() === '') {\n            continue;\n        }\n\n        if (row.length !== header.length) {\n            continue;\n        }\n\n        let rowData = {};\n\n        for (let j = 0; j < header.length; j++) {\n            rowData[header[j]] = row[j].trim();\n        }\n\n        jsonArray.push(rowData);\n    }\n\n    // jsonArray は CSV データを JSON オブジェクトの配列に変換したもの\n    return jsonArray;\n}\n\n//ﾌｧｲﾙを読込ﾃｰﾌﾞﾙに表示させる\nfunction displayResults(jsonData) {\n\n    let tbody = document.getElementById('china-table-body');\n    tbody.innerHTML = '';\n\n    for (let i = 0; i < jsonData.length; i++) {\n\n        let row = jsonData[i];\n        row['品番'] = row['品番'].replace(/\"|=/g, '');\n\n        let tr = document.createElement('tr');\n\n        let lotCell = document.createElement('td');\n        lotCell.textContent = row['LOT'];\n        lotCell.classList.add('fs-6');\n        tr.appendChild(lotCell);\n\n        let arrivaldayCell = document.createElement('td');\n        let datetimeString = row['入荷日'];\n        let datetime = new Date(datetimeString);\n        let dateString = datetime.toLocaleDateString('ja-JP');\n        arrivaldayCell.textContent = dateString;\n        arrivaldayCell.classList.add('fs-6');\n        tr.appendChild(arrivaldayCell);\n\n        let productnumberCell = document.createElement('td');\n        productnumberCell.textContent = row['品番'];\n        productnumberCell.classList.add('fs-6');\n        tr.appendChild(productnumberCell);\n\n        let quantityCell = document.createElement('td');\n        quantityCell.textContent = row['数量'];\n        quantityCell.classList.add('fs-6');\n        tr.appendChild(quantityCell);\n\n        let boxquantityCell = document.createElement('td');\n        boxquantityCell.textContent = row['箱数'];\n        boxquantityCell.classList.add('fs-6');\n        tr.appendChild(boxquantityCell);\n\n        let destCell = document.createElement('td');\n        destCell.textContent = row['行先'];\n        destCell.classList.add('fs-6');\n        tr.appendChild(destCell);\n\n        let inspectionquantityCell = document.createElement('td');\n        inspectionquantityCell.textContent = row['検査数'];\n        inspectionquantityCell.classList.add('fs-6');\n        tr.appendChild(inspectionquantityCell);\n\n        let completiondateCell = document.createElement('td');\n        datetimeString = row['検査完了希望日'];\n        datetime = new Date(datetimeString);\n        dateString = datetime.toLocaleDateString('ja-JP');\n        completiondateCell.textContent = dateString;\n        completiondateCell.classList.add('fs-6');\n        tr.appendChild(completiondateCell);\n\n        tbody.appendChild(tr);\n    } \n}\n\nfunction getRowsData(tableId) {\n\n    let rowsData = [];\n    if (tableId === 'china-table') {\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n\n            let rowData = {};\n            // 各セルのデータを取得して rowData に追加\n            rowData['LOT'] = row.cells[0].textContent;\n            rowData['入荷日'] = row.cells[1].textContent;\n            rowData['品番'] = row.cells[2].textContent;\n            rowData['数量'] = row.cells[3].textContent;\n            rowData['箱数'] = row.cells[4].textContent;\n            rowData['行先'] = row.cells[5].textContent;\n            rowData['検査数'] = row.cells[6].textContent;\n            rowData['検査完了希望日'] = row.cells[7].textContent;\n\n            rowsData.push(rowData);\n\n        });\n\n    }\n\n    return rowsData;\n}\n\n\nfunction clearForm() {\n\n    let form = document.getElementById('myForm');\n\n    // ラジオボタンの選択をリセットする\n    let radioChoices = document.querySelectorAll('input[type=\"radio\"]');\n    radioChoices.forEach(function (radio) {\n        radio.checked = false;\n    });\n\n    // ファイル選択欄を初期化\n    let fileInput = form.querySelector('#inportdata');\n    fileInput.value = '';\n\n    let chinatbody = document.getElementById('china-table-body');\n    chinatbody.innerHTML = '';\n\n    let chinaInput = document.getElementById(\"china\");\n    let usuallyInput = document.getElementById(\"usually\");\n    chinaInput.style.display = \"none\";\n    usuallyInput.style.display = \"none\";\n\n    form.reset();\n\n    clearPDF();\n}\n\nfunction clearPDF() {\n\n    var pdfCanvas = document.getElementById('pdf-canvas');\n    var pdfContext = pdfCanvas.getContext('2d');\n    var dropMessage = document.getElementById('drop-message');\n    var fileInfo = document.getElementById('file-info');\n    var pdfClearBtn = document.getElementById('pdfclear-btn');\n    // キャンバスをクリアする\n    pdfContext.clearRect(0, 0, pdfCanvas.width, pdfCanvas.height);\n    // メッセージを再表示する\n    dropMessage.style.display = 'block';\n    // ファイル情報をクリアする\n    fileInfo.textContent = '';\n    pdfClearBtn.style.display = 'none';\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    var dropZone = document.getElementById('drop-zone');\n    var fileInfo = document.getElementById('file-info');\n    var pdfCanvas = document.getElementById('pdf-canvas');\n    var pdfContext = pdfCanvas.getContext('2d');\n    var dropMessage = document.getElementById('drop-message');\n    var pdfClearBtn = document.getElementById('pdfclear-btn');\n\n    dropZone.addEventListener('dragover', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        dropZone.classList.add('dragover');\n    });\n\n    dropZone.addEventListener('dragleave', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        dropZone.classList.remove('dragover');\n    });\n\n    dropZone.addEventListener('drop', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        dropZone.classList.remove('dragover');\n\n        var files = e.dataTransfer.files;\n        if (files.length > 0) {\n            var file = files[0];\n            if (file.type === \"application/pdf\") {\n                handlePDF(file);\n            } else {\n                alert(\"PDFファイルをアップロードしてください。\");\n            }\n        }\n    });\n        \n    function handlePDF(file) {\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            var arrayBuffer = e.target.result;\n            var pdfData = new Uint8Array(arrayBuffer);\n\n            pdfjsLib.getDocument({ data: pdfData }).promise.then(function (pdf) {\n                \n                // 最初のページを表示\n                pdf.getPage(1).then(function (page) {\n                    \n\n                    var viewport = page.getViewport({ scale: 1.5 });\n                    pdfCanvas.height = viewport.height;\n                    pdfCanvas.width = viewport.width;\n\n                    var renderContext = {\n                        canvasContext: pdfContext,\n                        viewport: viewport\n                    };\n                    page.render(renderContext).promise.then(function () {\n                        fileInfo.textContent =  file.name;\n                        dropMessage.style.display = 'none';\n                        pdfClearBtn.style.display = 'inline-block';\n                    });\n                });\n            });\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n    document.getElementById('pdfclear-btn').addEventListener('click', clearPDF);\n\n\n    //中国を選択し、ファイルを読み込みした時\n    let fileInput = document.getElementById('inportdata');\n    fileInput.addEventListener('change', function (event) {\n\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked');\n    \n        let file = event.target.files[0];\n        if (file) {\n            let reader = new FileReader();\n\n            // ファイルが読み込まれたときの処理\n            reader.onload = function (e) {\n                let fileContent = e.target.result;\n\n                // ファイルの内容が空かどうかを判定\n                if (!fileContent.trim() || fileContent.trim().split('\\n').length === 1) {\n                    alert(\"ファイルのデータが空です。処理を中止します。\");\n                    fileInput.value = '';\n                    return;\n                }\n                \n                let jsonData = processData(fileContent);\n                displayResults(jsonData);\n            };\n            reader.readAsText(file, 'Shift-JIS');\n        }\n    });\n\n    //依頼ﾎﾞﾀﾝを押した処理\n    document.getElementById('submitButton').addEventListener('click', function (event) {\n        \n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n        let tableId;\n\n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n\n        let storedStaffCode = sessionStorage.getItem('staffCode');\n        let storedStaffName = sessionStorage.getItem('staffName');\n\n        if (selectedRadio === '中国') {\n\n            let fileInput = document.getElementById('inportdata');\n            if (!fileInput.files.length) {\n                alert(\"ファイルが選択されていません。ファイルを選択してください。\");\n                event.preventDefault(); // フォームの送信を中止\n                return;\n            }\n\n            tableId = 'china-table';\n            let rowsData = getRowsData(tableId);\n            let dataToSend = {\n                workingday: workingday,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                radioSelection: selectedRadio,\n                file: rowsData\n            }\n\n            sendDataToNodeRED(dataToSend);\n\n        }else{\n\n            let request = document.getElementById('request').value;\n            let serialNumber = document.getElementById('serial-number').value;\n            let shipDate = document.getElementById('ship-date').value;\n            let dockDate = document.getElementById('dock-date').value;\n            let customer = document.getElementById('customer').value;\n            let productNumber = document.getElementById('product-number').value;\n            let productName = document.getElementById('product-name').value;\n            let inspectionQuantity = document.getElementById('inspection-quantity').value;\n            let productionLocation = document.getElementById('production-location').value;\n            let inspectionReport = document.getElementById('inspection-report').value;\n            let remarks = document.getElementById('remarks').value;\n\n            if (!request || !serialNumber || !shipDate || !dockDate || !customer || !productNumber || !inspectionQuantity) {\n                alert('*マークがある入力箇所は全て入力してください。');\n                event.preventDefault(); // フォームの送信を中止\n                return;\n            }\n\n            let dataToSend = {\n                workingday: workingday,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                radioSelection: selectedRadio,\n                request: request,\n                serialNumber: serialNumber,\n                shipDate: shipDate,\n                dockDate: dockDate,\n                customer: customer,\n                productNumber: productNumber,\n                productName: productName,\n                inspectionQuantity: inspectionQuantity,\n                productionLocation: productionLocation,\n                inspectionReport: inspectionReport,\n                remarks: remarks\n            };\n\n            sendDataToNodeRED(dataToSend);\n            \n        }\n\n        event.preventDefault();\n        document.querySelector('form').reset();\n        document.getElementById('china-table-body').innerHTML = '';\n        clearForm()\n\n    }); \n});\n\n\n\n",
        "output": "str",
        "x": 900,
        "y": 60,
        "wires": [
            [
                "1424c32d510ac87c"
            ]
        ]
    },
    {
        "id": "8f8daa8d2f1b6c84",
        "type": "template",
        "z": "b66f02d0fce885f7",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style> \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js\"></script> \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li> \n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">検査依頼作業</h1>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\" enctype=\"multipart/form-data\" id=\"myForm\">\n\n        <div class=\"info\">\n\n          <fieldset class=\"border p-2 mt-3\">\n\n            <legend>取込内容を選択してください。</legend>\n            <div class=\"btn-group\" data-toggle=\"buttons\">\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice1\" name=\"work\" value=\"通常\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">通常</span>\n              </label>\n              <label class=\"btn btn-secondary\">\n                <input type=\"radio\" id=\"workChoice2\" name=\"work\" value=\"中国\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">中国</span>\n              </label>  \n            </div>\n\n          </fieldset>\n          \n          <div class=\"col-12 mt-3\">\n            <input type=\"submit\" value=\"依頼\" class=\"btn btn-primary btn-lg\" id=\"submitButton\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n\n        </div>\n        <div class=\"col-12 mt-3\" id=\"usually\" style=\"display: none;\">\n\n          <div class=\"row\">\n\n            <div class=\"col-4\">\n              <label for=\"request\"  class=\"col-6 col-form-label fs-5\">依頼事項：<span class=\"required-asterisk\">*</span></label>\n              <select id=\"request\" name=\"request\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option> \n                {{#choicesRequest}}\n                <option>{{.}}</option>\n                {{/choicesRequest}}\n              </select>\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"serial-number\" class=\"col-6 col-form-label fs-5\">加工指示書NO.：<span class=\"required-asterisk\">*</span></label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"serial-number\" name=\"serial-number\">\n            </div>\n\n          </div>\n\n          <div class=\"row\">    \n\n            <div class=\"col-4\">\n              <label for=\"ship-date\" class=\"col-10 col-form-label fs-5\">出荷日（検査完了希望日）：<span class=\"required-asterisk\">*</span></label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"ship-date\" name=\"ship-date\">\n            </div>\n            <div class=\"col-4\">\n              <label for=\"dock-date\" class=\"col-6 col-form-label fs-5\">入荷日：<span class=\"required-asterisk\">*</span></label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"dock-date\" name=\"dock-date\">\n            </div>\n\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"col-4\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：<span class=\"required-asterisk\">*</span></label>\n              <select id=\"customer\" name=\"customer\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>  \n            <div class=\"col-4\">\n              <label for=\"product-number\" class=\"col-6 col-form-label fs-5\">品番：<span class=\"required-asterisk\">*</span></label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-number\" name=\"product-number\">\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"product-name\" class=\"col-6 col-form-label fs-5\">品名：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"product-name\" name=\"product-name\">\n            </div>\n\n          </div>\n\n          <div class=\"row\">\n\n            <div class=\"col-4\">\n              <label for=\"inspection-quantity\" class=\"col-6 col-form-label fs-5\">検査数(n)：<span class=\"required-asterisk\">*</span></label></label>\n              <input type=\"number\" class=\"form-control form-control-lg\" id=\"inspection-quantity\" name=\"inspection-quantity\">\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"production-location\" class=\"col-6 col-form-label fs-5\">生産場所：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"production-location\" name=\"production-location\">\n            </div>\n\n            <div class=\"col-4\">\n              <label for=\"inspection-report\"  class=\"col-6 col-form-label fs-5\">検査書：</label>\n              <select id=\"inspection-report\" name=\"inspection-report\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                <option value=\"要\">要</option>\n                <option value=\"不\">不</option> \n              </select>\n            </div>  \n\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <label for=\"remarks\" class=\"col-6 col-form-label fs-5\">備考：</label>\n              <textarea id=\"remarks\" class=\"form-control form-control-lg\" name=\"remarks\" ></textarea>\n            </div>\n            \n            <div class=\"col-6\">\n              <div id=\"drop-zone\">\n                <div id=\"drop-message\">図面（PDFファイル）をここにドラッグ＆ドロップ</div>\n                <canvas id=\"pdf-canvas\" class=\"w-100\"></canvas> \n              </div>  \n              <div id=\"file-info\" class=\"text-center\"></div>\n              <button id=\"pdfclear-btn\" class=\"btn btn-secondary btn-sm\">図面クリア</button>       \n            </div>\n        \n          </div>  \n          \n        </div>  \n\n        <div class=\"col-12 mt-3\" id=\"china\" style=\"display: none;\">\n\n          <div class=\"col-12 mt-3\">\n            <input type=\"file\" class=\"form-control form-control-lg\" id=\"inportdata\" name=\"csv\" accept=\".csv\">\n          </div>\n\n          <div class=\"table-container\">\n            <table id=\"china-table\" class=\"table table-hover my-4\">\n              <thead class=\"table-light\">\n                <tr>\n                  <th scope=\"col\" class=\"fs-6\">LOT</th>\n                  <th scope=\"col\" class=\"fs-6\">入荷日</th>\n                  <th scope=\"col\" class=\"fs-6\">品番</th>\n                  <th scope=\"col\" class=\"fs-6\">数量</th>\n                  <th scope=\"col\" class=\"fs-6\">箱数</th>\n                  <th scope=\"col\" class=\"fs-6\">行先</th>\n                  <th scope=\"col\" class=\"fs-6\">検査数(n)</th>\n                  <th scope=\"col\" class=\"fs-6\">検査完了希望日</th>\n                </tr> \n              </thead>\n              <tbody id=\"china-table-body\"></tbody>\n            </table>\n          </div>    \n\n        </div>\n\n      </form>  \n    \n    </div>  \n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n     \n  </body>\n</html>\n",
        "output": "str",
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "4264c764a005dbe6"
            ]
        ]
    },
    {
        "id": "4264c764a005dbe6",
        "type": "http response",
        "z": "b66f02d0fce885f7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 60,
        "wires": []
    },
    {
        "id": "1424c32d510ac87c",
        "type": "template",
        "z": "b66f02d0fce885f7",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n}\n\n.table-container thead {\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n#drop-zone {\n            width: 100%;\n            height: 300px;\n            border: 2px dashed #ccc;\n            border-radius: 5px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            text-align: center;\n            color: #aaa;\n            background-color: #e9ecef; /* 背景色を追加 */\n            margin: 50px auto;\n            transition: border-color 0.3s, color 0.3s, background-color 0.3s;\n            position: relative;\n}\n        \n#drop-zone.dragover {\n            border-color: #007bff;\n            color: #007bff;\n            background-color: #ccc; /* ドラッグオーバー時の背景色 */\n}\n\n#pdf-canvas {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n}\n\n#drop-message {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            pointer-events: none;\n}\n\n#remarks{\n  height: 300px;\n}\n\n#pdfclear-btn {\n            display: none;\n}\n\n.required-asterisk {\n    color: red;\n    font-weight: bold;\n  }\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "8f8daa8d2f1b6c84"
            ]
        ]
    },
    {
        "id": "2f676856729b748a",
        "type": "websocket in",
        "z": "b66f02d0fce885f7",
        "name": "",
        "server": "025b41d784a4c7e3",
        "client": "",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "94473e9c62ba6394"
            ]
        ]
    },
    {
        "id": "94473e9c62ba6394",
        "type": "json",
        "z": "b66f02d0fce885f7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "02dc1311915fed92"
            ]
        ]
    },
    {
        "id": "02dc1311915fed92",
        "type": "switch",
        "z": "b66f02d0fce885f7",
        "name": "条件分岐",
        "property": "payload.radioSelection",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "通常",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "中国",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 160,
        "wires": [
            [
                "d2e6c8c916bef2f7"
            ],
            [
                "9ba9bb265ddc425b"
            ]
        ]
    },
    {
        "id": "df1d3eecf3216dbd",
        "type": "mysql",
        "z": "b66f02d0fce885f7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 340,
        "wires": [
            [
                "77f72c896e1b55d1"
            ]
        ]
    },
    {
        "id": "9ba9bb265ddc425b",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "INSERT InspectionRequest",
        "func": "var records = msg.payload.file;\nvar storedStaffcode = msg.payload.storedStaffCode;\nvar storedStaffname = msg.payload.storedStaffName;\n\n\n\nvar insertQuery = `INSERT INTO InspectionRequest (\n                   InspectionCategory,\n                   ContainerLot,\n                   ArrivalDay,\n                   ProductNumber,\n                   ArrivalQuantity,\n                   BoxQuantity,\n                   Destination,\n                   InspectionQuantity,\n                   CompletionDate,\n                   WorkingDay,\n                   WorkerName\n                   ) VALUES `;\n\nvar valueStrings = [];\n\nrecords.forEach(function (record, index) {\n\n    var completionDate = record[\"検査完了希望日\"];\n\n    // 検査完了希望日が空白、無効日付、またはNullの場合にnullを設定\n    if (!completionDate || isNaN(Date.parse(completionDate))) {\n        completionDate = null;\n    }\n\n    function parseNumber(value) {\n        return value === '' ? null : (Number.isInteger(value) ? value : parseInt(value));\n    }\n\n    var values = [\n        '中国',\n        record[\"LOT\"],\n        record[\"入荷日\"],\n        record[\"品番\"],\n        parseNumber(record[\"数量\"]),\n        parseNumber(record[\"箱数\"]),\n        record[\"行先\"],\n        parseNumber(record[\"検査数\"]),\n        completionDate,\n        msg.payload.workingday,\n        storedStaffname\n    ];\n\n    var valueString = \"(\" + values.map(function (value) {\n        return value === null ? \"null\" : (typeof value === 'number' ? value : \"'\" + value + \"'\");\n    }).join(\", \") + \")\";\n\n    valueStrings.push(valueString);\n});\n\ninsertQuery += valueStrings.join(\", \");\n\nmsg.topic = insertQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            [
                "df1d3eecf3216dbd",
                "7f10f92038fdfb77"
            ]
        ]
    },
    {
        "id": "77f72c896e1b55d1",
        "type": "websocket out",
        "z": "b66f02d0fce885f7",
        "name": "",
        "server": "025b41d784a4c7e3",
        "client": "",
        "x": 1160,
        "y": 240,
        "wires": []
    },
    {
        "id": "7f10f92038fdfb77",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "メール設定",
        "func": "\nmsg.topic = \"'\" + msg.payload.radioSelection + \"'検査依頼　入荷日　'\" + msg.payload.file[0][\"入荷日\"] + \"'\"\nmsg.payload = \"'\" + msg.payload.radioSelection + \"'検査依頼が入りました。詳細はもちサポを確認お願いします。\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 380,
        "wires": [
            [
                "f5e49ba782ddb69b"
            ]
        ]
    },
    {
        "id": "f5e49ba782ddb69b",
        "type": "e-mail",
        "z": "b66f02d0fce885f7",
        "server": "ktrg.sakura.ne.jp",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "takao-maehara@ktrg.co.jp, shinichiro-nakamori@ktrg.co.jp, kota-nishimura@ktrg.co.jp, sato-morioka@ktrg.co.jp, masayuki-mori@ktrg.co.jp",
        "dname": "メール送信",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "1672ef2aa5c2fb0f",
        "type": "inject",
        "z": "b66f02d0fce885f7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "*/1 20 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "2d17d5543a412353",
                "82faf265c62cc56a"
            ]
        ]
    },
    {
        "id": "19fdbbc4090fcd4b",
        "type": "mysql",
        "z": "b66f02d0fce885f7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 440,
        "wires": [
            [
                "82274ea2a771a7db"
            ]
        ]
    },
    {
        "id": "82274ea2a771a7db",
        "type": "switch",
        "z": "b66f02d0fce885f7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 500,
        "wires": [
            [],
            [
                "d02841d08efdec25"
            ]
        ]
    },
    {
        "id": "d02841d08efdec25",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "メール設定",
        "func": "// 現在の日付を取得\nvar today = new Date();\n\n// 日付をフォーマット (例: yyyy-mm-dd)\nvar year = today.getFullYear();\nvar month = (\"0\" + (today.getMonth() + 1)).slice(-2);\nvar day = (\"0\" + today.getDate()).slice(-2);\n\nvar formattedDate = year + \"/\" + month + \"/\" + day;\n\nmsg.topic = \"'\" + formattedDate + \"'中国検査完了連絡\"\nmsg.payload = \"LOT:'\" + msg.payload[0].ContainerLot + \"''\" + formattedDate + \"'検査完了済みがあります。詳細はもちサポを確認お願いします。\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "9606671ca3ed2f81"
            ]
        ]
    },
    {
        "id": "9606671ca3ed2f81",
        "type": "e-mail",
        "z": "b66f02d0fce885f7",
        "server": "ktrg.sakura.ne.jp",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "takao-maehara@ktrg.co.jp, shinichiro-nakamori@ktrg.co.jp",
        "dname": "メール送信",
        "x": 1010,
        "y": 540,
        "wires": []
    },
    {
        "id": "6962ea7bd7eb7e10",
        "type": "mysql",
        "z": "b66f02d0fce885f7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "a468f033777be1d5"
            ]
        ]
    },
    {
        "id": "a468f033777be1d5",
        "type": "switch",
        "z": "b66f02d0fce885f7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 660,
        "wires": [
            [],
            [
                "2af7e187ee3e49e1"
            ]
        ]
    },
    {
        "id": "2af7e187ee3e49e1",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "メール設定",
        "func": "// 現在の日付を取得\nvar today = new Date();\n\n// 日付をフォーマット (例: yyyy-mm-dd)\nvar year = today.getFullYear();\nvar month = (\"0\" + (today.getMonth() + 1)).slice(-2);\nvar day = (\"0\" + today.getDate()).slice(-2);\n\nvar formattedDate = year + \"/\" + month + \"/\" + day;\n\nmsg.topic = \"'\" + formattedDate + \"'中国未検査連絡\"\nmsg.payload = \"LOT:'\" + msg.payload[0].ContainerLot + \"''\" + formattedDate + \"'検査未完了があります。確認お願いします。\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 700,
        "wires": [
            [
                "e334752c6730e5ad"
            ]
        ]
    },
    {
        "id": "e334752c6730e5ad",
        "type": "e-mail",
        "z": "b66f02d0fce885f7",
        "server": "ktrg.sakura.ne.jp",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "kota-nishimura@ktrg.co.jp, sato-morioka@ktrg.co.jp, masayuki-mori@ktrg.co.jp",
        "dname": "メール送信",
        "x": 1010,
        "y": 700,
        "wires": []
    },
    {
        "id": "27e825b711212237",
        "type": "file in",
        "z": "b66f02d0fce885f7",
        "name": "依頼事項",
        "filename": "/home/kuwata/ktrg/検査依頼事項.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 280,
        "y": 60,
        "wires": [
            [
                "67879cef5084106a"
            ]
        ]
    },
    {
        "id": "67879cef5084106a",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicesRequest = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicesRequest.push(row); \n}\n\nmsg.choicesRequest = choicesRequest;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 60,
        "wires": [
            [
                "65aa3ca1e37ed9b6"
            ]
        ]
    },
    {
        "id": "65aa3ca1e37ed9b6",
        "type": "file in",
        "z": "b66f02d0fce885f7",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 590,
        "y": 60,
        "wires": [
            [
                "e2e72f1f7b48b963"
            ]
        ]
    },
    {
        "id": "e2e72f1f7b48b963",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 60,
        "wires": [
            [
                "89d3abd1ede23270"
            ]
        ]
    },
    {
        "id": "d2e6c8c916bef2f7",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "INSERT InspectionRequest",
        "func": "flow.set('customer', msg.payload.customer)\nflow.set('dockDate', msg.payload.dockDate)\n\nlet data = msg.payload;\n\nvar insertQuery = `INSERT INTO InspectionRequest (\n                   InspectionCategory,\n                   SerialNumber,\n                   CompletionDate,\n                   ArrivalDay,\n                   Customer,\n                   ProductNumber,\n                   ProductName,\n                   InspectionQuantity,\n                   ProductionLocation,\n                   InspectionReport,\n                   Remarks,\n                   WorkingDay,\n                   WorkerName\n                   ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) `;\n\n\nmsg.topic = insertQuery;\n\nmsg.payload = [\n    data.request,\n    data.serialNumber,\n    data.shipDate,\n    data.dockDate,\n    data.customer,\n    data.productNumber,\n    data.productName || '', // 品名が空の場合は空文字\n    data.inspectionQuantity || 0, // 検査数が空の場合は0\n    data.productionLocation || '', // 生産場所が空の場合は空文字\n    data.inspectionReport || '', // 検査書が空の場合は空文字\n    data.remarks || '', // 備考が空の場合は空文字\n    data.workingday,\n    data.storedStaffName || '' // 作業者名が空の場合は空文字\n];\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "a2dddbc2c2da0fb3",
                "67ea590e9901bb03",
                "6996c63f0974d6e0"
            ]
        ]
    },
    {
        "id": "a2dddbc2c2da0fb3",
        "type": "mysql",
        "z": "b66f02d0fce885f7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 140,
        "wires": [
            [
                "77f72c896e1b55d1"
            ]
        ]
    },
    {
        "id": "67ea590e9901bb03",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "メール設定",
        "func": "var customer = flow.get('customer');\nvar dockDate = flow.get('dockDate');\n\n\nmsg.topic = \"'\" + customer + \"'検査依頼　入荷日　'\" + dockDate + \"'\"\nmsg.payload = \"'\" + customer + \"'検査依頼が入りました。詳細はもちサポを確認お願いします。\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2d17d5543a412353",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "本日検査完了済の品番",
        "func": "var baseQuery = `SELECT\n                     IR.RequestID,\n                     IR.InspectionCategory,\n                     IR.ContainerLot,\n                     IR.ArrivalDay,\n                     IR.ProductNumber,\n                     IR.ArrivalQuantity,\n                     IR.BoxQuantity,\n                     IR.Destination,\n                     IR.InspectionQuantity,\n                     IR.CompletionDate,\n                     IR.WorkerName,\n                     IR.DownloadStatus,\n                     QC.r_passed,\n                     QC.r_display\n                FROM\n                    location.InspectionRequest as IR  \n                LEFT JOIN\n                    qc.report as QC\n                ON\n                    IR.RequestID = QC.r_request_id\n                WHERE\n                    IR.InspectionCategory = '中国'\n                    and IR.CompletionDate = CURDATE()\n                    and QC.r_passed <> 0\n                    and QC.r_display = 1\n                ORDER BY\n                    IR.RequestID,\n                    IR.ContainerLot,\n                    IR.ArrivalDay,\n                    IR.ProductNumber`\n\nmsg.topic = baseQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "19fdbbc4090fcd4b"
            ]
        ]
    },
    {
        "id": "82faf265c62cc56a",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "本日検査未完了の品番",
        "func": "var baseQuery = `SELECT\n                     IR.RequestID,\n                     IR.InspectionCategory,\n                     IR.ContainerLot,\n                     IR.ArrivalDay,\n                     IR.ProductNumber,\n                     IR.ArrivalQuantity,\n                     IR.BoxQuantity,\n                     IR.Destination,\n                     IR.InspectionQuantity,\n                     IR.CompletionDate,\n                     IR.WorkerName,\n                     IR.DownloadStatus,\n                     QC.r_passed,\n                     QC.r_display\n                FROM\n                    location.InspectionRequest as IR  \n                LEFT JOIN\n                    qc.report as QC\n                ON\n                    IR.RequestID = QC.r_request_id\n                WHERE\n                    IR.InspectionCategory = '中国'\n                    and IR.CompletionDate = CURDATE()\n                    and QC.r_passed = 0\n                    and QC.r_display = 1\n                ORDER BY\n                    IR.RequestID,\n                    IR.ContainerLot,\n                    IR.ArrivalDay,\n                    IR.ProductNumber`\n\nmsg.topic = baseQuery;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 600,
        "wires": [
            [
                "6962ea7bd7eb7e10"
            ]
        ]
    },
    {
        "id": "6996c63f0974d6e0",
        "type": "switch",
        "z": "b66f02d0fce885f7",
        "name": "YKKAP検査依頼",
        "property": "payload[4]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YKK AP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 860,
        "y": 220,
        "wires": [
            [
                "957be711c1e2dd48"
            ]
        ]
    },
    {
        "id": "65041a9f8cc62b80",
        "type": "exec",
        "z": "b66f02d0fce885f7",
        "command": "python3 /home/kuwata/ktrg/ktrg.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1240,
        "y": 180,
        "wires": [
            [
                "c035999d2c541964"
            ],
            [
                "c035999d2c541964"
            ],
            []
        ]
    },
    {
        "id": "957be711c1e2dd48",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "function 4",
        "func": "// functionノードのコード\nvar args = msg.payload.map(item => `\"${item}\"`).join(' ');\nmsg.payload = args;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "65041a9f8cc62b80"
            ]
        ]
    },
    {
        "id": "c035999d2c541964",
        "type": "debug",
        "z": "b66f02d0fce885f7",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 180,
        "wires": []
    },
    {
        "id": "96ab140c5e78e8a2",
        "type": "function",
        "z": "b66f02d0fce885f7",
        "name": "UPDATE shipping SET inspection = 1 ",
        "func": "var baseQuery=`UPDATE\n                   shipping s\n                   JOIN(\n                       SELECT\n                           ProductNumber, \n                           Customer, \n                           CompletionDate\n                       FROM\n                           InspectionRequest\n                       WHERE\n                           CompletionDate >= CURDATE()\n                    ) ir\n                    ON\n                     s.shippingdate = ir.CompletionDate\n                     AND s.productnumber = ir.ProductNumber\n                     AND s.customer = ir.Customer\n                    SET s.inspection = 1`\n\nmsg.topic=baseQuery;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 760,
        "wires": [
            [
                "ec219230302b6a0d"
            ]
        ]
    },
    {
        "id": "ec219230302b6a0d",
        "type": "mysql",
        "z": "b66f02d0fce885f7",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 840,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f4c562f941e5dfdc",
        "type": "inject",
        "z": "b66f02d0fce885f7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "00 18 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 390,
        "y": 760,
        "wires": [
            [
                "96ab140c5e78e8a2"
            ]
        ]
    },
    {
        "id": "db22e4354bfe5849",
        "type": "http in",
        "z": "2558d404ae0e72fe",
        "name": "",
        "url": "/page14",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "7f5e7bd05152aced"
            ]
        ]
    },
    {
        "id": "9ae97d365214838a",
        "type": "template",
        "z": "2558d404ae0e72fe",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', function () {\n\n    let storedStaffName = sessionStorage.getItem('staffName');\n    if (storedStaffName == null) {\n        alert('ログインしてください。');\n        window.location.href = \"/login\";\n    }\n});\n\n// ラジオボタンの選択状態が変更されたときの処理\nfunction onRadioChange(radio) {\n\n    let selectedOption = radio.value;\n\n    let chinaInput = document.getElementById(\"china\");\n    let chinaTable = document.getElementById(\"china-table\");\n    let usuallyInput = document.getElementById(\"usually\");\n    let usuallyable = document.getElementById(\"usually-table\");\n\n    if (selectedOption === \"中国\") {\n        chinaInput.style.display = \"block\";\n        chinaTable.style.display = \"block\";\n        usuallyInput.style.display = \"none\";\n        usuallyable.style.display = \"none\";\n\n    } else if (selectedOption === \"通常\") {\n        chinaInput.style.display = \"none\";\n        chinaTable.style.display = \"none\";\n        usuallyInput.style.display = \"block\";\n        usuallyable.style.display = \"block\";\n\n    } else {\n        chinaInput.style.display = \"none\";\n        chinaTable.style.display = \"none\";\n        usuallyInput.style.display = \"none\";\n        usuallyable.style.display = \"none\";\n\n    }\n\n}\n\nfunction sendDataToNodeRED(dataToSend) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/InspectionRequest-search`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(dataToSend));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n        var responseData = JSON.parse(event.data);\n        var selectedRadio = dataToSend.radioSelection;\n        console.log(dataToSend.radioSelection)\n\n        displayDataInTable(responseData, selectedRadio);\n        socket.close();\n    };\n}\n\nfunction sendDataToNodeRED2(dataToSend) {\n    const hostname = window.location.hostname;\n    let socket = new WebSocket(`wss://${hostname}/DownloadStatus-up`);\n\n    socket.onopen = function (event) {\n        socket.send(JSON.stringify(dataToSend));\n    };\n\n    socket.onerror = function (event) {\n        console.error(\"WebSocketエラー:\", event);\n    };\n\n    socket.onmessage = function (event) {\n\n        socket.close();\n    };\n}\n\nfunction formatDate(dateTimeString) {\n\n    var databaseDate = new Date(dateTimeString.toLocaleString());\n    var year = databaseDate.getFullYear();\n    var month = (databaseDate.getMonth() + 1).toString().padStart(2, '0');\n    var day = databaseDate.getDate().toString().padStart(2, '0');\n    var formattedDate = `${year}/${month}/${day}`;\n    \n    return formattedDate;\n}\n\nfunction displayDataInTable(jsonData, selectedRadio) {\n\n    if (selectedRadio === '中国'){\n\n        let tableBody = document.getElementById('china-table-body');\n\n        while (tableBody.firstChild) {\n            tableBody.removeChild(tableBody.firstChild);\n        }\n\n        // データをテーブルに追加\n        jsonData.forEach(function (item) {\n            var row = tableBody.insertRow();\n            let cell1 = row.insertCell(0);//検査依頼ID\n            let cell2 = row.insertCell(1);//LOT(船)\n            let cell3 = row.insertCell(2);//入荷日\n            let cell4 = row.insertCell(3);//品番\n            let cell5 = row.insertCell(4);//数量\n            let cell6 = row.insertCell(5);//箱数\n            let cell7 = row.insertCell(6);//行先\n            let cell8 = row.insertCell(7);//検査数(n)\n            let cell9 = row.insertCell(8);//検査完了希望日\n            let cell10 = row.insertCell(9);//検査結果\n            let cell11 = row.insertCell(10);//検査依頼者\n            let cell12 = row.insertCell(11);//CSV取得\n\n            cell5.style.textAlign = \"right\";\n            cell6.style.textAlign = \"right\";\n            cell8.style.textAlign = \"right\";\n            cell9.style.textAlign = \"right\";\n\n            cell1.innerHTML = item.RequestID;\n            cell2.innerHTML = item.ContainerLot;\n            cell3.innerHTML = formatDate(item.ArrivalDay);\n            cell4.innerHTML = item.ProductNumber;\n            cell5.innerHTML = item.ArrivalQuantity;\n            cell6.innerHTML = item.BoxQuantity;\n            cell7.innerHTML = item.Destination;\n\n            if (item.InspectionQuantity == null) {\n                cell8.innerHTML = \"-\"\n            } else {\n                cell8.innerHTML = item.InspectionQuantity;\n            }\n\n            if (item.CompletionDate == null) {\n                cell9.innerHTML = \"検査不要\"\n            } else {\n                cell9.innerHTML = formatDate(item.CompletionDate);\n            }\n\n            if (item.r_passed === null) {\n                cell10.innerHTML = 'データ未入力';\n            } else if (item.r_passed === 0) {\n                cell10.innerHTML = '検査待ち';\n            } else if (item.r_passed === 1) {\n                cell10.innerHTML = '合格';\n            } else if (item.r_passed === 2) {\n                cell10.innerHTML = '不合格';\n            }\n\n            cell11.innerHTML = item.WorkerName;\n\n            if (item.DownloadStatus === 0) {\n                cell12.innerHTML = '未取得';\n            } else if (item.DownloadStatus === 1) {\n                cell12.innerHTML = '取得済';\n            }\n        });\n\n    }else{\n        let tableBody = document.getElementById('usually-table-body');\n\n        while (tableBody.firstChild) {\n            tableBody.removeChild(tableBody.firstChild);\n        }\n\n        // データをテーブルに追加\n        jsonData.forEach(function (item) {\n            var row = tableBody.insertRow();\n            let cell1 = row.insertCell(0);//検査依頼ID\n            let cell2 = row.insertCell(1);//検査項目\n            let cell3 = row.insertCell(2);//出荷日（検査完了希望日）\n            let cell4 = row.insertCell(3);//入荷日\n            let cell5 = row.insertCell(4);//客先\n            let cell6 = row.insertCell(5);//品番\n            let cell7 = row.insertCell(6);//品名\n            let cell8 = row.insertCell(7);//検査数(n)\n            let cell9 = row.insertCell(8);//生産場所\n            let cell10 = row.insertCell(9);//検査書\n            let cell11 = row.insertCell(10);//備考\n            let cell12 = row.insertCell(11);//検査結果\n            let cell13 = row.insertCell(12);//検査依頼者\n            let cell14 = row.insertCell(13);//CSV取得\n\n            \n            cell8.style.textAlign = \"right\";\n        \n\n            cell1.innerHTML = item.RequestID;\n            cell2.innerHTML = item.InspectionCategory;\n            cell3.innerHTML = formatDate(item.CompletionDate);\n            cell4.innerHTML = formatDate(item.ArrivalDay);\n            cell5.innerHTML = item.Customer;\n            cell6.innerHTML = item.ProductNumber;\n            cell7.innerHTML = item.ProductName;\n\n            if (item.InspectionQuantity == null) {\n                cell8.innerHTML = \"-\"\n            } else {\n                cell8.innerHTML = item.InspectionQuantity;\n            }\n\n            cell9.innerHTML = item.ProductionLocation;\n            cell10.innerHTML = item.InspectionReport;\n            cell11.innerHTML = item.Remarks;\n            \n\n            if (item.r_passed === null) {\n                cell12.innerHTML = 'データ未入力';\n            } else if (item.r_passed === 0) {\n                cell12.innerHTML = '検査待ち';\n            } else if (item.r_passed === 1) {\n                cell12.innerHTML = '合格';\n            } else if (item.r_passed === 2) {\n                cell12.innerHTML = '不合格';\n            }\n\n            cell13.innerHTML = item.WorkerName;\n\n            if (item.DownloadStatus === 0) {\n                cell14.innerHTML = '未取得';\n            } else if (item.DownloadStatus === 1) {\n                cell14.innerHTML = '取得済';\n            }\n        });\n\n    }\n\n    \n}\n\nfunction clearForm() {\n\n    document.getElementById('china').style.display = 'none';\n    document.getElementById('china-table').style.display = 'none';\n\n    document.getElementById('usually').style.display = 'none';\n    document.getElementById('usually-table').style.display = 'none';\n\n    document.getElementById('china-ArrivalDay').value = '';\n    document.getElementById('LOT').value = '';\n\n    document.getElementById('ArrivalDay').value = '';\n    document.getElementById('customer').value = '';\n\n    // ラジオボタンの選択をリセットする\n    let radioChoices = document.querySelectorAll('input[type=\"radio\"]');\n    radioChoices.forEach(function (radio) {\n        radio.checked = false;\n    });\n\n    let chinatbody = document.getElementById('china-table-body');\n    chinatbody.innerHTML = '';\n\n    let usuallytbody = document.getElementById('usually-table-body');\n    usuallytbody.innerHTML = '';\n\n}\n\nfunction getRowsData(tableId) {\n\n    let rowsData = [];\n    if (tableId === 'china-table') {\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n\n            let rowData = {};\n            // 各セルのデータを取得して rowData に追加\n            rowData['検査依頼ID'] = row.cells[0].textContent.trim();\n            rowData['LOT(船)'] = row.cells[1].textContent.trim();\n            rowData['入荷日'] = row.cells[2].textContent.trim();\n            rowData['品番'] = row.cells[3].textContent.trim();\n            rowData['数量'] = row.cells[4].textContent.trim();\n            rowData['箱数'] = row.cells[5].textContent.trim();\n            rowData['行先'] = row.cells[6].textContent.trim();\n            rowData['検査数(n)'] = row.cells[7].textContent.trim();\n            rowData['検査完了希望日'] = row.cells[8].textContent.trim();\n\n            rowsData.push(rowData);\n\n        });\n\n    }else{\n\n        let tableRows = document.querySelectorAll(`#${tableId}-body tr`);\n        tableRows.forEach(function (row) {\n\n            let rowData = {};\n            // 各セルのデータを取得して rowData に追加\n            rowData['検査依頼ID'] = row.cells[0].textContent.trim();\n            rowData['検査項目'] = row.cells[1].textContent.trim();\n            rowData['出荷日（検査完了希望日）'] = row.cells[2].textContent.trim();\n            rowData['入荷日'] = row.cells[3].textContent.trim();\n            rowData['客先'] = row.cells[4].textContent.trim();\n            rowData['品番'] = row.cells[5].textContent.trim();\n            rowData['品名'] = row.cells[6].textContent.trim();\n            rowData['検査数(n)'] = row.cells[7].textContent.trim();\n            rowData['生産場所'] = row.cells[8].textContent.trim();\n\n            rowsData.push(rowData);\n\n        });\n\n    }\n\n    return rowsData;\n}\n\nfunction convertToCSV(rowsData) {\n    if (rowsData.length === 0) {\n        return '';\n    }\n\n    const keys = Object.keys(rowsData[0]);\n    const csvRows = [];\n\n    // ヘッダー行\n    csvRows.push(keys.join(','));\n\n    // データ行\n    rowsData.forEach(row => {\n        const values = keys.map(key => {\n            const escapedValue = row[key].replace(/\"/g, '\"\"'); // 値内のダブルクォーテーションをエスケープ\n            return `\"${escapedValue}\"`; // 値をダブルクォーテーションで囲む\n        });\n        csvRows.push(values.join(','));\n    });\n\n    return csvRows.join('\\n');\n}\n\nfunction downloadCSV(csv, fileName) {\n    const bom = '\\uFEFF';\n    const csvBlob = new Blob([bom + csv], { type: 'text/csv;charset=utf-8;' });\n    const url = window.URL.createObjectURL(csvBlob);\n    const a = document.createElement('a');\n    a.setAttribute('hidden', '');\n    a.setAttribute('href', url);\n    a.setAttribute('download', fileName);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n}\n\nfunction exportTableToCSV(){\n\n    var currentTime = new Date();\n    let fileName = '検査依頼_' + currentTime.getFullYear() + (currentTime.getMonth() + 1) + currentTime.getDate() +\n        currentTime.getHours() + currentTime.getMinutes() + currentTime.getSeconds() + '.csv';\n\n    let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n    let tableId;\n\n    if (selectedRadio === '中国') {\n        tableId = 'china-table';\n    }else{\n        tableId = 'usually-table';\n    }\n\n    let rowsData = getRowsData(tableId);\n    let csv = convertToCSV(rowsData);\n    downloadCSV(csv, fileName);\n    sendDataToNodeRED2(rowsData);\n\n}\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    //検索ﾎﾞﾀﾝを押した処理\n    document.getElementById('submitButton').addEventListener('click', function (event) {\n\n        let selectedRadio = document.querySelector('input[name=\"work\"]:checked').value;\n        \n        let tableId;\n\n        let currentDate = new Date();\n        let formattedDate = currentDate.toISOString().split('T')[0];\n        let formattedTime = currentDate.toTimeString().split(' ')[0];\n        let datetimeValue = formattedDate + 'T' + formattedTime;\n        let workingday = datetimeValue;\n\n        let storedStaffCode = sessionStorage.getItem('staffCode');\n        let storedStaffName = sessionStorage.getItem('staffName');\n\n        if (selectedRadio === '中国') {\n\n            let containerLot = document.getElementById('LOT').value;\n            let arrivalDay = document.getElementById('china-ArrivalDay').value;\n\n            tableId = 'china-table';\n            let dataToSend = {\n                workingday: workingday,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                radioSelection: selectedRadio,\n                containerLot: containerLot,\n                arrivalDay: arrivalDay\n            }\n\n            sendDataToNodeRED(dataToSend);\n\n        }else{\n\n            let customer = document.getElementById('customer').value;\n            let arrivalDay = document.getElementById('ArrivalDay').value;\n\n            let dataToSend = {\n                workingday: workingday,\n                storedStaffCode: storedStaffCode,\n                storedStaffName: storedStaffName,\n                radioSelection: selectedRadio,\n                customer: customer,\n                arrivalDay: arrivalDay\n            }\n\n            sendDataToNodeRED(dataToSend);\n\n\n        }\n\n        event.preventDefault();\n        \n    }); \n});\n\n\n\n",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "0b6d6801e397e76d"
            ]
        ]
    },
    {
        "id": "cb9dd7d2a883d7eb",
        "type": "template",
        "z": "2558d404ae0e72fe",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li>\n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">検査依頼履歴</h1>\n        <button class=\"btn btn-success ms-2 mb-1\" id=\"stock-storage\" onclick=\"exportTableToCSV()\">CSV取得</button>\n      </div>\n      \n      <form method=\"post\" class=\"my-4\" enctype=\"multipart/form-data\" id=\"myForm\">\n\n        <div class=\"row\">\n\n          <div class=\"col-3\">\n            <label class=\"col-6 col-form-label fs-5\">検査内容：</label>\n            <div class=\"border p-2\">\n              <div class=\"btn-group\" data-toggle=\"buttons\">\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"workChoice1\" name=\"work\" value=\"通常\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">通常</span>\n                </label>\n                <label class=\"btn btn-secondary\">\n                  <input type=\"radio\" id=\"workChoice2\" name=\"work\" value=\"中国\" onchange=\"onRadioChange(this)\"><span class=\"radio-text-lg\">中国</span>\n                </label>  \n              </div>\n            </div>\n          </div>  \n          \n        </div>\n        \n        <div class=\"row\" id=\"china\" style=\"display: none;\">\n          <div class=\"d-flex col-6\">\n            <div class=\"me-3 flex-fill\">\n              <label for=\"LOT\" class=\"col-6 col-form-label fs-5\">LOT（船）：</label>\n              <input type=\"text\" class=\"form-control form-control-lg\" id=\"LOT\" name=\"LOT\">\n            </div>\n            <div class=\"flex-fill\">\n              <label for=\"china-ArrivalDay\" class=\"col-6 col-form-label fs-5\">入荷日：</label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"china-ArrivalDay\" name=\"china-ArrivalDay\">\n            </div>\n          </div>  \n        </div>\n\n        <div class=\"row\" id=\"usually\" style=\"display: none;\">\n          <div class=\"d-flex col-6\">\n            <div class=\"me-3 flex-fill\">\n              <label for=\"customer\"  class=\"col-6 col-form-label fs-5\">客先：</label>\n              <select id=\"customer\" name=\"customer\" class=\"form-control form-control-lg\" aria-label=\"Location\">\n                <option value=\"\" disabled selected hidden></option>\n                {{#choicescustomer}}\n                <option>{{.}}</option>\n                {{/choicescustomer}}\n              </select>\n            </div>\n            <div class=\"flex-fill\">\n              <label for=\"ArrivalDay\" class=\"col-6 col-form-label fs-5\">入荷日：</label>\n              <input type=\"date\" class=\"form-control form-control-lg\" id=\"ArrivalDay\" name=\"ArrivalDay\">\n            </div>\n          </div>  \n        </div>\n\n        <div class=\"col-6 mt-3\">\n          <input type=\"button\" value=\"検索\" class=\"btn btn-primary btn-lg\" id=\"submitButton\">\n          <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n        </div>\n\n        <div class=\"table-container\">\n\n          <table id=\"usually-table\" class=\"table table-hover my-4\" style=\"display: none;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th scope=\"col\" class=\"fs-6\">検査依頼ID</th>\n                <th scope=\"col\" class=\"fs-6\">検査項目</th>\n                <th scope=\"col\" class=\"fs-6\">出荷日（検査完了希望日）</th>\n                <th scope=\"col\" class=\"fs-6\">入荷日</th>\n                <th scope=\"col\" class=\"fs-6\">客先</th>\n                <th scope=\"col\" class=\"fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">品名</th>\n                <th scope=\"col\" class=\"fs-6\">検査数(n)</th>\n                <th scope=\"col\" class=\"fs-6\">生産場所</th>\n                <th scope=\"col\" class=\"fs-6\">検査書</th>\n                <th scope=\"col\" class=\"fs-6\">備考</th>\n                <th scope=\"col\" class=\"fs-6\">検査結果</th>\n                <th scope=\"col\" class=\"fs-6\">検査依頼者</th>\n                <th scope=\"col\" class=\"fs-6\">CSV取得</th>\n              </tr> \n            </thead>\n            <tbody id=\"usually-table-body\"></tbody>\n          </table>\n\n          <table id=\"china-table\" class=\"table table-hover my-4\" style=\"display: none;\">\n            <thead class=\"table-light\">\n              <tr>\n                <th scope=\"col\" class=\"fs-6\">検査依頼ID</th>\n                <th scope=\"col\" class=\"fs-6\">LOT(船)</th>\n                <th scope=\"col\" class=\"fs-6\">入荷日</th>\n                <th scope=\"col\" class=\"fs-6\">品番</th>\n                <th scope=\"col\" class=\"fs-6\">数量</th>\n                <th scope=\"col\" class=\"fs-6\">箱数</th>\n                <th scope=\"col\" class=\"fs-6\">行先</th>\n                <th scope=\"col\" class=\"fs-6\">検査数(n)</th>\n                <th scope=\"col\" class=\"fs-6\">検査完了希望日</th>\n                <th scope=\"col\" class=\"fs-6\">検査結果</th>\n                <th scope=\"col\" class=\"fs-6\">検査依頼者</th>\n                <th scope=\"col\" class=\"fs-6\">CSV取得</th>\n              </tr> \n            </thead>\n            <tbody id=\"china-table-body\"></tbody>\n          </table>\n          \n        </div> \n\n      </form>  \n\n         \n\n    \n    </div>  \n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n     \n  </body>\n</html>\n",
        "output": "str",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "408cb149eaf1e7b5"
            ]
        ]
    },
    {
        "id": "408cb149eaf1e7b5",
        "type": "http response",
        "z": "2558d404ae0e72fe",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 60,
        "wires": []
    },
    {
        "id": "0b6d6801e397e76d",
        "type": "template",
        "z": "2558d404ae0e72fe",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".table-container {\n    max-height: 400px;\n    overflow-y: scroll;\n}\n\n.table-container thead {\n    position: sticky;\n    top: 0;\n    background-color: #fff;\n}\n\n#usually-table thead,\n#china-table thead {\n  white-space: nowrap;\n  width: 100%;\n  position: sticky;\n  top: 0; /* ヘッダー行を上部に固定 */\n  z-index: 2;\n  background-color: #ffffff; /* ヘッダーの背景色を設定 */\n}\n\n#china-table-body,\n#usually-table-body {\n  white-space: nowrap;\n  width: 100%;\n}\n\n.form-select.align-middle {\n    line-height: 1;\n}\n\n\n  /* ラジオボタンの表示文字を大きくするスタイルを追加 */\n.radio-text-lg {\n    font-size: 1.25rem; /* フォントサイズを大きくする */\n}\n\n  /* 幅を揃えるクラスのスタイル */\n.btn-equal-width {\n    width: 100%;\n}\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "cb9dd7d2a883d7eb"
            ]
        ]
    },
    {
        "id": "46c3f155fb850200",
        "type": "websocket in",
        "z": "2558d404ae0e72fe",
        "name": "",
        "server": "29248f9b61b0b53d",
        "client": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "31811bab8540911f"
            ]
        ]
    },
    {
        "id": "31811bab8540911f",
        "type": "json",
        "z": "2558d404ae0e72fe",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "7ac858dd8d544cc3"
            ]
        ]
    },
    {
        "id": "f578b03504dd79a5",
        "type": "mysql",
        "z": "2558d404ae0e72fe",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 240,
        "wires": [
            [
                "340710fd622af99a"
            ]
        ]
    },
    {
        "id": "91ba9d19c527603e",
        "type": "websocket out",
        "z": "2558d404ae0e72fe",
        "name": "",
        "server": "29248f9b61b0b53d",
        "client": "",
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ac858dd8d544cc3",
        "type": "link call",
        "z": "2558d404ae0e72fe",
        "name": "SELECT * FROM InspectionRequest",
        "links": [
            "7931cefd2aa246f2"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "91ba9d19c527603e"
            ]
        ]
    },
    {
        "id": "7931cefd2aa246f2",
        "type": "link in",
        "z": "2558d404ae0e72fe",
        "name": "SELECT * FROM InspectionRequest",
        "links": [],
        "x": 575,
        "y": 240,
        "wires": [
            [
                "c4f7047678c51852"
            ]
        ]
    },
    {
        "id": "340710fd622af99a",
        "type": "link out",
        "z": "2558d404ae0e72fe",
        "name": "link out 7",
        "mode": "return",
        "links": [],
        "x": 1095,
        "y": 240,
        "wires": []
    },
    {
        "id": "79baa7234f471f2d",
        "type": "websocket in",
        "z": "2558d404ae0e72fe",
        "name": "",
        "server": "e27c1cfeb59dcddc",
        "client": "",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "2b69850e4f223fdb"
            ]
        ]
    },
    {
        "id": "2b69850e4f223fdb",
        "type": "json",
        "z": "2558d404ae0e72fe",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "485770b47c6e4097"
            ]
        ]
    },
    {
        "id": "485770b47c6e4097",
        "type": "function",
        "z": "2558d404ae0e72fe",
        "name": "Build update shipping",
        "func": "\nvar records = msg.payload; \n\nvar updateQueries = [];\n\nrecords.forEach(function (record) {\n    var updateQuery = \"UPDATE InspectionRequest SET DownloadStatus = 1 WHERE RequestID  = '\" + record['検査依頼ID'] + \"'\";\n    updateQueries.push(updateQuery);\n});\n\nmsg.payload = updateQueries;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "94a3d8dfa679d151"
            ]
        ]
    },
    {
        "id": "94a3d8dfa679d151",
        "type": "split",
        "z": "2558d404ae0e72fe",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 180,
        "wires": [
            [
                "f8b2e247d03d6635"
            ]
        ]
    },
    {
        "id": "f8b2e247d03d6635",
        "type": "change",
        "z": "2558d404ae0e72fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 180,
        "wires": [
            [
                "5ea013cfaec01007"
            ]
        ]
    },
    {
        "id": "5ea013cfaec01007",
        "type": "mysql",
        "z": "2558d404ae0e72fe",
        "mydb": "eae7675ec94dec0c",
        "name": "",
        "x": 1000,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c4f7047678c51852",
        "type": "function",
        "z": "2558d404ae0e72fe",
        "name": "SELECT * FROM InspectionRequest",
        "func": "var radioSelection = msg.payload.radioSelection\n\nif(radioSelection === '中国'){\n\n    var baseQuery = \"SELECT IR.RequestID, IR.InspectionCategory, IR.ContainerLot, IR.ArrivalDay, IR.ProductNumber, IR.ArrivalQuantity, IR.BoxQuantity, IR.Destination, IR.InspectionQuantity, IR.CompletionDate, IR.WorkerName, IR.DownloadStatus, QC.r_passed, QC.r_display \" +\n        \"FROM location.InspectionRequest as IR \" +\n        \"LEFT JOIN qc.report as QC ON IR.RequestID = QC.r_request_id AND QC.r_display = 1 \" +\n        \"WHERE IR.InspectionCategory = '中国'\";\n\n\n    var conditions = [];\n\n    if (msg.payload.containerLot.trim() !== '') {\n        conditions.push(\"IR.ContainerLot = '\" + msg.payload.containerLot + \"'\");\n    }\n\n    if (msg.payload.arrivalDay.trim() !== '') {\n        conditions.push(\"IR.ArrivalDay = '\" + msg.payload.arrivalDay + \"'\");\n    }\n\n    if (conditions.length > 0) {\n        baseQuery += \" AND \" + conditions.join(\" AND \");\n    }\n\n    baseQuery += \" ORDER BY IR.RequestID, IR.ContainerLot, IR.ArrivalDay, IR.ProductNumber;\";\n\n    \n\n}else{\n\n    var baseQuery = \"SELECT IR.RequestID, IR.InspectionCategory, IR.ContainerLot, IR.CompletionDate, IR.ArrivalDay, IR.Customer, IR.ProductNumber, IR.ProductName, IR.InspectionQuantity, IR.ProductionLocation, IR.InspectionReport, IR.Remarks, IR.WorkerName, IR.DownloadStatus, QC.r_passed, QC.r_display \" +\n        \"FROM location.InspectionRequest as IR \" +\n        \"LEFT JOIN qc.report as QC ON IR.RequestID = QC.r_request_id AND QC.r_display =1 \" +\n        \"WHERE IR.InspectionCategory <> '中国'\";\n\n    var conditions = [];\n\n    if (msg.payload.customer.trim() !== '') {\n        conditions.push(\"IR.Customer = '\" + msg.payload.customer + \"'\");\n    }\n\n    if (msg.payload.arrivalDay.trim() !== '') {\n        conditions.push(\"IR.ArrivalDay = '\" + msg.payload.arrivalDay + \"'\");\n    }\n\n    if (conditions.length > 0) {\n        baseQuery += \" AND \" + conditions.join(\" AND \");\n    }\n\n    baseQuery += \"ORDER BY IR.RequestID, IR.Customer, IR.ProductNumber;\";    \n\n}\n\nmsg.topic = baseQuery;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "f578b03504dd79a5"
            ]
        ]
    },
    {
        "id": "7f5e7bd05152aced",
        "type": "file in",
        "z": "2558d404ae0e72fe",
        "name": "客先",
        "filename": "/home/kuwata/ktrg/客先.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "Shift_JIS",
        "allProps": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "4bee910d6a13234a"
            ]
        ]
    },
    {
        "id": "4bee910d6a13234a",
        "type": "function",
        "z": "2558d404ae0e72fe",
        "name": "CSVデータ処理",
        "func": "var csvData = msg.payload.split('\\n');\nvar choicescustomer = [];\n\nfor (var i = 0; i < csvData.length; i++) {\n    var row = csvData[i].replace('\\r', ''); // 改行コードを削除\n    choicescustomer.push(row); \n}\n\nmsg.choicescustomer = choicescustomer;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 60,
        "wires": [
            [
                "9ae97d365214838a"
            ]
        ]
    },
    {
        "id": "859baedf.02798",
        "type": "image",
        "z": "ecb17089.54a8f",
        "name": "",
        "width": "1920",
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1080,
        "y": 500,
        "wires": []
    },
    {
        "id": "b0995c69c1ed2197",
        "type": "usbcamera",
        "z": "ecb17089.54a8f",
        "filemode": "0",
        "filename": "image01.jpg",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "1",
        "name": "",
        "x": 610,
        "y": 440,
        "wires": [
            [
                "6cec4c4c32cab7db"
            ]
        ]
    },
    {
        "id": "66c689ae34ae81a9",
        "type": "template",
        "z": "ecb17089.54a8f",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style> \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js\"></script> \n  </head>\n\n  <body style=\"padding-top:4.5rem;\">\n    <header>\n      <nav class=\"navbar navbar-expand-md custom-navbar mb-4 fixed-top\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">\n            <img src=\"/ktrg-logo.png\" alt=\"KTRG\" width=\"30\" height=\"30\">\n          </span>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon custom-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            \n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link white-text\" href=\"/index\">メインメニュー</a>\n              </li> \n            </ul>\n\n          </div><!-- /.navbar-collapse -->\n        </div>\n      </nav>\n    </header>\n    <div class=\"header-space\"></div>\n\n    <div class=\"container\">\n\n      <div class=\"d-flex align-items-center border-bottom-solid\">\n        <h1 class=\"mb-1\">画像検査</h1>\n      </div>\n      \n      \n\n        <div class=\"info\">\n\n          \n          \n          <div class=\"col-12 mt-3\">\n            <input type=\"button\" value=\"カメラ起動\" class=\"btn btn-primary btn-lg\" id=\"startButton\">\n            <input type=\"button\" value=\"写真撮影\" class=\"btn btn-primary btn-lg\" id=\"photoshootButton\">\n            <input type=\"button\" value=\"検査\" class=\"btn btn-primary btn-lg\" id=\"inspectionButton\">\n            <input type=\"button\" value=\"クリア\" class=\"btn btn-primary btn-lg\" onclick=\"clearForm()\">\n          </div>\n          <div class=\"col-12 mt-3\">\n          <img id=\"cameraStream\" src=\"\" >\n          <img id=\"photograph\" src=\"\" >\n          </div>\n        </div>\n\n    \n    \n    </div>  \n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n     \n  </body>\n</html>\n",
        "output": "str",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "0ccd9eeb6e98d8b9"
            ]
        ]
    },
    {
        "id": "da3c065c73ee115a",
        "type": "http in",
        "z": "ecb17089.54a8f",
        "name": "",
        "url": "/page15",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "74917bf0df637202"
            ]
        ]
    },
    {
        "id": "0ccd9eeb6e98d8b9",
        "type": "http response",
        "z": "ecb17089.54a8f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "74917bf0df637202",
        "type": "template",
        "z": "ecb17089.54a8f",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "const HOST_NAME = window.location.hostname;\nconst START_BUTTON = document.getElementById('startButton');\nconst PHOTO_SHOOT_BUTTON = document.getElementById('photoshootButton');\nconst INSPECTION_BUTTON = document.getElementById('inspectionButton');\n\nSTART_BUTTON.addEventListener('click', () => {\n    let socket = new WebSocket(`wss://${HOST_NAME}/cameraStream`);\n    let cameraStream = document.getElementById('cameraStream');\n    socket.onopen = function (event) {\n        socket.send(HOST_NAME);\n    };\n    socket.onmessage = (event) => {\n        cameraStream.src = 'data:image/jpeg;base64,' + event.data;\n    };\n});\n\nPHOTO_SHOOT_BUTTON.addEventListener('click', () => {\n    let socket = new WebSocket(`wss://${HOST_NAME}/photoGraph`);\n    let photoGraph = document.getElementById('photograph');\n    socket.onopen = function (event) {\n        socket.send(HOST_NAME);\n    };\n    socket.onmessage = (event) => {\n        photoGraph.src = 'data:image/jpeg;base64,' + event.data;\n    };\n});\n\nINSPECTION_BUTTON.addEventListener('click', () => {\n\n    let socket = new WebSocket(`wss://${HOST_NAME}/inspectionPhoto`);\n    \n    socket.onopen = function (event) {\n        let photograph = document.getElementById('photograph').src;\n        let base64Image = photograph.split(',')[1];\n        socket.send(JSON.stringify({ image: base64Image }));\n    };\n\n    socket.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        console.log(data.image)\n        let photograph = document.getElementById('photograph');\n\n        // 画像データと処理結果を表示\n        if (data.image) {\n            \n            photograph.src =  data.image;\n        }\n\n        if (data.result) {\n            alert(data.result);\n            \n        }\n    };\n\n    // エラーハンドリング\n    socket.onerror = (error) => {\n        console.error('WebSocket Error:', error);\n    };\n\n    // WebSocketが閉じられたときの処理\n    socket.onclose = () => {\n        console.log('WebSocket connection closed');\n    };\n    \n\n\n});\n",
        "output": "str",
        "x": 620,
        "y": 260,
        "wires": [
            [
                "7d2a1271747fc3dd"
            ]
        ]
    },
    {
        "id": "9d71ca7774b1c24b",
        "type": "debug",
        "z": "ecb17089.54a8f",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "d4c0d3ba28758c17",
        "type": "exec",
        "z": "ecb17089.54a8f",
        "command": "python3 /home/kuwata/ktrg/camera2.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 680,
        "y": 380,
        "wires": [
            [
                "9d71ca7774b1c24b"
            ],
            [
                "9d71ca7774b1c24b"
            ],
            []
        ]
    },
    {
        "id": "e66874baf6cdd96e",
        "type": "websocket in",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "3cf43fcfd6ef4a2b",
        "client": "",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "a7f806dc0c8eec95"
            ]
        ]
    },
    {
        "id": "a7f806dc0c8eec95",
        "type": "usbcamera",
        "z": "ecb17089.54a8f",
        "filemode": "0",
        "filename": "image01.jpg",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "1",
        "name": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "fd0f236c0efbbb58"
            ]
        ]
    },
    {
        "id": "fd0f236c0efbbb58",
        "type": "function",
        "z": "ecb17089.54a8f",
        "name": "Encode Image to Base64",
        "func": "var imageBuffer = msg.payload;\nvar base64Image = imageBuffer.toString('base64');\n\nmsg.payload = base64Image;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "58b8372080e2697b"
            ]
        ]
    },
    {
        "id": "58b8372080e2697b",
        "type": "websocket out",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "3cf43fcfd6ef4a2b",
        "client": "",
        "x": 1120,
        "y": 180,
        "wires": []
    },
    {
        "id": "80038794.d9e178",
        "type": "inject",
        "z": "ecb17089.54a8f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "a7f806dc0c8eec95"
            ]
        ]
    },
    {
        "id": "6cec4c4c32cab7db",
        "type": "function",
        "z": "ecb17089.54a8f",
        "name": "Encode Image to Base64",
        "func": "var imageBuffer = msg.payload;\nvar base64Image = imageBuffer.toString('base64');\n\nmsg.payload = base64Image;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 440,
        "wires": [
            [
                "35008a3653b1fa22"
            ]
        ]
    },
    {
        "id": "13c56b2697919e4f",
        "type": "websocket in",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "42a49a2f4b934d59",
        "client": "",
        "x": 460,
        "y": 520,
        "wires": [
            [
                "b0995c69c1ed2197"
            ]
        ]
    },
    {
        "id": "35008a3653b1fa22",
        "type": "websocket out",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "42a49a2f4b934d59",
        "client": "",
        "x": 1091,
        "y": 445,
        "wires": []
    },
    {
        "id": "7d2a1271747fc3dd",
        "type": "template",
        "z": "ecb17089.54a8f",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\n\n/* ヘッダーの高さに合わせた余白を設定 */\n.header-space {\n    height: 28px; \n}\n\n.custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "66c689ae34ae81a9"
            ]
        ]
    },
    {
        "id": "c359412b8864fbfa",
        "type": "http request",
        "z": "ecb17089.54a8f",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:5000/inspect",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "function_to_base64",
        "type": "function",
        "z": "ecb17089.54a8f",
        "name": "Prepare Request Payload",
        "func": "msg.payload = { image: msg.payload.split(',')[1] };  // Base64 part\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "http_request",
        "type": "http request",
        "z": "ecb17089.54a8f",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.10.100:5000/inspect",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 970,
        "y": 680,
        "wires": [
            [
                "debug_node",
                "c0a8d495edb8eff4"
            ]
        ]
    },
    {
        "id": "debug_node",
        "type": "debug",
        "z": "ecb17089.54a8f",
        "name": "Debug Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "c5f32217e7c5eefa",
        "type": "websocket in",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "b09615408a7c6087",
        "client": "",
        "x": 520,
        "y": 760,
        "wires": [
            [
                "http_request"
            ]
        ]
    },
    {
        "id": "c0a8d495edb8eff4",
        "type": "websocket out",
        "z": "ecb17089.54a8f",
        "name": "",
        "server": "b09615408a7c6087",
        "client": "",
        "x": 1220,
        "y": 720,
        "wires": []
    },
    {
        "id": "b924dbcf08f9f9eb",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body>\n    <h1>画像検査</h1>\n    <div class=\"col-12 mt-3\">\n      <button id=\"cameraButton\" class=\"btn btn-primary btn-lg\">カメラ起動</button>\n      <button id=\"inspectionButton\" class=\"btn btn-primary btn-lg\">検査</button>\n      <input type=\"file\" accept=\"image/*\" id=\"camera\" capture=\"environment\">\n      <div id=\"result\"></div>\n    </div>  \n\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n     \n  </body>\n</html>\n",
        "output": "str",
        "x": 630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "25d50c093db9331b",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n#camera {\n  display: none;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "b924dbcf08f9f9eb"
            ]
        ]
    },
    {
        "id": "cb6bfa0fe6d559cf",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.getElementById('cameraButton').addEventListener('click', function () {\n    document.getElementById('camera').click();\n});\n\ndocument.getElementById('camera').addEventListener('change', function (event) {\n    if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const img = document.createElement('img');\n            img.src = e.target.result;\n            document.getElementById('result').innerHTML = '';\n            document.getElementById('result').appendChild(img);\n        }\n        reader.readAsDataURL(file);\n    }\n});",
        "output": "str",
        "x": 380,
        "y": 80,
        "wires": [
            [
                "25d50c093db9331b"
            ]
        ]
    },
    {
        "id": "3442d406772fc4a0",
        "type": "http in",
        "z": "c5fffd2621f77512",
        "name": "",
        "url": "/inspectionCamer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "30fe759d25b1aa20"
            ]
        ]
    },
    {
        "id": "a5e7f0269ad39312",
        "type": "http response",
        "z": "c5fffd2621f77512",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "30fe759d25b1aa20",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "javascript",
        "field": "js.javascriptfile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "document.getElementById('cameraButton').addEventListener('click', function () {\n    const video = document.getElementById('video');\n    const captureButton = document.getElementById('captureButton');\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: { facingMode: 'user' } })\n            .then(function (stream) {\n                video.srcObject = stream;\n                video.play();\n                captureButton.style.display = 'inline';\n            })\n            .catch(function (err) {\n                console.log(\"An error occurred: \" + err);\n            });\n    }\n});\n\ndocument.getElementById('captureButton').addEventListener('click', function () {\n    const canvas = document.getElementById('canvas');\n    const context = canvas.getContext('2d');\n    const video = document.getElementById('video');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const img = document.createElement('img');\n    img.src = canvas.toDataURL('image/png');\n    document.getElementById('result').innerHTML = '';\n    document.getElementById('result').appendChild(img);\n});",
        "output": "str",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "cec443eca90732b4"
            ]
        ]
    },
    {
        "id": "917a8f1c1070c91a",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <base target=\"_top\">\n    <link href=\"/bootstrap-5.0.2-dist/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\n    <style>\n     {{{css.cssfile}}}\n    </style>  \n  </head>\n\n  <body>\n    <h1>画像検査</h1>\n    <div class=\"col-12 mt-3\">\n      <button id=\"cameraButton\" class=\"btn btn-primary btn-lg\">カメラ起動</button>\n      <button id=\"inspectionButton\" class=\"btn btn-primary btn-lg\">検査</button>\n      <video id=\"video\" autoplay></video>\n      <button id=\"captureButton\" style=\"display: none;\">Capture</button>\n      <canvas id=\"canvas\" style=\"display: none;\"></canvas>\n      <div id=\"result\"></div>\n    </div>  \n\n\n    <script src=\"/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n    {{{js.javascriptfile}}}\n    </script>   \n     \n  </body>\n</html>\n",
        "output": "str",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "a5e7f0269ad39312"
            ]
        ]
    },
    {
        "id": "cec443eca90732b4",
        "type": "template",
        "z": "c5fffd2621f77512",
        "name": "css",
        "field": "css.cssfile",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".custom-navbar {\n    background-color: #033f66;\n    color: white;\n}\n\n.navbar-nav .nav-link.white-text {\n    color: white;\n}\n\n.border-bottom-solid {\n    border-bottom: 1px solid;\n  }\n\n/* カスタムスタイル */\n.navbar-toggler {\n  border: 1px solid white; /* ボーダーを白色にする */\n  background-color: transparent; /* 背景色を透明にする */\n}\n\n.custom-toggler-icon {\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='white'%3E%3Cpath stroke='white' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\");\n}\n\n#camera {\n  display: none;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n\n\n\n\n\n\n\n",
        "output": "str",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "917a8f1c1070c91a"
            ]
        ]
    }
]